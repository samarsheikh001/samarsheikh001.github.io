(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{303:function(n,l,t){var content=t(318);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(48).default)("e3ff8dd4",content,!0,{sourceMap:!1})},317:function(n,l,t){"use strict";t(303)},318:function(n,l,t){var h=t(47)((function(i){return i[1]}));h.push([n.i,"/*purgecss start ignore*/\n.highlight{\n  background:grey\n}\n\n/*purgecss end ignore*/",""]),h.locals={},n.exports=h},328:function(n,l,t){"use strict";t.r(l);var h={data:function(){return{body:'<p><strong>Hey there</strong> ðŸ‘‹</p>\n\n<p>I\'m back with another entry to this series, so... Javascript right? We all love and hate it, yet have no choice but to use it if we want to create interactive websites (<em>kinda</em>).  As a result, many developers know Javascript or have at least used it on some occasion. </p>\n\n<p>Consider this post as a comparison between some common aspects of both JS and Dart applications (like <em>async code, handling lists/arrays</em>). </p>\n\n<h2>\n  <a name="table-of-contents" href="#table-of-contents">\n  </a>\n  Table Of Contents\n</h2>\n\n<ul>\n<li><a href="#entrypoints">Entrypoints</a></li>\n<li><a href="#logging">Logging</a></li>\n<li><a href="#functions">Functions</a></li>\n<li><a href="#boolean-checks">Boolean checks</a></li>\n<li><a href="#futurespromises">Futures/Promises</a></li>\n<li><a href="#asyncawait">Async/Await</a></li>\n<li><a href="#mapsobjects">Maps/Objects</a></li>\n<li><a href="#running-an-app">Running an app</a></li>\n<li><a href="#learning-more">Learning more</a></li>\n</ul>\n\n<h2>\n  <a name="entrypoints" href="#entrypoints">\n  </a>\n  Entrypoints\n</h2>\n\n<p>The first step to creating an app is launching/starting it. In dart, an entry-point function is required for all applications, in contrast to Javascript where it\'s up to you to define such a function. Note that if you use a framework it might require you to define an entry-point of some sort. </p>\n\n<p>Let\'s see how Dart does it and then show some examples of how we do that in javascript and some frameworks.</p>\n\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n<p>In dart, all applications are required to start with a <code>main()</code> function.<br>\n</p>\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="o">)</span> <span class="o">{</span>\n    <span class="c1">// Your initial code would go here</span>\n<span class="o">}</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h4>\n  <a name="flutter" href="#flutter">\n  </a>\n  Flutter\n</h4>\n\n<p>In flutter, we are also required to define a <code>main()</code> function. But to start the app we must call the <code>runApp()</code> function. This will bootstrap and start our app:<br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="o">)</span> <span class="o">{</span>\n    <span class="n">runApp</span><span class="o">(</span><span class="kd">const</span> <span class="n">MyApp</span><span class="o">());</span>\n<span class="o">}</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  Javascript\n</h3>\n\n<p>Javascript is not as strict and doesn\'t force us to write a <code>main</code> function or any kind of entry-point really. Some might start directly when the script loads, or maybe wait until the page is fully loaded. Others might only start when a button is clicked and so on.</p>\n\n<p><strong>When script loads:</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">function</span> <span class="nx">startHere</span><span class="p">()</span> <span class="p">{</span>\n    <span class="c1">// Your initial code would go here</span>\n<span class="p">}</span>\n\n<span class="nx">startHere</span><span class="p">();</span> <span class="c1">// Called when script is loaded</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>When page loads:</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">function</span> <span class="nx">startHere</span><span class="p">()</span> <span class="p">{</span>\n    <span class="c1">// Your initial code would go here</span>\n<span class="p">}</span>\n\n<span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">\'</span><span class="s1">load</span><span class="dl">\'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>\n    <span class="c1">// Called when the page fully loaded all the HTML and external resources</span>\n<span class="p">});</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h4>\n  <a name="angular" href="#angular">\n  </a>\n  Angular\n</h4>\n\n<p>Angular does not require us to define an entry-point function, but it requires us to create a <code>main</code> file where we will bootstrap/start our application. That file would look something like this:<br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight typescript"><code><span class="c1">// imports...</span>\n\n<span class="nx">platformBrowserDynamic</span><span class="p">()</span>\n    <span class="p">.</span><span class="nx">bootstrapModule</span><span class="p">(</span><span class="nx">AppModule</span><span class="p">)</span>\n    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">));</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<blockquote>\n<p>Angular uses TypeScript but it\'s the same drill.</p>\n</blockquote>\n<h4>\n  <a name="react-native" href="#react-native">\n  </a>\n  React Native\n</h4>\n\n<p>React native somewhat forces you to create an entry-point in the form of a React Component.<br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">\'</span><span class="s1">react</span><span class="dl">\'</span><span class="p">;</span>\n<span class="k">import</span> <span class="p">{</span> <span class="nx">Text</span><span class="p">,</span> <span class="nx">View</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">\'</span><span class="s1">react-native</span><span class="dl">\'</span><span class="p">;</span>\n\n<span class="kd">const</span> <span class="nx">HelloWorldApp</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>\n  <span class="k">return</span> <span class="p">(</span>\n    <span class="o">&lt;</span><span class="nx">View</span>\n      <span class="nx">style</span><span class="o">=</span><span class="p">{{</span>\n        <span class="na">flex</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>\n        <span class="na">justifyContent</span><span class="p">:</span> <span class="dl">"</span><span class="s2">center</span><span class="dl">"</span><span class="p">,</span>\n        <span class="na">alignItems</span><span class="p">:</span> <span class="dl">"</span><span class="s2">center</span><span class="dl">"</span>\n      <span class="p">}}</span><span class="o">&gt;</span>\n      <span class="o">&lt;</span><span class="nx">Text</span><span class="o">&gt;</span><span class="nx">Hello</span><span class="p">,</span> <span class="nx">world</span><span class="o">!&lt;</span><span class="sr">/Text</span><span class="err">&gt;\n</span>    <span class="o">&lt;</span><span class="sr">/View</span><span class="err">&gt;\n</span>  <span class="p">)</span>\n<span class="p">}</span>\n<span class="k">export</span> <span class="k">default</span> <span class="nx">HelloWorldApp</span><span class="p">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="logging" href="#logging">\n  </a>\n  Logging\n</h2>\n\n<p>Dart does not offer such a variety of logging possibilities as the Javascript console. We are limited to just a single method <code>print</code>, without adding external packages (like <a href="https://pub.dev/packages/logger">logger</a>).</p>\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kd">var</span> <span class="n">example</span> <span class="o">=</span> <span class="s">\'"I will, I do, I can, I should could do, yeh"\'</span><span class="o">;</span>\n<span class="n">print</span><span class="o">(</span><span class="s">\'I can only log a single string, but can easily interpolate variables like this: </span><span class="si">$example</span><span class="s">\'</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  JavaScript\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">let</span> <span class="nx">example</span> <span class="o">=</span> <span class="dl">\'</span><span class="s1">"I will, I do, I can, I should could do, yeh"</span><span class="dl">\'</span><span class="p">;</span>\n<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">\'</span><span class="s1">I can only log more than a single string, </span><span class="dl">\'</span><span class="p">,</span> <span class="s2">`but can easily interpolate variables like this: </span><span class="p">${</span><span class="nx">example</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="functions" href="#functions">\n  </a>\n  Functions\n</h2>\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  Javascript\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="c1">// Regular function</span>\n<span class="kd">function</span> <span class="nx">canFly</span><span class="p">(</span><span class="nx">player</span><span class="p">)</span> <span class="p">{</span>\n    <span class="k">return</span> <span class="nx">player</span><span class="p">.</span><span class="nx">hasWings</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">player</span><span class="p">.</span><span class="nx">isAChicken</span><span class="p">;</span>\n<span class="p">}</span>\n\n<span class="c1">// Arrow function</span>\n<span class="kd">const</span> <span class="nx">canRespawn</span> <span class="o">=</span> <span class="p">(</span><span class="nx">player</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">player</span><span class="p">.</span><span class="nx">isInmortal</span><span class="p">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">canFly</span><span class="o">(</span><span class="n">Player</span> <span class="n">player</span><span class="o">)</span> <span class="o">{</span>\n    <span class="k">return</span> <span class="n">player</span><span class="o">.</span><span class="na">hasWings</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">player</span><span class="o">.</span><span class="na">isAChicken</span><span class="o">;</span>\n<span class="o">}</span>\n\n<span class="c1">// or specifying the type</span>\n<span class="kt">bool</span> <span class="nf">canFly</span><span class="p">(</span><span class="n">Player</span> <span class="n">player</span><span class="o">)</span> <span class="o">{</span>\n    <span class="k">return</span> <span class="n">player</span><span class="o">.</span><span class="na">hasWings</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">player</span><span class="o">.</span><span class="na">isAChicken</span><span class="o">;</span>\n<span class="o">}</span>\n\n<span class="c1">// Arrow function</span>\n<span class="kt">bool</span> <span class="n">canRespawn</span> <span class="o">=</span> <span class="o">(</span><span class="n">Player</span> <span class="n">player</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">player</span><span class="o">.</span><span class="na">isInmortal</span><span class="o">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="boolean-checks" href="#boolean-checks">\n  </a>\n  Boolean checks\n</h2>\n\n<p>In Javascript <code>0</code>, <code>null</code>, <code>undefined</code>, an empty string (<code>\'\'</code>) are all evaluated as <code>false</code>. And <code>1</code> and any other <code>non-null</code> value is evaluated as <code>true</code>. </p>\n\n<p><a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GTgjDOVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc1mx46n278uzml200p1.png" class="article-body-image-wrapper"><img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GTgjDOVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lc1mx46n278uzml200p1.png" alt="Just a meme image on javascript bool checks" loading="lazy"></a></p>\n\n<p>Dart only considers the boolean value <code>true</code> as true. So let\'s have a close look at how to perform some common checks:</p>\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  Javascript\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">let</span> <span class="nx">undefinedValue</span> <span class="o">=</span> <span class="kc">undefined</span><span class="p">;</span>\n<span class="kd">let</span> <span class="nx">nullValue</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>\n<span class="kd">let</span> <span class="nx">value</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>\n<span class="kd">let</span> <span class="nx">emptyString</span> <span class="o">=</span> <span class="dl">\'\'</span><span class="p">;</span>\n\n<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">undefinedValue</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>\n<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">nullValue</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>\n<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">value</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>\n<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">emptyString</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<ul>\n<li>\n<code>0</code>, <code>null</code>, <code>undefined</code>, and <code>\'\'</code> are all being treated as <code>false</code>.</li>\n</ul>\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kd">var</span> <span class="n">nullValue</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>\n<span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>\n<span class="kt">String</span> <span class="n">emptyString</span> <span class="o">=</span> <span class="s">\'\'</span><span class="o">;</span>\n\n<span class="k">if</span><span class="o">(</span><span class="n">nullValue</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>\n<span class="k">if</span><span class="o">(</span><span class="n">value</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>\n<span class="k">if</span><span class="o">(</span><span class="n">emptyString</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">)</span> <span class="k">return</span><span class="o">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p>As you can see, in Dart we must implicitly check if it\'s a certain value. Nothing is treated as a boolean, except booleans themselves (makes sense).</p>\n\n<ul>\n<li>We must use the <code>==</code> equality operator to implicitly check for <code>null</code>, <code>0</code>, and other values</li>\n<li>For empty string we can use the built-in <code>isEmpty()</code> method</li>\n</ul>\n\n<hr>\n<h2>\n  <a name="futurespromises" href="#futurespromises">\n  </a>\n  Futures/Promises\n</h2>\n\n<p>Both Javascript and Dart support single-threaded execution. Javascript offers the Promise object to handle this, while in Dart we use <a href="https://dart.dev/codelabs/async-await"><code>Future</code></a> objects. These classes represent the eventual completion or failure of some operation.</p>\n\n<p>We commonly use <a href="https://dart.dev/codelabs/async-await"><code>Futures</code></a> and <code>Promises</code> objects when calling remote APIs via HTTP requests, as they take a long time to complete. Synchronously doing this operation would freeze the application until the operation either fails or completes.</p>\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  Javascript\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code>\n<span class="kd">function</span> <span class="nx">answerOfLife</span><span class="p">()</span> <span class="p">{</span>\n    <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">\'</span><span class="s1">https://answeroflife.ai/give-it-to-me</span><span class="dl">\'</span><span class="p">;</span>\n    <span class="k">return</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>\n        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">result</span><span class="p">.</span><span class="nx">json</span><span class="p">());</span>\n<span class="p">}</span>\n\n<span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">answerOfLife</span><span class="p">()</span>\n    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">result</span><span class="p">.</span><span class="nx">answer</span><span class="p">)</span>\n    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">));</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kn">import</span> <span class="s">\'package:http/http.dart\'</span> <span class="k">as</span> <span class="n">http</span><span class="o">;</span>\n<span class="kn">import</span> <span class="s">\'dart:convert\'</span><span class="o">;</span>\n\n<span class="n">Future</span><span class="o">&lt;</span><span class="n">Response</span><span class="o">&gt;</span> <span class="n">answerOfLife</span><span class="o">()</span> <span class="o">{</span>\n    <span class="kd">const</span> <span class="n">url</span> <span class="o">=</span> <span class="s">\'https://answeroflife.ai/give-it-to-me\'</span><span class="o">;</span>\n    <span class="k">return</span> <span class="n">http</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>\n        <span class="o">.</span><span class="na">then</span><span class="o">((</span><span class="n">response</span><span class="o">)</span> <span class="o">=&gt;</span>  <span class="n">jsonDecode</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">));</span>\n<span class="o">}</span>\n\n<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="o">)</span> <span class="o">{</span>\n    <span class="kd">var</span> <span class="n">result</span> <span class="o">=</span> <span class="n">answerOfLife</span><span class="o">()</span>\n        <span class="o">.</span><span class="na">then</span><span class="o">((</span><span class="n">response</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">response</span><span class="o">.</span><span class="na">answer</span><span class="o">)</span>\n        <span class="o">.</span><span class="na">catchError</span><span class="o">((</span><span class="n">error</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">print</span><span class="o">(</span><span class="n">error</span><span class="o">));</span>\n<span class="o">}</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n\n<blockquote>\n<p><strong>Did you know that you can create Web Apps with Flutter?</strong><br><br>\nIt seems it\'s not 100% ready for big scale applications, though it does the job with some work on our part.</p>\n</blockquote>\n\n<hr>\n<h2>\n  <a name="asyncawait" href="#asyncawait">\n  </a>\n  Async/Await\n</h2>\n\n<p>If you are familiar with Javascript async/await, Dart is almost exactly the same. We mark the function with the <code>async</code> keyword, then we can use the <code>await</code> keyword to wait for promises/futures to complete.</p>\n<h3>\n  <a name="javascript" href="#javascript">\n  </a>\n  Javascript\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code>\n<span class="kd">function</span> <span class="nx">answerOfLife</span><span class="p">()</span> <span class="p">{</span>\n    <span class="kd">const</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">\'</span><span class="s1">https://answeroflife.ai/give-it-to-me</span><span class="dl">\'</span><span class="p">;</span>\n    <span class="k">return</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>\n        <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">result</span><span class="p">.</span><span class="nx">json</span><span class="p">());</span>\n<span class="p">}</span>\n\n<span class="k">async</span> <span class="kd">function</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>\n    <span class="k">try</span> <span class="p">{</span>\n        <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">answerOfLife</span><span class="p">().</span><span class="nx">then</span><span class="p">(</span><span class="nx">result</span> <span class="o">=&gt;</span> <span class="nx">result</span><span class="p">.</span><span class="nx">answer</span><span class="p">);</span>\n    <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>\n        <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">error</span><span class="p">);</span>\n    <span class="p">}</span>\n<span class="p">}</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="dart" href="#dart">\n  </a>\n  Dart\n</h3>\n\n\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kn">import</span> <span class="s">\'package:http/http.dart\'</span> <span class="k">as</span> <span class="n">http</span><span class="o">;</span>\n<span class="kn">import</span> <span class="s">\'dart:convert\'</span><span class="o">;</span>\n\n<span class="n">Future</span><span class="o">&lt;</span><span class="n">Response</span><span class="o">&gt;</span> <span class="n">answerOfLife</span><span class="o">()</span> <span class="o">{</span>\n    <span class="kd">const</span> <span class="n">url</span> <span class="o">=</span> <span class="s">\'https://answeroflife.ai/give-it-to-me\'</span><span class="o">;</span>\n    <span class="k">return</span> <span class="n">http</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">url</span><span class="o">)</span>\n        <span class="o">.</span><span class="na">then</span><span class="o">((</span><span class="n">response</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">jsonDecode</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">));</span>\n<span class="o">}</span>\n\n<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="o">)</span> <span class="n">async</span> <span class="o">{</span>\n    <span class="k">try</span> <span class="o">{</span>\n        <span class="kd">const</span> <span class="n">result</span> <span class="o">=</span> <span class="n">await</span> <span class="n">answerOfLife</span><span class="o">().</span><span class="na">then</span><span class="o">(</span><span class="n">result</span> <span class="o">=&gt;</span> <span class="n">result</span><span class="o">.</span><span class="na">answer</span><span class="o">);</span>\n    <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">e</span><span class="o">)</span> <span class="o">{</span>\n        <span class="n">print</span><span class="o">(</span><span class="n">error</span><span class="o">);</span>\n    <span class="o">}</span>\n<span class="o">}</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="arrayslists" href="#arrayslists">\n  </a>\n  Arrays/Lists\n</h2>\n\n<p>Dart handles arrays quite similarly to javascript, with some differences. Let\'s take a look at some of the most common list operations.</p>\n<h3>\n  <a name="creating-arrays" href="#creating-arrays">\n  </a>\n  Creating arrays\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="c1">// Typed list</span>\n<span class="n">List</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">steps</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">32</span><span class="o">,</span> <span class="mi">64</span><span class="o">];</span>\n\n<span class="c1">// Untyped list</span>\n<span class="n">List</span> <span class="n">stepsAndBabyNames</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="s">\'Jonathan\'</span><span class="o">,</span> <span class="mi">8</span><span class="o">,</span> <span class="s">\'Joseph\'</span><span class="o">,</span> <span class="mi">16</span><span class="o">,</span> <span class="mi">32</span><span class="o">,</span> <span class="s">\'Tommy\'</span><span class="o">,</span> <span class="mi">64</span><span class="o">];</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">const</span> <span class="nx">steps</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">];</span>\n<span class="kd">const</span> <span class="nx">stepsAndBabyNames</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="dl">\'</span><span class="s1">Jonathan</span><span class="dl">\'</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="dl">\'</span><span class="s1">Joseph</span><span class="dl">\'</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="dl">\'</span><span class="s1">Tommy</span><span class="dl">\'</span><span class="p">,</span> <span class="mi">64</span><span class="p">];</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="iterating-arrays" href="#iterating-arrays">\n  </a>\n  Iterating arrays\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="c1">// Using for-in loop</span>\n<span class="k">for</span><span class="o">(</span><span class="kd">var</span> <span class="n">step</span> <span class="k">in</span> <span class="n">steps</span><span class="o">)</span> <span class="o">{</span>\n    <span class="n">print</span><span class="o">(</span><span class="s">\'Step: </span><span class="si">$step</span><span class="s">\'</span><span class="o">);</span>\n<span class="o">}</span>\n\n<span class="c1">// Clasic for </span>\n<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">steps</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>\n    <span class="n">print</span><span class="o">(</span><span class="s">\'Step: </span><span class="si">${steps[i]}</span><span class="s">\'</span><span class="o">);</span>\n<span class="o">}</span>\n\n<span class="c1">// forEach</span>\n<span class="n">steps</span><span class="o">.</span><span class="na">forEach</span><span class="o">((</span><span class="n">step</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">print</span><span class="o">(</span><span class="s">\'Step: </span><span class="si">$step</span><span class="s">\'</span><span class="o">));</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="c1">// Using for-in loop</span>\n<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">step</span> <span class="k">in</span> <span class="nx">steps</span><span class="p">)</span> <span class="p">{</span>\n    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Step: </span><span class="p">${</span><span class="nx">step</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>\n<span class="p">}</span>\n\n<span class="c1">// Clasic for </span>\n<span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">steps</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>\n    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Step: </span><span class="p">${</span><span class="nx">steps</span><span class="p">[</span><span class="nx">i</span><span class="p">]}</span><span class="s2">`</span><span class="p">);</span>\n<span class="p">}</span>\n\n<span class="c1">// forEach</span>\n<span class="nx">steps</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">step</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`Step: $step`</span><span class="p">));</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="map-items" href="#map-items">\n  </a>\n  Map items\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span> <span class="o">=</span> <span class="n">steps</span><span class="o">.</span><span class="na">map</span><span class="o">((</span><span class="n">step</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">step</span> <span class="o">*</span> <span class="n">step</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<blockquote>\n<p>In dart we need to call <code>toList</code> to convert back to a List, as map returns a lazy Iterable (<a href="https://api.dart.dev/stable/1.10.1/dart-core/List/map.html">docs</a>))</p>\n</blockquote>\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span> <span class="o">=</span> <span class="nx">steps</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">step</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">step</span> <span class="o">*</span> <span class="nx">step</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="filter-items" href="#filter-items">\n  </a>\n  Filter items\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span> <span class="o">=</span> <span class="n">steps</span><span class="o">.</span><span class="na">where</span><span class="o">((</span><span class="n">step</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">step</span> <span class="o">&gt;</span> <span class="mi">16</span><span class="o">).</span><span class="na">toList</span><span class="o">();</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span> <span class="o">=</span> <span class="nx">steps</span><span class="p">.</span><span class="nx">filter</span><span class="p">((</span><span class="nx">step</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">step</span> <span class="o">&gt;</span> <span class="mi">16</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="get-a-part-of-the-list" href="#get-a-part-of-the-list">\n  </a>\n  Get a part of the list\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span><span class="o">.</span><span class="na">sublist</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="mi">4</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="item-exists" href="#item-exists">\n  </a>\n  Item exists\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="mi">16</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>\n<span class="nx">steps</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="find-index-of-item" href="#find-index-of-item">\n  </a>\n  Find index of item\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="mi">16</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="find-single-item" href="#find-single-item">\n  </a>\n  Find single item\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span><span class="o">.</span><span class="na">firstWhere</span><span class="o">((</span><span class="n">step</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="n">step</span> <span class="o">==</span> <span class="mi">16</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span><span class="p">.</span><span class="nx">find</span><span class="p">((</span><span class="nx">step</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">step</span> <span class="o">==</span> <span class="mi">16</span><span class="p">).</span><span class="nx">toList</span><span class="p">();</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h3>\n  <a name="has-items" href="#has-items">\n  </a>\n  Has items\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">steps</span><span class="o">.</span><span class="na">isNotEmpty</span><span class="o">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="nx">steps</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="mapsobjects" href="#mapsobjects">\n  </a>\n  Maps/Objects\n</h2>\n\n<p>Most languages offer some sort of data structure to create unstructured data, dart is not different and offers the Map type.</p>\n<h3>\n  <a name="creating-maps" href="#creating-maps">\n  </a>\n  Creating maps\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">info</span> <span class="o">=</span> <span class="o">{</span>\n    <span class="s">\'name\'</span><span class="o">:</span> <span class="s">\'Samuel\'</span><span class="o">,</span>\n    <span class="s">\'age\'</span><span class="o">:</span> <span class="mi">27</span><span class="o">,</span>\n<span class="o">};</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">const</span> <span class="nx">info</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="na">name</span><span class="p">:</span> <span class="dl">\'</span><span class="s1">Samuel</span><span class="dl">\'</span><span class="p">,</span>\n    <span class="na">age</span><span class="p">:</span> <span class="mi">27</span><span class="p">,</span>\n<span class="p">};</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name="serializingdeserializing-json" href="#serializingdeserializing-json">\n  </a>\n  Serializing/Deserializing JSON\n</h3>\n\n<p><strong>Dart</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight dart"><code><span class="kn">import</span> <span class="s">\'dart:convert\'</span><span class="o">;</span>\n\n<span class="n">Map</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">,</span> <span class="kd">dynamic</span><span class="o">&gt;</span> <span class="n">info</span> <span class="o">=</span> <span class="o">{</span>\n    <span class="s">\'name\'</span><span class="o">:</span> <span class="s">\'Samuel\'</span><span class="o">,</span>\n    <span class="s">\'age\'</span><span class="o">:</span> <span class="mi">27</span><span class="o">,</span>\n<span class="o">};</span>\n\n<span class="kd">var</span> <span class="n">encodedString</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">info</span><span class="o">);</span>\n<span class="kd">var</span> <span class="n">decodedMap</span> <span class="o">=</span> <span class="n">json</span><span class="o">.</span><span class="na">decode</span><span class="o">(</span><span class="n">infoString</span><span class="o">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><strong>Javascript</strong><br>\n</p>\n<div class="highlight js-code-highlight">\n<pre class="highlight javascript"><code><span class="kd">const</span> <span class="nx">info</span> <span class="o">=</span> <span class="p">{</span>\n    <span class="na">name</span><span class="p">:</span> <span class="dl">\'</span><span class="s1">Samuel</span><span class="dl">\'</span><span class="p">,</span>\n    <span class="na">age</span><span class="p">:</span> <span class="mi">27</span><span class="p">,</span>\n<span class="p">};</span>\n\n<span class="kd">const</span> <span class="nx">encodedString</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">info</span><span class="p">);</span>\n<span class="kd">const</span> <span class="nx">decodedMap</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">infoString</span><span class="p">);</span>\n</code></pre>\n<div class="highlight__panel js-actions-panel">\n<div class="highlight__panel-action js-fullscreen-code-action">\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-on"><title>Enter fullscreen mode</title>\n    <path d="M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z"></path>\n</svg>\n\n    <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewbox="0 0 24 24" class="highlight-action crayons-icon highlight-action--fullscreen-off"><title>Exit fullscreen mode</title>\n    <path d="M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n<h2>\n  <a name="running-an-app" href="#running-an-app">\n  </a>\n  Running an app\n</h2>\n\n<p>Running apps differs from language to language, and from framework to framework. </p>\n<h3>\n  <a name="flutter" href="#flutter">\n  </a>\n  Flutter\n</h3>\n\n<p>Let\'s first see how we do it in flutter:</p>\n\n<ul>\n<li>Using the run utility in the IDE</li>\n<li>Executing <code>flutter run</code> in the project root</li>\n</ul>\n<h3>\n  <a name="react-native" href="#react-native">\n  </a>\n  React Native\n</h3>\n\n<p>In react native we:</p>\n\n<ul>\n<li>use npm script <code>npm run</code>\n</li>\n<li>or yarn <code>npm run</code>\n</li>\n</ul>\n<h3>\n  <a name="angular" href="#angular">\n  </a>\n  Angular\n</h3>\n\n<ul>\n<li>Run <code>ng serve</code> in the project root</li>\n<li>Execute <code>npm start</code>\n</li>\n</ul>\n\n<hr>\n<h2>\n  <a name="learning-more" href="#learning-more">\n  </a>\n  Learning more\n</h2>\n\n<ul>\n<li><a href="https://flutter.dev/docs/get-started/flutter-for/react-native-devs">Introduction to Dart for JavaScript Developers</a></li>\n<li><a href="https://flutter.dev/docs/get-started/codelab#step-1-create-the-starter-flutter-app">First flutter app</a></li>\n</ul>\n<h2>\n  <a name="summary" href="#summary">\n  </a>\n  Summary\n</h2>\n\n<p>As seen in the post, Javascript and Dart have quite a few things in common. But differ in some aspects, such as handling booleans or working with arrays. This post just scratches the surface so let me know if you would like a follow-up!</p>\n\n<p>If you found this post useful, please consider checking <a href="https://dev.to/nombrekeff/flutter-styling-explained-in-css-llf-5-51nm">my previous post</a>. It\'s a similar format to this one but comparing the theming/styling aspects of Flutter against CSS.</p>\n\n\n<div class="ltag__link">\n  <a href="/nombrekeff" class="ltag__link__link">\n    <div class="ltag__link__pic">\n      <img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WSaJs7tF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hX7RfmcL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/187971/a5359a24-b652-46be-8898-2c5df32aa6e0.png" alt="nombrekeff" loading="lazy">\n    </div>\n  </a>\n  <a href="/nombrekeff/flutter-styling-explained-in-css-llf-5-51nm" class="ltag__link__link">\n    <div class="ltag__link__content">\n      <h2>Flutter styling explained in CSS - LLF #5</h2>\n      <h3>Keff ãƒ» Oct 1 ãƒ» 7 min read</h3>\n      <div class="ltag__link__taglist">\n        <span class="ltag__link__tag">#dart</span>\n        <span class="ltag__link__tag">#flutter</span>\n        <span class="ltag__link__tag">#css</span>\n        <span class="ltag__link__tag">#tutorial</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<p>And as always, thanks for reading. And remember to comment if you have any suggestions, doubts, or something you would like me to cover in these posts.</p>\n\n'}},methods:{scrollToComments:function(){var n=document.querySelector("#comments");if(n){var l=n.getBoundingClientRect().top;window.scrollBy({top:l-20,left:0,behavior:"smooth"})}}}},c=(t(317),t(16)),component=Object(c.a)(h,(function(){var n=this,l=n.$createElement;return(n._self._c||l)("div",{staticClass:"content",domProps:{innerHTML:n._s(n.body)}})}),[],!1,null,null,null);l.default=component.exports}}]);