__NUXT_JSONP__("/articles/baweaver/593689", (function(a,b,c,d,e){b.type_of="article";b.id=593689;b.title="Understanding Ruby - Triple Equals";b.description="Introduction   Triple Equals (===) in Ruby is one of the most powerful features in the entir...";b.readable_publish_date="Feb 6";b.slug="understanding-ruby-triple-equals-2p9c";b.path="\u002Fbaweaver\u002Funderstanding-ruby-triple-equals-2p9c";b.url=c;b.comments_count=3;b.public_reactions_count=d;b.collection_id=11177;b.published_timestamp=a;b.positive_reactions_count=d;b.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6WbUFO-O--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fpo69vxvghndx7qp5v5er.png";b.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JJwXCTND--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fpo69vxvghndx7qp5v5er.png";b.canonical_url=c;b.created_at=a;b.edited_at="2021-02-07T05:29:33Z";b.crossposted_at=null;b.published_at=a;b.last_comment_at="2021-06-17T02:24:55Z";b.reading_time_minutes=7;b.tag_list="ruby, rails, functional";b.tags=["ruby","rails","functional"];b.body_html="\u003Ch1\u003E\n  \u003Ca name=\"introduction\" href=\"#introduction\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Introduction\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ETriple Equals (\u003Ccode\u003E===\u003C\u002Fcode\u003E) in Ruby is one of the most powerful features in the entire language, but also one you may not know you're using either. In fact, it's one of the best kept secrets!\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe're going to learn a bit about those secrets today and explore \u003Ccode\u003E===\u003C\u002Fcode\u003E, how it's defined, what it does, and where it's hiding in your Ruby code today.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003ENote\u003C\u002Fstrong\u003E: This is a rewrite and expansion on an older post of mine from 2017, \u003Ca href=\"https:\u002F\u002Fmedium.com\u002Frubyinside\u002Ftriple-equals-black-magic-d934936a6379\"\u003ETriple Equals Black Magic\u003C\u002Fa\u003E, and includes updated syntax including Pattern Matching to examples.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"difficulty\" href=\"#difficulty\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Difficulty\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EFoundational\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ENo prerequisite knowledge needed. This post focuses on foundational and fundamental knowledge for Ruby programmers.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"triple-equals\" href=\"#triple-equals\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Triple Equals\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ESo what is it? How is it defined?\u003C\u002Fp\u003E\n\n\u003Cp\u003ESome coming from Javascript might have the notion that \u003Ccode\u003E===\u003C\u002Fcode\u003E is a stricter equality operator than \u003Ccode\u003E==\u003C\u002Fcode\u003E, but in Ruby it does something quite different. Defaultly it's an alias for \u003Ccode\u003E==\u003C\u002Fcode\u003E, but some classes do something much more interesting.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt goes by a few names: Case equality operator, membership operator, triple equals.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIts function is very much akin to checking to see if the value on the right is a member of whatever is on the left. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-its-implemented-in-ruby\" href=\"#how-its-implemented-in-ruby\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How it's Implemented in Ruby\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhat do I mean by that? Well let's take a look at a few classes real quick to see how it works.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EWARNING\u003C\u002Fstrong\u003E: Do not use \u003Ccode\u003E===\u003C\u002Fcode\u003E explicitly like this in code, prefer methods with clearer names. We'll see soon when it's acutally used, and often times in an implicit manner rather than explicitly using it.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"ranges\" href=\"#ranges\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Ranges\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EA range in Ruby has a starting point and an ending point, like \u003Ccode\u003E1..10\u003C\u002Fcode\u003E is a range from \u003Ccode\u003E1\u003C\u002Fcode\u003E to \u003Ccode\u003E10\u003C\u002Fcode\u003E. For it \u003Ccode\u003E===\u003C\u002Fcode\u003E works like \u003Ccode\u003Einclude?\u003C\u002Fcode\u003E which checks if the value on the right happens to be included within the range, or a member of the range:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Einclude?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ERanges are interesting in that they're not limited to numbers. Strings also work, and that makes range inclusion even more interesting:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"no\"\u003ESUPPORTS_PATTERN_MATCH_VERSIONS\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'2.7.0'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'3.0.0'\u003C\u002Fspan\u003E\n\u003Cspan class=\"no\"\u003ESUPPORTS_PATTERN_MATCH_VERSIONS\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'2.7.5'\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EGranted that example breaks once Ruby goes beyond \u003Ccode\u003E3.0.0\u003C\u002Fcode\u003E, but the point is range also recognizes types beyond Integer, and sometimes in interesting ways, but that's the subject for another post.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"regular-expressions\" href=\"#regular-expressions\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Regular Expressions\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ERegular Expressions are a language for matching against patterns in text, and for \u003Ccode\u003E===\u003C\u002Fcode\u003E it happens to work very much like \u003Ccode\u003Ematch?\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"sr\"\u003E\u002Fabc\u002F\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'abcdef'\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"sr\"\u003E\u002Fabc\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Ematch?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'abcdef'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ccode\u003E===\u003C\u002Fcode\u003E in this case is saying that there's a match, or that our string is a member of the set of matches this Regex refers to. Noticing a pattern?\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"classes\" href=\"#classes\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Classes\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ERuby has classes like \u003Ccode\u003EInteger\u003C\u002Fcode\u003E, \u003Ccode\u003EString\u003C\u002Fcode\u003E, and others. Normally you can check to see if something happens to be of a certain type using \u003Ccode\u003Eis_a?\u003C\u002Fcode\u003E. Not surprisingly \u003Ccode\u003E===\u003C\u002Fcode\u003E works much the same way here:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"no\"\u003EString\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'foo'\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"s1\"\u003E'foo'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eis_a?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ccode\u003E===\u003C\u002Fcode\u003E here is saying that \u003Ccode\u003E'foo'\u003C\u002Fcode\u003E is a member of the \u003Ccode\u003EString\u003C\u002Fcode\u003E class, or it's included in what we'd call Strings.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt should be noted that this works for about every Ruby core class in the standard library, but as it requires custom implementation there may be some more exotic cases which don't.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"functions-proc-and-lambda\" href=\"#functions-proc-and-lambda\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Functions (Proc and Lambda)\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ERuby has a few ways to express anonymous functions, procs and lambdas. There's also block, but we'll focus on those two for the moment. They can be expressed as such:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Eadd_one_proc\u003C\u002Fspan\u003E   \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Eproc\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe won't get into differences between all of them in this round, but note that I tend to prefer lambdas in general over procs.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo use these functions you'd need to use \u003Ccode\u003E.call\u003C\u002Fcode\u003E (or \u003Ccode\u003E[]\u003C\u002Fcode\u003E or \u003Ccode\u003E.()\u003C\u002Fcode\u003E), which you might not be surprised to find out is \u003Ccode\u003E===\u003C\u002Fcode\u003E as well:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ex\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; 2\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Ecall\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; 2\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; 2\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Eadd_one_lambda\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; 2\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis one is a head scratcher. How is \u003Ccode\u003E1\u003C\u002Fcode\u003E a member of a function? That doesn't make much sense, it's not really any type of collection or set is it? Well in Mathematics it's called the \u003Ca href=\"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDomain_of_a_function\"\u003Edomain of a function\u003C\u002Fa\u003E, or the set of which all valid inputs fall into, so that sounds a lot like membership too!\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"ip-addresses\" href=\"#ip-addresses\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  IP Addresses\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ERuby also has this lovely feature for all of us Operations and Networking types, \u003Ccode\u003EIPAddr\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"nb\"\u003Erequire\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'ipaddr'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"no\"\u003EIPAddr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'10.0.0.1'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can even express subnets using it:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Elocal_network\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EIPAddr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'192.168.1.0\u002F24'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Elocal_network\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Einclude?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'192.168.1.1'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIs your intuition dinging a bit? Because we have another case for \u003Ccode\u003E===\u003C\u002Fcode\u003E here:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Elocal_network\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'192.168.1.1'\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EFor this one we're checking if an IP Address is a member of a given subnet, further rounding out this interesting pattern. Ruby loves patterns, and math and programming in general have a certain affinity for them.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"a-case-for-raw-endraw-\" href=\"#a-case-for-raw-endraw-\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  A Case for \u003Ccode\u003E===\u003C\u002Fcode\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow this is all well and good, but the above warning said not to use \u003Ccode\u003E===\u003C\u002Fcode\u003E explicitly, so why spend all that time describing how it works? Because we're about to see the implicit through \u003Ccode\u003Ecase\u003C\u002Fcode\u003E statements.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou see, every \u003Ccode\u003Ewhen\u003C\u002Fcode\u003E branch in a \u003Ccode\u003Ecase\u003C\u002Fcode\u003E statement compares via \u003Ccode\u003E===\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1990\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1899\u003C\u002Fspan\u003E     \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:too_early\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1900\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1924\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:gi\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1925\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1945\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:silent\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1946\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1964\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:baby_boomers\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1965\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1979\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:generation_x\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1980\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2000\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:millenials\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E2000\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2010\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:generation_z\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E2010\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E     \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:generation_alpha\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"ss\"\u003E:who_knows\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; :millenials\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can even use commas to check against multiple possibilities:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'foobar'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EInteger\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:one\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EFloat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003ENilClass\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:two\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"ss\"\u003E:three\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThere's a lot of potential to check against whether a value is within an expected set, and with functions that gets even more interesting:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Edivisible_by\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edivisor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003En\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003En\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E%\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edivisor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E15\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Emap\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edo\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003En\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003En\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edivisible_by\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E15\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:fizzbuzz\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edivisible_by\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E5\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E  \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:buzz\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ewhen\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edivisible_by\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E  \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:fizz\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003En\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; [\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E#   1, 2, :fizz, 4, :buzz, :fizz, 7, 8, :fizz, :buzz,\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E#   11, :fizz, 13, 14, :fizzbuzz\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# ]\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EInteresting no?\u003C\u002Fp\u003E\n\n\u003Cp\u003EThere is one trick in there called a closure, which is a function which returns another function. That returned function remembers what the value of \u003Ccode\u003Edivisor\u003C\u002Fcode\u003E was, allowing us to check if somthing is divisible by it. It's a really useful trick from functional programming, and really shows the power of functions in Ruby, especially with things like \u003Ccode\u003Ecase\u003C\u002Fcode\u003E statements.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"enumerating-all-the-fun-we-can-have\" href=\"#enumerating-all-the-fun-we-can-have\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Enumerating All the Fun We Can Have\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Ccode\u003EEnumerable\u003C\u002Fcode\u003E also has a number of methods which take values that respond to \u003Ccode\u003E===\u003C\u002Fcode\u003E. Let's take a look at some examples.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"predicate-methods\" href=\"#predicate-methods\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Predicate Methods\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe predicate methods (\u003Ccode\u003Eany?\u003C\u002Fcode\u003E, \u003Ccode\u003Eall?\u003C\u002Fcode\u003E, \u003Ccode\u003Enone?\u003C\u002Fcode\u003E, \u003Ccode\u003Eone?\u003C\u002Fcode\u003E) all play well with \u003Ccode\u003E===\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'1'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:a\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E].\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eany?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EInteger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; true\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"the-search-is-on\" href=\"#the-search-is-on\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The Search is On\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ESearching methods like \u003Ccode\u003Egrep\u003C\u002Fcode\u003E (find all that match pattern) and \u003Ccode\u003Egrep_v\u003C\u002Fcode\u003E (find all that do \u003Cstrong\u003Enot\u003C\u002Fstrong\u003E match pattern) also implement a \u003Ccode\u003E===\u003C\u002Fcode\u003E interface:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"sx\"\u003E%w(The rain in spain falls mainly on the plain)\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Egrep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002Fthe\u002Fi\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; [\"The\", \"the\"]\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"slice-of-life\" href=\"#slice-of-life\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Slice of Life\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThere are also Slice methods that allow us to group elements by a pattern like \u003Ccode\u003Eslice_before\u003C\u002Fcode\u003E and \u003Ccode\u003Eslice_after\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Earray\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E7\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E9\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E4\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E14\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E5\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E13\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E6\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E12\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E15\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E11\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Earray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eslice_before\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eto_a\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; [[7, 9, 4, 1], [14, 5], [13, 8, 2, 6, 3], [12], [15], [11], [10]]\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Earray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eslice_after\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E5\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eto_a\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; [[7, 9, 4], [1], [14, 5], [13, 8, 2], [6, 3], [12, 15, 11, 10]]\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"pattern-matching\" href=\"#pattern-matching\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Pattern Matching\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow if you were excited about \u003Ccode\u003Ecase\u003C\u002Fcode\u003E statements let me tell you Pattern Matching is like a \u003Ccode\u003Ecase\u003C\u002Fcode\u003E statement with a lot of extra fun built in. We won't get into all the nuances of it, but every value is matched against using \u003Ccode\u003E===\u003C\u002Fcode\u003E. It uses \u003Ccode\u003Ein\u003C\u002Fcode\u003E rather than \u003Ccode\u003Ewhen\u003C\u002Fcode\u003E, which unlocks some additional features.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"arraylike\" href=\"#arraylike\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Array-Like\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIt supports two types of syntaxes, an Array-like match and a Hash-like match. Let's start with Array-like:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E10\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:close_to_base\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E100\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E100\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:venturing_out\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1000\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1000\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethen\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:pretty_far_out\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003E:way_out_there\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; :close_to_base\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIf we want we could even capture those values by name or a few other fun items, but we'll save that for another post.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"hashlike\" href=\"#hashlike\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Hash-like\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe next is Hash-like, and this is where things get interesting. Let's say we have a JSON API with some data and we got back that data and that data was in a variable called \u003Ccode\u003Eraw_json\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Eraw_json\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;&lt;~\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EJSON\u003C\u002Fspan\u003E\u003Cspan class=\"sh\"\u003E\n  [{\n    \"age\": 22,\n    \"eyeColor\": \"blue\",\n    \"name\": { \"first\": \"Trina\", \"last\": \"Chang\" },\n    \"friends\": [\"Browning Marsh\", \"Keisha Abbott\", \"Shawn Callahan\"]\n  }, {\n    \"age\": 32,\n    \"eyeColor\": \"brown\",\n    \"name\": { \"first\": \"Irma\", \"last\": \"Petersen\" },\n    \"friends\": [\"Koch Ballard\", \"Chandra Rodriquez\", \"Carmen Avery\"]\n  }, {\n    \"age\": 27,\n    \"eyeColor\": \"hazel\",\n    \"name\": { \"first\": \"Madeleine\", \"last\": \"Blake\" },\n    \"friends\": [\"Tina Massey\", \"Annette Yates\", \"Zelma Brennan\"]\n  }, {\n    \"age\": 20,\n    \"eyeColor\": \"green\",\n    \"name\": { \"first\": \"Horton\", \"last\": \"Haynes\" },\n    \"friends\": [\"Sophia Oconnor\", \"Sheila Wilkins\", \"Mia Molina\"]\n  }, {\n    \"age\": 12,\n    \"eyeColor\": \"brown\",\n    \"name\": { \"first\": \"Hull\", \"last\": \"Benson\" },\n    \"friends\": [\"Teresa Mack\", \"Mcfadden Conley\", \"Juanita Rollins\"]\n  }]\n\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EJSON\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe'd start by parsing it, but we want to \u003Cem\u003Eensure\u003C\u002Fem\u003E those keys are \u003Ccode\u003ESymbols\u003C\u002Fcode\u003E using this syntax for \u003Ccode\u003EJSON.parse\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"nb\"\u003Erequire\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'json'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Ejson_data\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EJSON\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eparse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eraw_json\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Esymbolize_names: \u003C\u002Fspan\u003E\u003Cspan class=\"kp\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow we can do something really interesting with Pattern Matching:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Eselected_people\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ejson_data\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eselect\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edo\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eperson\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eperson\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Eage: \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E20\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003EeyeColor: \u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002F^b\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Ename: \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Efirst: \u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002F^[TI]\u002F\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eperson\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"kp\"\u003Efalse\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eselected_people\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Emap\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edo\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eperson\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Eperson\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Ename: \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:,\u003C\u002Fspan\u003E \u003Cspan class=\"ss\"\u003Elast: \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E#{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efirst\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E#{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elast\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E# =&gt; [\"Trina Chang\", \"Irma Petersen\"]\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThat's a lot. What's it doing exactly?\u003C\u002Fp\u003E\n\n\u003Cp\u003EFirst we want to select all people older than \u003Ccode\u003E20\u003C\u002Fcode\u003E with an eye color that starts with the letter \u003Ccode\u003Eb\u003C\u002Fcode\u003E, and a first name that starts with either \u003Ccode\u003ET\u003C\u002Fcode\u003E or \u003Ccode\u003EI\u003C\u002Fcode\u003E. How's that for expressive?\u003C\u002Fp\u003E\n\n\u003Cp\u003ENext we're using something called right-hand-assignment (\u003Ccode\u003E=&gt;\u003C\u002Fcode\u003E) to pull the first and last names out of the person to just return back their names. In Pattern Matching if a key doesn't have a value it gets put into a local variable, hence \u003Ccode\u003Efirst\u003C\u002Fcode\u003E and \u003Ccode\u003Elast\u003C\u002Fcode\u003E being accessible in the line right below it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAgain, we won't get into all the nuance of Pattern Matching in this post, but you can see how it gets very interesting very quickly. I intend to write a more thorough introduction to Pattern Matching concepts fairly soon, so stay tuned for that one.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"wrapping-up\" href=\"#wrapping-up\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Wrapping Up\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ESo that was a lot. \u003Ccode\u003E===\u003C\u002Fcode\u003E is hiding everywhere in Ruby, and once you build up an intuition to it you'll notice it pretty frequently. Even better, that intuition means you now know how to create your own \u003Ccode\u003E===\u003C\u002Fcode\u003E if you should find yourself in such a need one day.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESpoilers though, it's an operator defined as a method:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E# Example implementation\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EString\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Edef\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003Eself\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003E===\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eother\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eother\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eis_a?\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eself\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ERuby has a lot of interesting facets, and with them a substantial amount of power. This series will continue to cover some of the foundations of Ruby and some of its most useful tools and features.\u003C\u002Fp\u003E\n\n\u003Cp\u003EUntil then enjoy your newfound knowledge of \u003Ccode\u003E===\u003C\u002Fcode\u003E!\u003C\u002Fp\u003E\n\n\u003Cp\u003EWant to keep up to date on what I'm writing and working on? \u003Ca href=\"https:\u002F\u002Fbuttondown.email\u002Fbaweaver\u002F\"\u003ETake a look at my new newsletter: The Lapidary Lemur\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n";b.body_markdown="# Introduction\n\nTriple Equals (`===`) in Ruby is one of the most powerful features in the entire language, but also one you may not know you're using either. In fact, it's one of the best kept secrets!\n\nWe're going to learn a bit about those secrets today and explore `===`, how it's defined, what it does, and where it's hiding in your Ruby code today.\n\n\u003E **Note**: This is a rewrite and expansion on an older post of mine from 2017, [Triple Equals Black Magic](https:\u002F\u002Fmedium.com\u002Frubyinside\u002Ftriple-equals-black-magic-d934936a6379), and includes updated syntax including Pattern Matching to examples.\n\n## Difficulty\n\n**Foundational**\n\nNo prerequisite knowledge needed. This post focuses on foundational and fundamental knowledge for Ruby programmers.\n\n# Triple Equals\n\nSo what is it? How is it defined?\n\nSome coming from Javascript might have the notion that `===` is a stricter equality operator than `==`, but in Ruby it does something quite different. Defaultly it's an alias for `==`, but some classes do something much more interesting.\n\nIt goes by a few names: Case equality operator, membership operator, triple equals.\n\nIts function is very much akin to checking to see if the value on the right is a member of whatever is on the left. \n\n## How it's Implemented in Ruby\n\nWhat do I mean by that? Well let's take a look at a few classes real quick to see how it works.\n\n\u003E **WARNING**: Do not use `===` explicitly like this in code, prefer methods with clearer names. We'll see soon when it's acutally used, and often times in an implicit manner rather than explicitly using it.\n\n### Ranges\n\nA range in Ruby has a starting point and an ending point, like `1..10` is a range from `1` to `10`. For it `===` works like `include?` which checks if the value on the right happens to be included within the range, or a member of the range:\n\n```ruby\n(1..10) === 1\n# =\u003E true\n\n(1..10).include?(1)\n# =\u003E true\n```\n\nRanges are interesting in that they're not limited to numbers. Strings also work, and that makes range inclusion even more interesting:\n\n```ruby\nSUPPORTS_PATTERN_MATCH_VERSIONS = '2.7.0'..'3.0.0'\nSUPPORTS_PATTERN_MATCH_VERSIONS === '2.7.5'\n# =\u003E true\n```\n\nGranted that example breaks once Ruby goes beyond `3.0.0`, but the point is range also recognizes types beyond Integer, and sometimes in interesting ways, but that's the subject for another post.\n\n### Regular Expressions\n\nRegular Expressions are a language for matching against patterns in text, and for `===` it happens to work very much like `match?`:\n\n```ruby\n\u002Fabc\u002F === 'abcdef'\n# =\u003E true\n\n\u002Fabc\u002F.match?('abcdef')\n# =\u003E true\n```\n\n`===` in this case is saying that there's a match, or that our string is a member of the set of matches this Regex refers to. Noticing a pattern?\n\n### Classes\n\nRuby has classes like `Integer`, `String`, and others. Normally you can check to see if something happens to be of a certain type using `is_a?`. Not surprisingly `===` works much the same way here:\n\n```ruby\nString === 'foo'\n# =\u003E true\n\n'foo'.is_a?(String)\n# =\u003E true\n```\n\n`===` here is saying that `'foo'` is a member of the `String` class, or it's included in what we'd call Strings.\n\nIt should be noted that this works for about every Ruby core class in the standard library, but as it requires custom implementation there may be some more exotic cases which don't.\n\n### Functions (Proc and Lambda)\n\nRuby has a few ways to express anonymous functions, procs and lambdas. There's also block, but we'll focus on those two for the moment. They can be expressed as such:\n\n```ruby\nadd_one_lambda = -\u003E x { x + 1 }\nadd_one_proc   = proc { |x| x + 1 }\n```\n\nWe won't get into differences between all of them in this round, but note that I tend to prefer lambdas in general over procs.\n\nTo use these functions you'd need to use `.call` (or `[]` or `.()`), which you might not be surprised to find out is `===` as well:\n\n```ruby\nadd_one_lambda = -\u003E x { x + 1 }\n\nadd_one_lambda === 1\n# =\u003E 2\nadd_one_lambda.call(1)\n# =\u003E 2\nadd_one_lambda.(1)\n# =\u003E 2\nadd_one_lambda[1]\n# =\u003E 2\n```\n\nThis one is a head scratcher. How is `1` a member of a function? That doesn't make much sense, it's not really any type of collection or set is it? Well in Mathematics it's called the [domain of a function](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDomain_of_a_function), or the set of which all valid inputs fall into, so that sounds a lot like membership too!\n\n### IP Addresses\n\nRuby also has this lovely feature for all of us Operations and Networking types, `IPAddr`:\n\n```ruby\nrequire 'ipaddr'\n\nIPAddr.new('10.0.0.1')\n```\n\nYou can even express subnets using it:\n\n```ruby\nlocal_network = IPAddr.new('192.168.1.0\u002F24')\nlocal_network.include?('192.168.1.1')\n# =\u003E true\n```\n\nIs your intuition dinging a bit? Because we have another case for `===` here:\n\n```ruby\nlocal_network === '192.168.1.1'\n# =\u003E true\n```\n\nFor this one we're checking if an IP Address is a member of a given subnet, further rounding out this interesting pattern. Ruby loves patterns, and math and programming in general have a certain affinity for them.\n\n## A Case for `===`\n\nNow this is all well and good, but the above warning said not to use `===` explicitly, so why spend all that time describing how it works? Because we're about to see the implicit through `case` statements.\n\nYou see, every `when` branch in a `case` statement compares via `===`:\n\n```ruby\ncase 1990\nwhen ..1899     then :too_early\nwhen 1900..1924 then :gi\nwhen 1925..1945 then :silent\nwhen 1946..1964 then :baby_boomers\nwhen 1965..1979 then :generation_x\nwhen 1980..2000 then :millenials\nwhen 2000..2010 then :generation_z\nwhen 2010..     then :generation_alpha\nelse\n  :who_knows\nend\n# =\u003E :millenials\n```\n\nYou can even use commas to check against multiple possibilities:\n\n```ruby\ncase 'foobar'\nwhen String, Integer then :one\nwhen Float, NilClass then :two\nelse\n  :three\nend\n```\n\nThere's a lot of potential to check against whether a value is within an expected set, and with functions that gets even more interesting:\n\n```ruby\ndivisible_by = -\u003E divisor { -\u003E n { n % divisor == 0 } }\n\n(1..15).map do |n|\n  case n\n  when divisible_by[15] then :fizzbuzz\n  when divisible_by[5]  then :buzz\n  when divisible_by[3]  then :fizz\n  else\n    n\n  end\nend\n# =\u003E [\n#   1, 2, :fizz, 4, :buzz, :fizz, 7, 8, :fizz, :buzz,\n#   11, :fizz, 13, 14, :fizzbuzz\n# ]\n```\n\nInteresting no?\n\nThere is one trick in there called a closure, which is a function which returns another function. That returned function remembers what the value of `divisor` was, allowing us to check if somthing is divisible by it. It's a really useful trick from functional programming, and really shows the power of functions in Ruby, especially with things like `case` statements.\n\n## Enumerating All the Fun We Can Have\n\n`Enumerable` also has a number of methods which take values that respond to `===`. Let's take a look at some examples.\n\n### Predicate Methods\n\nThe predicate methods (`any?`, `all?`, `none?`, `one?`) all play well with `===`:\n\n```ruby\n['1', 2, :a].any?(Integer)\n# =\u003E true\n\n```\n\n### The Search is On\n\nSearching methods like `grep` (find all that match pattern) and `grep_v` (find all that do **not** match pattern) also implement a `===` interface:\n\n```ruby\n%w(The rain in spain falls mainly on the plain).grep(\u002Fthe\u002Fi)\n# =\u003E [\"The\", \"the\"]\n```\n\n### Slice of Life\n\nThere are also Slice methods that allow us to group elements by a pattern like `slice_before` and `slice_after`:\n\n```ruby\narray = [7, 9, 4, 1, 14, 5, 13, 8, 2, 6, 3, 12, 15, 11, 10]\n\narray.slice_before(10..).to_a\n# =\u003E [[7, 9, 4, 1], [14, 5], [13, 8, 2, 6, 3], [12], [15], [11], [10]]\n\narray.slice_after(..5).to_a\n# =\u003E [[7, 9, 4], [1], [14, 5], [13, 8, 2], [6, 3], [12, 15, 11, 10]]\n```\n\n## Pattern Matching\n\nNow if you were excited about `case` statements let me tell you Pattern Matching is like a `case` statement with a lot of extra fun built in. We won't get into all the nuances of it, but every value is matched against using `===`. It uses `in` rather than `when`, which unlocks some additional features.\n\n### Array-Like\n\nIt supports two types of syntaxes, an Array-like match and a Hash-like match. Let's start with Array-like:\n\n```ruby\ncase [0, 1]\nin [..10, ..10] then :close_to_base\nin [..100, ..100] then :venturing_out\nin [..1000, ..1000] then :pretty_far_out\nelse :way_out_there\nend\n# =\u003E :close_to_base\n```\n\nIf we want we could even capture those values by name or a few other fun items, but we'll save that for another post.\n\n### Hash-like\n\nThe next is Hash-like, and this is where things get interesting. Let's say we have a JSON API with some data and we got back that data and that data was in a variable called `raw_json`:\n\n```ruby\nraw_json = \u003C\u003C~JSON\n  [{\n    \"age\": 22,\n    \"eyeColor\": \"blue\",\n    \"name\": { \"first\": \"Trina\", \"last\": \"Chang\" },\n    \"friends\": [\"Browning Marsh\", \"Keisha Abbott\", \"Shawn Callahan\"]\n  }, {\n    \"age\": 32,\n    \"eyeColor\": \"brown\",\n    \"name\": { \"first\": \"Irma\", \"last\": \"Petersen\" },\n    \"friends\": [\"Koch Ballard\", \"Chandra Rodriquez\", \"Carmen Avery\"]\n  }, {\n    \"age\": 27,\n    \"eyeColor\": \"hazel\",\n    \"name\": { \"first\": \"Madeleine\", \"last\": \"Blake\" },\n    \"friends\": [\"Tina Massey\", \"Annette Yates\", \"Zelma Brennan\"]\n  }, {\n    \"age\": 20,\n    \"eyeColor\": \"green\",\n    \"name\": { \"first\": \"Horton\", \"last\": \"Haynes\" },\n    \"friends\": [\"Sophia Oconnor\", \"Sheila Wilkins\", \"Mia Molina\"]\n  }, {\n    \"age\": 12,\n    \"eyeColor\": \"brown\",\n    \"name\": { \"first\": \"Hull\", \"last\": \"Benson\" },\n    \"friends\": [\"Teresa Mack\", \"Mcfadden Conley\", \"Juanita Rollins\"]\n  }]\nJSON\n```\n\nWe'd start by parsing it, but we want to _ensure_ those keys are `Symbols` using this syntax for `JSON.parse`:\n\n```ruby\nrequire 'json'\n\njson_data = JSON.parse(raw_json, symbolize_names: true)\n```\n\nNow we can do something really interesting with Pattern Matching:\n\n```ruby\nselected_people = json_data.select do |person|\n  case person\n  in age: 20.., eyeColor: \u002F^b\u002F, name: { first: \u002F^[TI]\u002F }\n    person\n  else\n    false\n  end\nend\n\nselected_people.map do |person|\n  person =\u003E { name: { first:, last: } }\n  \"#{first} #{last}\"\nend\n# =\u003E [\"Trina Chang\", \"Irma Petersen\"]\n```\n\nThat's a lot. What's it doing exactly?\n\nFirst we want to select all people older than `20` with an eye color that starts with the letter `b`, and a first name that starts with either `T` or `I`. How's that for expressive?\n\nNext we're using something called right-hand-assignment (`=\u003E`) to pull the first and last names out of the person to just return back their names. In Pattern Matching if a key doesn't have a value it gets put into a local variable, hence `first` and `last` being accessible in the line right below it.\n\nAgain, we won't get into all the nuance of Pattern Matching in this post, but you can see how it gets very interesting very quickly. I intend to write a more thorough introduction to Pattern Matching concepts fairly soon, so stay tuned for that one.\n\n# Wrapping Up\n\nSo that was a lot. `===` is hiding everywhere in Ruby, and once you build up an intuition to it you'll notice it pretty frequently. Even better, that intuition means you now know how to create your own `===` if you should find yourself in such a need one day.\n\nSpoilers though, it's an operator defined as a method:\n\n```ruby\n# Example implementation\nclass String\n  def self.===(other)\n    other.is_a?(self)\n  end\nend\n```\n\nRuby has a lot of interesting facets, and with them a substantial amount of power. This series will continue to cover some of the foundations of Ruby and some of its most useful tools and features.\n\nUntil then enjoy your newfound knowledge of `===`!\n\nWant to keep up to date on what I'm writing and working on? [Take a look at my new newsletter: The Lapidary Lemur](https:\u002F\u002Fbuttondown.email\u002Fbaweaver\u002F)";b.user={name:"Brandon Weaver",username:e,twitter_username:"keystonelemur",github_username:e,website_url:"https:\u002F\u002Fwww.twitter.com\u002Fkeystonelemur",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ZxO3erTM--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F129384\u002Fbc4c54aa-bacc-4804-8de6-edc3ff7a173b.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Q7LEIss2--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F129384\u002Fbc4c54aa-bacc-4804-8de6-edc3ff7a173b.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:b}},mutations:[["SET_CURRENT_ARTICLE",b]]}}("2021-02-06T08:57:35Z",{},"https:\u002F\u002Fdev.to\u002Fbaweaver\u002Funderstanding-ruby-triple-equals-2p9c",73,"baweaver")));