window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:716800,title:"7 Steps to Become an Expert Software Developer Without Endless Online Courses Or Waiting For Years",description:"Does this sound familiar to you?   If you are a coder, programmer or software developer then...",readable_publish_date:"Jun 3",slug:"7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j",path:"\u002Fdragosnedelcu\u002F7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j",url:c,comments_count:31,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--72UIPqEz--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Flio12yfvz0gbqt0fkmyt.jpg",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--IjSyaJ5y--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Flio12yfvz0gbqt0fkmyt.jpg",canonical_url:c,created_at:b,edited_at:"2021-07-07T20:07:56Z",crossposted_at:a,published_at:b,last_comment_at:"2021-08-22T20:02:47Z",reading_time_minutes:10,tag_list:"programming, productivity, beginners, webdev",tags:["programming","productivity","beginners","webdev"],body_html:"\u003Ch3\u003E\n  \u003Ca name=\"does-this-sound-familiar-to-you\" href=\"#does-this-sound-familiar-to-you\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EDoes this sound familiar to you?\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIf you are a coder, programmer or software developer then you probably know situations like these:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EYou want to improve your coding skills but you are quickly overwhelmed by the endless information out there and don’t know what to do next...\u003C\u002Fli\u003E\n\u003Cli\u003EYou have spent hours on online courses, but got stuck and frustrated and did not manage to finish them...\u003C\u002Fli\u003E\n\u003Cli\u003EYou suffer from impostor syndrome on a daily basis, struggle to work independently and are constantly afraid you are not good enough...\u003C\u002Fli\u003E\n\u003Cli\u003EYou are forced to stay in a job you don’t like, underpaid or burn out and wonder if software development is really for you...\u003C\u002Fli\u003E\n\u003Cli\u003EYou keep hearing that if you keep on coding, one day it will click…\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"are-you-facing-this-kind-of-difficulties-right-now\" href=\"#are-you-facing-this-kind-of-difficulties-right-now\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EAre you facing this kind of difficulties right now?\u003C\u002Fstrong\u003E\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EIf you are like most software developers, then you will be confronted with situations like these over and over.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EHere is why:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"you-lack-a-system-in-your-technical-growth\" href=\"#you-lack-a-system-in-your-technical-growth\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cem\u003EYou lack a system in your technical growth.\u003C\u002Fem\u003E\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EYou lack a defined process that guarantees you develop complete skills no matter how motivated you are to practice, no matter what technology is the latest trend or the kind of developer you are.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThink about it: how many times have you struggled with what to do next to become a better developer just because you had no plan?\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou have to build a system around your technical skills if you really want to code with confidence and never feel like an impostor ever again.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"why-is-this-so-important\" href=\"#why-is-this-so-important\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EWhy is this so important?\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EHere is the thing: not having a structured process for your technical growth is why 80% of coders, programmers and software developers NEVER reach their goal of getting promoted, landing a better job and earning more.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESimply because not having a system forces you to improvise (so you \u003Cstrong\u003Ewaste your time with the same online courses\u003C\u002Fstrong\u003E everyone else is doing that don’t even apply to real-life situations).\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EHow are you supposed to improve your technical skills consistently when you are improvising all the time?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETherefore it is absolutely necessary to build a professional system that you can finally get rid of the impostor syndrome, code with confidence and become an expert software engineer.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"here-is-the-solution-you-need\" href=\"#here-is-the-solution-you-need\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EHere is the solution you need:\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAs a software developer, I have been there myself and I know this situation really well. First when I moved to a totally new country, Germany. Being new in the city, I jumped to the first developer job I could get, just to end up stuck with little progression and no opportunities for growth.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESecond, when I left my “\u003Cem\u003Estartup job\u003C\u002Fem\u003E” and dreamed of joining a top tech company. I lacked the professional software development skills, the visibility and the mindset to get me there.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELuckily, a mentor opened my eyes. Following his advice, I \u003Cstrong\u003Ebuilt a system around my growth\u003C\u002Fstrong\u003E, focused on technical skills. As a result, I quickly became an expert in my stack, fast-tracked into the senior level, and landed a better job at a top technology company.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn the last year, I helped more than 40 software developers like you become expert engineers using the same system and now I can show you the 7 steps that will help you solve this:\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-1-analysis-and-strategy\" href=\"#step-1-analysis-and-strategy\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 1 - Analysis and Strategy\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe first step to building a system around your growth as a software developer is to \u003Cstrong\u003Emake an objective analysis\u003C\u002Fstrong\u003E of your current skills.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhat are your strengths? What are your weaknesses? Do you struggle with the programming fundamentals, coding syntax or structuring solutions? Are you able to see beyond the code, to analyse the design?\u003C\u002Fp\u003E\n\n\u003Cp\u003EFind the gaps between an expert software engineer and your skills. Your time is limited, so you can’t learn everything. To get results, you need to focus.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EYour time is limited, so you can’t learn everything.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe better the analysis phase, the better your understanding of what are the exact gaps you need to cover and the more effective the time you will invest later on. Now it is time to build a strategy to get you to the expert level.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-2-become-a-real-fullstack-api-design\" href=\"#step-2-become-a-real-fullstack-api-design\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 2 - Become a real “full-stack”: API Design\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EMost training and courses focus on \"hot technologies\" such as React or GraphQL and miss out on more boring but essential topics. They do this because fancy technologies help them sell more courses. But the truth is, these hot frameworks recycle classic concepts from software development all the time. This is why to excel in the hottest new technologies you have to understand the fundamentals.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003ETo excel in the hottest new technologies you have to understand the fundamentals.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe perfect place for software developers to understand the fundamentals? You guessed it: API Design. It doesn’t matter where you come from, backend or frontend. At the API level is where things meet. They talk a lot about what a real full-stack developer is these days, but 80% of those developers can’t even name the main three ways to version an API.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EAt its core, you are more than a backend or a frontend developer, you are a web engineer.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere, don't just scratch the surface, explore performance, caching and testing. Go a bit deeper into the \u003Cstrong\u003EHTTP protocol and understand how the web really works\u003C\u002Fstrong\u003E. At its core, you are more than a backend or a frontend developer, you are a web engineer.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-3-understand-the-full-software-cycle-continuous-integration\" href=\"#step-3-understand-the-full-software-cycle-continuous-integration\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 3 - Understand the full software cycle: Continuous Integration\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe thing is if you are only able to contribute at the code level, your ability to help your team is limited. If you don't understand how to properly deploy applications, you will always need help to push your code and see it work.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnd because of the way teams are structured, \u003Cstrong\u003Emost developers can’t usually get their hands dirty with deployment\u003C\u002Fstrong\u003E (nobody wants you to mess around with code that will reach the users). But, if you never touch these topics, how will you ever learn them?\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EYou must understand how code gets built, packaged, shipped and deployed.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo widen your perspective as a developer you must understand how code gets built, packaged, shipped and deployed. It is time for you to \u003Cstrong\u003Eunderstand the full software lifecycle\u003C\u002Fstrong\u003E, what continuous integration and delivery really mean and how you can deploy your own applications with the best practices.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAt the same time, cloud certifications require too much time and they go deep into topics that you as a developer don’t need to care about. \u003Cstrong\u003EKnowing at which network-level an application load balancer works is interesting but nor necessary\u003C\u002Fstrong\u003E. Get a good understanding of cloud, version control and integration tools instead.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EIf you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until the deployment.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until a feature gets tested and deployed. Now, that’s an expert. And, who knows? Soon enough they will trust you enough and give you access to the company’s cloud account.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-4-think-like-an-expert-programmer-algorithmic-thinking-and-data-structures\" href=\"#step-4-think-like-an-expert-programmer-algorithmic-thinking-and-data-structures\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 4 - Think like an expert programmer: algorithmic thinking and data structures\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EBasketball players train their muscle memory so they don’t even have to think when they pass the ball. They do it almost automatically, out of reflex. The same thing applies to efficient coders when it comes to programming challenges. Seniors do it almost by instinct, some call it intuition, others say it just comes with years.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EExpert developers use mental frameworks that they refined over the years to solve any coding problem.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EHear me out, it is no magic and it is completely learnable. It is not about memorising binary trees. It is about understanding the commonalities between those coding problems and having a structured process in approaching them. You have to focus on patterns instead of implementation details. And the keyword here is recursion.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EIt is not about memorising binary trees, it is about having a structured process when approaching coding problems.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis will come in handy not only in code challenges but also in your daily work as a software developer. Recursion is behind the DOM tree and even behind algorithms of the most popular frameworks such as React.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-5-specialisation-react-graphql-and-the-hottest-tech-out-there\" href=\"#step-5-specialisation-react-graphql-and-the-hottest-tech-out-there\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 5 - Specialisation: React, GraphQL and the \"hottest\" tech out there\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAt this stage, you developed a strong understanding of the core principles of software development. It is time for that extra step that will make you stand out. \u003Cstrong\u003ESpecialisation will allow you to stand\u003C\u002Fstrong\u003E out between other hundred developers claiming expertise left and right.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf the backend is your thing, then go deeper into server-side development. If it is the frontend and you have been doing mostly React so far, time to touch other frameworks and dive deeper into \u003Cstrong\u003Econcepts such as server-side rendering and performance\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe idea is not to just know about the latest frameworks, but to understand where the community is moving in that area, what are the specific challenges developers are facing on that platform and go beyond what the average developer knows.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this way you become more than a developer, you will be able to bring innovation to your company, even to the whole industry. Plus it is easier to stand out in a library released 3 years ago than an established one where you compete with more experienced developers.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-6-software-architecture-getting-to-the-big-picture\" href=\"#step-6-software-architecture-getting-to-the-big-picture\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 6 - Software Architecture: getting to the \"Big Picture\"\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ENow that you find your way around code and you are also able to understand what happens to your apps after the coding phase, you are ready for the next step.\u003C\u002Fp\u003E\n\n\u003Cp\u003EExpert software engineers are able to have conversations with senior developers, tech leads and architects because they share a common understanding of programming concepts way beyond technologies and frameworks. They can abstract and see beyond the implementation. They understand the common principles of software architecture.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EExpert developers are able to discuss with senior developers, tech leads and architects because they understand programming beyond libraries and frameworks.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow, don't be scared. You won’t become an architect overnight. At this point, you should start thinking about how systems interact with each other. How can your application handle millions of users? How does it integrate with other systems? How can it communicate with the external world?\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EYou need to develop an opinion about topics such as scalability, reliability and performance.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETime to grasp concepts such as scalability, reliability and performance. So that when that discussion on application performance happens, you don’t feel lost and can actually contribute. You will even be able to discuss technical solutions outside of your domain. This will allow you to move into a senior position or technical lead one.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"step-7-professional-image-invisible-talent-is-talent-no-one-cares-about\" href=\"#step-7-professional-image-invisible-talent-is-talent-no-one-cares-about\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EStep 7 - Professional Image: invisible talent is talent no one cares about\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ENobody will hire you, contact you or invite you to give a tech talk if they don’t know about you. It is not 2010 and opportunities don’t fall on your lap just because you know how to code. So does every self-taught coder, bootcamp graduate, college student or junior developer.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EIt is not 2010 and opportunities don’t fall on your lap just because you know how to code.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow, I know there are many so-called influencers out there saying you need to build up a personal brand, or that you need to Tweet every day. Or that your GitHub has to be extremely polished and the portfolio should grab attention.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAll those things are nice to have. \u003Cstrong\u003EIn real-world companies care about two things\u003C\u002Fstrong\u003E: your LinkedIn profile (that’s how they find you) and a surgically optimised CV. In the end, they are hiring a software developer, not an influencer.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EHow can you build a technical blog if you are struggling with React?\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EInfluencers are telling you that you need to build a personal brand because that’s what they do. But just because that worked for them won’t work for you. How can you build a technical blog if you are struggling with React? \u003Cstrong\u003EFor now, your time is better invested elsewhere\u003C\u002Fstrong\u003E. To connect with other developers and tech leaders, you just need a tidy profile and to engage in conversations.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EThat’s all - you don’t need anything else to become an expert developer.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EForget the 10 online courses you bought but never finished...\u003C\u002Fli\u003E\n\u003Cli\u003EForget about memorising data structures and binary trees…\u003C\u002Fli\u003E\n\u003Cli\u003EForget about solving all the problems on HackerRank...\u003C\u002Fli\u003E\n\u003Cli\u003EForget about heavy programming books that take forever to finish…\u003C\u002Fli\u003E\n\u003Cli\u003EForget about halfway youtube tutorials that always confuse you...\u003C\u002Fli\u003E\n\u003Cli\u003EForget about technical blogging…\u003C\u002Fli\u003E\n\u003Cli\u003EForget about building a personal brand…\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EMany of these things will just distract you.\u003C\u002Fp\u003E\n\n\u003Cp\u003EOthers such as your personal brand will become relevant once you are already at the mid\u002Fsenior level.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"these-7-steps-will-allow-you-to-code-with-confidence-never-feel-like-an-impostor-again-and-become-an-expert\" href=\"#these-7-steps-will-allow-you-to-code-with-confidence-never-feel-like-an-impostor-again-and-become-an-expert\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EThese 7 steps will allow you to code with confidence, never feel like an impostor again and become an expert.\u003C\u002Fstrong\u003E\n\u003C\u002Fh3\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"it-is-actually-pretty-clear\" href=\"#it-is-actually-pretty-clear\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EIt is actually pretty clear.\u003C\u002Fstrong\u003E\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003E\u003Cem\u003EFor more content like this, \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fdragosnedelcu\u002F\"\u003E\u003Cstrong\u003Efollow me on LinkedIn\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter you set up this system, you will be able to handle any technical issue at your job or in a job interview. You will be the one choosing for what company, with what technology and with whom to work. You will automatically become a highly demanded expert software engineer.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENo more hoping or guessing and waiting on the tech lead to recognise your value.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ESo far I have set up this system with more than 40 coders, programmers and software developers and they constantly reach outstanding results.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003ELast week one of our mentees landed her first “high-paying” job (30% on top of the market) after only 6 weeks of working with us. Without even getting to software architecture, a portfolio or a personal brand. Those things are part of week 6 and 7 of the program :)\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you are reading this, then you are most likely also an ambitious coder, programmer or software developer that wants to become an expert software engineer.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESo, if that is the case you will definitely benefit from implementing the 7 steps I mentioned above. You will get so much closer to your goal in a proven way.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ERegardless - we both know that reading a simple article on how to grow your technical skills will not get you the results you truly want.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you want to get to that expert level right now, let me suggest: Get in touch with my team. You can apply for a free private consultation call with me, where we will go over each step in detail and build a plan to help you reach that expert level.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EThe only thing you need to do is click and fill the application form on our website.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ELooking forward to consulting you soon.\u003C\u002Fp\u003E\n\n\u003Cp\u003EDragos Nedelcu\u003C\u002Fp\u003E\n\n",body_markdown:"###**Does this sound familiar to you?**\n\nIf you are a coder, programmer or software developer then you probably know situations like these:\n\n- You want to improve your coding skills but you are quickly overwhelmed by the endless information out there and don’t know what to do next...\n- You have spent hours on online courses, but got stuck and frustrated and did not manage to finish them...\n- You suffer from impostor syndrome on a daily basis, struggle to work independently and are constantly afraid you are not good enough...\n- You are forced to stay in a job you don’t like, underpaid or burn out and wonder if software development is really for you...\n- You keep hearing that if you keep on coding, one day it will click…\n\n####**Are you facing this kind of difficulties right now?**\n\nIf you are like most software developers, then you will be confronted with situations like these over and over.\n\n**Here is why:**\n\n####_You lack a system in your technical growth._\n\nYou lack a defined process that guarantees you develop complete skills no matter how motivated you are to practice, no matter what technology is the latest trend or the kind of developer you are.\n\nThink about it: how many times have you struggled with what to do next to become a better developer just because you had no plan?\n\nYou have to build a system around your technical skills if you really want to code with confidence and never feel like an impostor ever again.\n\n###**Why is this so important?**\n\nHere is the thing: not having a structured process for your technical growth is why 80% of coders, programmers and software developers NEVER reach their goal of getting promoted, landing a better job and earning more.\n\nSimply because not having a system forces you to improvise (so you **waste your time with the same online courses** everyone else is doing that don’t even apply to real-life situations).\n\n**How are you supposed to improve your technical skills consistently when you are improvising all the time?**\n\nTherefore it is absolutely necessary to build a professional system that you can finally get rid of the impostor syndrome, code with confidence and become an expert software engineer.\n\n###**Here is the solution you need:**\n\nAs a software developer, I have been there myself and I know this situation really well. First when I moved to a totally new country, Germany. Being new in the city, I jumped to the first developer job I could get, just to end up stuck with little progression and no opportunities for growth.\n\nSecond, when I left my “_startup job_” and dreamed of joining a top tech company. I lacked the professional software development skills, the visibility and the mindset to get me there.\n\nLuckily, a mentor opened my eyes. Following his advice, I **built a system around my growth**, focused on technical skills. As a result, I quickly became an expert in my stack, fast-tracked into the senior level, and landed a better job at a top technology company.\n\nIn the last year, I helped more than 40 software developers like you become expert engineers using the same system and now I can show you the 7 steps that will help you solve this:\n\n###**Step 1 - Analysis and Strategy**\n\nThe first step to building a system around your growth as a software developer is to **make an objective analysis** of your current skills.\n\nWhat are your strengths? What are your weaknesses? Do you struggle with the programming fundamentals, coding syntax or structuring solutions? Are you able to see beyond the code, to analyse the design?\n\nFind the gaps between an expert software engineer and your skills. Your time is limited, so you can’t learn everything. To get results, you need to focus.\n\n_Your time is limited, so you can’t learn everything._\n\nThe better the analysis phase, the better your understanding of what are the exact gaps you need to cover and the more effective the time you will invest later on. Now it is time to build a strategy to get you to the expert level.\n\n###**Step 2 - Become a real “full-stack”: API Design**\n\nMost training and courses focus on \"hot technologies\" such as React or GraphQL and miss out on more boring but essential topics. They do this because fancy technologies help them sell more courses. But the truth is, these hot frameworks recycle classic concepts from software development all the time. This is why to excel in the hottest new technologies you have to understand the fundamentals.\n\n_To excel in the hottest new technologies you have to understand the fundamentals._\n\nThe perfect place for software developers to understand the fundamentals? You guessed it: API Design. It doesn’t matter where you come from, backend or frontend. At the API level is where things meet. They talk a lot about what a real full-stack developer is these days, but 80% of those developers can’t even name the main three ways to version an API.\n\n_At its core, you are more than a backend or a frontend developer, you are a web engineer._\n\nHere, don't just scratch the surface, explore performance, caching and testing. Go a bit deeper into the **HTTP protocol and understand how the web really works**. At its core, you are more than a backend or a frontend developer, you are a web engineer.\n\n###**Step 3 - Understand the full software cycle: Continuous Integration**\n\nThe thing is if you are only able to contribute at the code level, your ability to help your team is limited. If you don't understand how to properly deploy applications, you will always need help to push your code and see it work.\n\nAnd because of the way teams are structured, **most developers can’t usually get their hands dirty with deployment** (nobody wants you to mess around with code that will reach the users). But, if you never touch these topics, how will you ever learn them?\n\n_You must understand how code gets built, packaged, shipped and deployed._\n\nTo widen your perspective as a developer you must understand how code gets built, packaged, shipped and deployed. It is time for you to **understand the full software lifecycle**, what continuous integration and delivery really mean and how you can deploy your own applications with the best practices.\n\nAt the same time, cloud certifications require too much time and they go deep into topics that you as a developer don’t need to care about. **Knowing at which network-level an application load balancer works is interesting but nor necessary**. Get a good understanding of cloud, version control and integration tools instead.\n\n_If you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until the deployment._\n\nIf you understand how to deploy applications to the real-world, you will be able to assist your team from the coding phase until a feature gets tested and deployed. Now, that’s an expert. And, who knows? Soon enough they will trust you enough and give you access to the company’s cloud account.\n\n###**Step 4 - Think like an expert programmer: algorithmic thinking and data structures**\n\nBasketball players train their muscle memory so they don’t even have to think when they pass the ball. They do it almost automatically, out of reflex. The same thing applies to efficient coders when it comes to programming challenges. Seniors do it almost by instinct, some call it intuition, others say it just comes with years.\n\n_Expert developers use mental frameworks that they refined over the years to solve any coding problem._\n\nHear me out, it is no magic and it is completely learnable. It is not about memorising binary trees. It is about understanding the commonalities between those coding problems and having a structured process in approaching them. You have to focus on patterns instead of implementation details. And the keyword here is recursion.\n\n_It is not about memorising binary trees, it is about having a structured process when approaching coding problems._\n\nThis will come in handy not only in code challenges but also in your daily work as a software developer. Recursion is behind the DOM tree and even behind algorithms of the most popular frameworks such as React.\n\n###**Step 5 - Specialisation: React, GraphQL and the \"hottest\" tech out there**\n\nAt this stage, you developed a strong understanding of the core principles of software development. It is time for that extra step that will make you stand out. **Specialisation will allow you to stand** out between other hundred developers claiming expertise left and right.\n\nIf the backend is your thing, then go deeper into server-side development. If it is the frontend and you have been doing mostly React so far, time to touch other frameworks and dive deeper into **concepts such as server-side rendering and performance**.\n\nThe idea is not to just know about the latest frameworks, but to understand where the community is moving in that area, what are the specific challenges developers are facing on that platform and go beyond what the average developer knows.\n\nIn this way you become more than a developer, you will be able to bring innovation to your company, even to the whole industry. Plus it is easier to stand out in a library released 3 years ago than an established one where you compete with more experienced developers.\n\n###**Step 6 - Software Architecture: getting to the \"Big Picture\"**\n\nNow that you find your way around code and you are also able to understand what happens to your apps after the coding phase, you are ready for the next step.\n\nExpert software engineers are able to have conversations with senior developers, tech leads and architects because they share a common understanding of programming concepts way beyond technologies and frameworks. They can abstract and see beyond the implementation. They understand the common principles of software architecture.\n\n_Expert developers are able to discuss with senior developers, tech leads and architects because they understand programming beyond libraries and frameworks._\n\nNow, don't be scared. You won’t become an architect overnight. At this point, you should start thinking about how systems interact with each other. How can your application handle millions of users? How does it integrate with other systems? How can it communicate with the external world?\n\n_You need to develop an opinion about topics such as scalability, reliability and performance._\n\nTime to grasp concepts such as scalability, reliability and performance. So that when that discussion on application performance happens, you don’t feel lost and can actually contribute. You will even be able to discuss technical solutions outside of your domain. This will allow you to move into a senior position or technical lead one.\n\n###**Step 7 - Professional Image: invisible talent is talent no one cares about**\n\nNobody will hire you, contact you or invite you to give a tech talk if they don’t know about you. It is not 2010 and opportunities don’t fall on your lap just because you know how to code. So does every self-taught coder, bootcamp graduate, college student or junior developer.\n\n_It is not 2010 and opportunities don’t fall on your lap just because you know how to code._\n\nNow, I know there are many so-called influencers out there saying you need to build up a personal brand, or that you need to Tweet every day. Or that your GitHub has to be extremely polished and the portfolio should grab attention.\n\nAll those things are nice to have. **In real-world companies care about two things**: your LinkedIn profile (that’s how they find you) and a surgically optimised CV. In the end, they are hiring a software developer, not an influencer.\n\n_How can you build a technical blog if you are struggling with React?_\n\nInfluencers are telling you that you need to build a personal brand because that’s what they do. But just because that worked for them won’t work for you. How can you build a technical blog if you are struggling with React? **For now, your time is better invested elsewhere**. To connect with other developers and tech leaders, you just need a tidy profile and to engage in conversations.\n\n**That’s all - you don’t need anything else to become an expert developer.**\n\n- Forget the 10 online courses you bought but never finished...\n- Forget about memorising data structures and binary trees…\n- Forget about solving all the problems on HackerRank...\n- Forget about heavy programming books that take forever to finish…\n- Forget about halfway youtube tutorials that always confuse you...\n- Forget about technical blogging…\n- Forget about building a personal brand…\n\nMany of these things will just distract you.\n\nOthers such as your personal brand will become relevant once you are already at the mid\u002Fsenior level.\n\n###**These 7 steps will allow you to code with confidence, never feel like an impostor again and become an expert.**\n\n####**It is actually pretty clear.**\n\n\n_For more content like this, [**follow me on LinkedIn**]\n(https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fdragosnedelcu\u002F)._\n\nAfter you set up this system, you will be able to handle any technical issue at your job or in a job interview. You will be the one choosing for what company, with what technology and with whom to work. You will automatically become a highly demanded expert software engineer.\n\nNo more hoping or guessing and waiting on the tech lead to recognise your value.\n\n**So far I have set up this system with more than 40 coders, programmers and software developers and they constantly reach outstanding results.**\n\n_Last week one of our mentees landed her first “high-paying” job (30% on top of the market) after only 6 weeks of working with us. Without even getting to software architecture, a portfolio or a personal brand. Those things are part of week 6 and 7 of the program :)_\n\nIf you are reading this, then you are most likely also an ambitious coder, programmer or software developer that wants to become an expert software engineer.\n\nSo, if that is the case you will definitely benefit from implementing the 7 steps I mentioned above. You will get so much closer to your goal in a proven way.\n\n**Regardless - we both know that reading a simple article on how to grow your technical skills will not get you the results you truly want.**\n\nIf you want to get to that expert level right now, let me suggest: Get in touch with my team. You can apply for a free private consultation call with me, where we will go over each step in detail and build a plan to help you reach that expert level.\n\n**The only thing you need to do is click and fill the application form on our website.**\n\nLooking forward to consulting you soon.\n\nDragos Nedelcu\n\n\n\n\n\n",user:{name:"Dragos Nedelcu",username:"dragosnedelcu",twitter_username:e,github_username:e,website_url:"https:\u002F\u002Fwww.codewithdragos.com",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--H5wjUc3S--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F195735\u002Ff7875454-de96-4126-82d0-d55826ad5c88.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1yGRzHDD--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F195735\u002Ff7875454-de96-4126-82d0-d55826ad5c88.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Fdragosnedelcu\u002F716800",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-06-03T06:34:26Z","https:\u002F\u002Fdev.to\u002Fdragosnedelcu\u002F7-steps-to-become-an-expert-software-engineer-without-endless-online-courses-or-waiting-for-years-m8j",1029,"dragosgn"));