window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:632795,title:"Learn How to Create and Run Appwrite Functions With Dart",description:"With the popularity of Flutter, Dart has become a popular mainstream language. In this tutorial, we w...",readable_publish_date:"Mar 12",slug:"learn-how-to-create-and-run-appwrite-functions-with-dart-5668",path:"\u002Fappwrite\u002Flearn-how-to-create-and-run-appwrite-functions-with-dart-5668",url:d,comments_count:0,public_reactions_count:e,collection_id:a,published_timestamp:b,positive_reactions_count:e,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--WBwX4HJt--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Frp27n6t4ouu55dyxw900.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--IqZxOMmW--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Frp27n6t4ouu55dyxw900.png",canonical_url:d,created_at:"2021-03-12T07:24:43Z",edited_at:"2021-03-26T05:10:56Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:5,tag_list:"dart, appwrite, cloudfunctions, flutter",tags:["dart",c,"cloudfunctions","flutter"],body_html:"\u003Cp\u003EWith the popularity of Flutter, Dart has become a popular mainstream language. In this tutorial, we will learn to create Appwrite Functions using Dart. In this tutorial, we will write a storage cleaner function that will remove files older than xx days from Appwrite storage. We will leverage the official \u003Ca href=\"https:\u002F\u002Fpub.dev\u002Fpackages\u002Fdart_appwrite\"\u003EDart SDK\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo learn more about our Dart SDK, please head over to our \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002Fannouncing-appwrite-sdk-for-dart-3ehc\"\u003EDart SDK announcement post\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"what-are-appwrite-functions\" href=\"#what-are-appwrite-functions\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  What are Appwrite functions?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fappwrite.io\u002Fdocs\u002Ffunctions\"\u003EAppwrite Functions\u003C\u002Fa\u003E are a way for you to extend and customize your \u003Ca href=\"https:\u002F\u002Fappwrite.io\"\u003EAppwrite BaaS\u003C\u002Fa\u003E functionality by executing your custom code. Appwrite can execute your custom code in response to any Appwrite system event like account creation, user login, or document update. You can also schedule your functions to run according to a CRON schedule or start them manually by triggering your function from an HTTP endpoint using the Appwrite client or server APIs.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"prerequisites\" href=\"#prerequisites\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Prerequisites\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn order to continue with this tutorial, you need to have an Appwrite console that you can access and have a project you can use to test this function. If you have not already installed Appwrite, please do so. Installing Appwrite is really simple. Based on your operating system, run one of the following commands. Installation should be done in less than 2 minutes.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"unix\" href=\"#unix\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Unix\n\u003C\u002Fh3\u003E\n\n\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Edocker run \u003Cspan class=\"nt\"\u003E-it\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E--rm\u003C\u002Fspan\u003E \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E \u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E$(\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Epwd\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--entrypoint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"install\"\u003C\u002Fspan\u003E \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    appwrite\u002Fappwrite:0.7.0\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"windows-cmd\" href=\"#windows-cmd\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Windows CMD\n\u003C\u002Fh3\u003E\n\n\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight powershell\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Edocker\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Erun\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E-it\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--rm\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E^\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E\u002F\u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E^\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"%cd%\"\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E^\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--entrypoint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"install\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E^\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eappwrite\u002Fappwrite:0.7.0\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"windows-powershell\" href=\"#windows-powershell\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Windows PowerShell\n\u003C\u002Fh3\u003E\n\n\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight powershell\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Edocker\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Erun\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E-it\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--rm\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E\u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--volume\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E${pwd}\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--entrypoint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"install\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eappwrite\u002Fappwrite:0.7.0\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can also find detailed installation instructions on the Appwrite official \u003Ca href=\"https:\u002F\u002Fappwrite.io\u002Fdocs\u002Finstallation\"\u003Einstallation docs\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"activate-dart-functions-environment\" href=\"#activate-dart-functions-environment\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Activate Dart Functions Environment\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn order for the Dart environment to be available in Appwrite Cloud Functions, you need to enable it. It can easily be done using the environment variables. In the Appwrite installation folder  find \u003Ccode\u003E.env\u003C\u002Fcode\u003E file. In the file find the environment variable \u003Ccode\u003E_APP_FUNCTIONS_ENVS\u003C\u002Fcode\u003E and there in the comma separated list add \u003Ccode\u003Edart-2.10\u003C\u002Fcode\u003E to make Dart environment available in the Appwrite Functions. After that, you can load updated configuration using \u003Ccode\u003Edocker-compose up -d\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"initialize-function-project\" href=\"#initialize-function-project\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Initialize Function Project\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EFirst, create a project folder where you will create all the necessary files for your function. We will call this folder \u003Ccode\u003Estorage_cleaner\u003C\u002Fcode\u003E. Inside create \u003Ccode\u003Emain.dart\u003C\u002Fcode\u003E and \u003Ccode\u003Epubspec.yaml\u003C\u002Fcode\u003E files. Ensure your folder structure looks like this\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E.\n├── main.dart\n└── pubspec.yaml\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"add-appwrite-dart-sdk-dependency\" href=\"#add-appwrite-dart-sdk-dependency\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Add Appwrite Dart SDK dependency\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOpen \u003Ccode\u003Estorage_cleaner\u003C\u002Fcode\u003E folder in your favorite text editor. Add the following code to \u003Ccode\u003Epubspec.yaml\u003C\u002Fcode\u003E file.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight yaml\"\u003E\u003Ccode\u003E\u003Cspan class=\"na\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Estorage_cleaner\u003C\u002Fspan\u003E\n\u003Cspan class=\"na\"\u003Eversion\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E1.0.0\u003C\u002Fspan\u003E \n\u003Cspan class=\"na\"\u003Edescription\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"na\"\u003Eenvironment\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Esdk\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&gt;=2.7.0\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&lt;3.0.0\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"na\"\u003Edependencies\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Edart_appwrite\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E^0.4.0\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EHere we are giving the package a name, version, description, and supporting Dart environment and dependencies.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"write-your-function\" href=\"#write-your-function\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Write your Function\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOpen \u003Ccode\u003Emain.dart\u003C\u002Fcode\u003E and update with the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight dart\"\u003E\u003Ccode\u003E\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'dart:io'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'package:dart_appwrite\u002Fdart_appwrite.dart'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EList\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eargs\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F Initialise the client SDK\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003EMap\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EenvVars\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPlatform\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Eenvironment\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClient\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eclient\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Eclient\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EsetEndpoint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EenvVars\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'APPWRITE_ENDPOINT'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E])\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EsetProject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EenvVars\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'APPWRITE_PROJECT_ID'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E])\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EsetKey\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\n          \u003Cspan class=\"n\"\u003EenvVars\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'APPWRITE_API_KEY'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E]);\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F Initialise the storage SDK\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estorage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStorage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eclient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E);\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EdaysToExpire\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Eparse\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EenvVars\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'DAYS_TO_EXPIRE'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E]);\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eres\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estorage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003ElistFiles\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EorderType:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOrderType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Edesc\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003Elimit:\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E100\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eres\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efiles\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EList\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Efrom\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'files'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E]);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Etimestamp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDateTime\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Enow\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E()\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Esubtract\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDuration\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Edays:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EdaysToExpire\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E))\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EmillisecondsSinceEpoch\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EdeletedFiles\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kd\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efile\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efiles\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efile\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'dateCreated'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1000\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Etimestamp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"n\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estorage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EdeleteFile\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EfileId:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Efile\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\\\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E$id\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E]);\u003C\u002Fspan\u003E\n      \u003Cspan class=\"n\"\u003Eprint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"Deleted \u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E${file['\\$id']}\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E);\u003C\u002Fspan\u003E\n      \u003Cspan class=\"n\"\u003EdeletedFiles\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Eprint\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"Total files deleted: \u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E$deletedFiles\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"o\"\u003E}\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe environment variables that we are accessing here are later set on the Appwrite Function's settings.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"get-the-dependencies\" href=\"#get-the-dependencies\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Get the dependencies\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn order to deploy this to Appwrite Functions, the dependencies need to be inside this folder itself, so we do the following to save dependencies in the current directory.\u003C\u002Fp\u003E\n\n\u003Cp\u003EUsing the terminal in the \u003Ccode\u003Estorage_cleaner\u003C\u002Fcode\u003E directory,\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ export PUB_CACHE=.appwrite\n$ dart pub get\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis should now get dependencies and place the downloaded dependencies inside \u003Ccode\u003E.appwrite\u003C\u002Fcode\u003E folder. Ensure that your folder structure looks like this\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E.\n├── main.dart\n├── .appwrite\u002F\n├── pubspec.lock\n└── pubspec.yaml\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThere might be other files and folders created by the Dart tool or your text editor, and you can ignore them.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"create-a-function-in-your-appwrite-console\" href=\"#create-a-function-in-your-appwrite-console\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Create a Function in Your Appwrite Console\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ELogin to your Appwrite console and open the project of your choosing. There, from the sidebar, tap on the \u003Ccode\u003EFunctions\u003C\u002Fcode\u003E menu. In the functions dashboard, tap the \u003Ccode\u003EAdd Function\u003C\u002Fcode\u003E button.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1hg7lHwN--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fpdsp2ge02wz7tn35t53p.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1hg7lHwN--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fpdsp2ge02wz7tn35t53p.png\" alt=\"add-function\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EA dialog will be presented. Give your function a name of your choosing. We will call it \u003Ccode\u003Estorage cleaner\u003C\u002Fcode\u003E. Next to the environment, we are using Dart, so we will choose Dart 2.10. Then tap create.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"deploy-tag\" href=\"#deploy-tag\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Deploy Tag\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOnce you tap create in the above step, you are taken to the newly created functions overview page.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThere are two ways to deploy your tag.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--4c1GmQ2S--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy85yp4xc0c23wdiiqj9w.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--4c1GmQ2S--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy85yp4xc0c23wdiiqj9w.png\" alt=\"deploy\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"deploy-using-appwrite-cli-recommended\" href=\"#deploy-using-appwrite-cli-recommended\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Deploy using Appwrite CLI (recommended)\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EYou can easily deploy your functions using Appwrite CLI. If you have not already installed Appwrite CLI, please go through \u003Ca href=\"https:\u002F\u002Fappwrite.io\u002Fdocs\u002Fcommand-line\"\u003Ethese inctructions\u003C\u002Fa\u003E to install Appwrite CLI. Once installed, you can run the following command from the \u003Ccode\u003Estorage_cleaner\u003C\u002Fcode\u003E directory to deploy your tag.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Eappwrite functions createTag \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--functionId\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"nb\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--command\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'dart main.dart'\u003C\u002Fspan\u003E \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E--code\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'.'\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe function id can be found at the right sidebar in the function's overview page.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"deploy-manually\" href=\"#deploy-manually\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Deploy manually\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EYou will find the ' Deploy Tag ' button at the bottom of the function's overview page. If you tap that button, you will get instructions for deploying. Switch to the \u003Ccode\u003EManual\u003C\u002Fcode\u003E tab.\u003C\u002Fp\u003E\n\n\u003Cp\u003ECreate a tarfile first. From bash,\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Ecd\u003C\u002Fspan\u003E ..\n\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Etar\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-zcvf\u003C\u002Fspan\u003E code.tar.gz storage_cleaner\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce the tarfile is ready, in the Manual tab in the deploy tag dialog, attach the code.tar.gz and in command type \u003Ccode\u003Edart main.dart\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"activate-tag\" href=\"#activate-tag\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Activate tag\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOnce you deploy the tag, it will be listed under tags on the \u003Ccode\u003EOverview\u003C\u002Fcode\u003E page. And there you will find the option to activate\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"adding-environments-and-schedules\" href=\"#adding-environments-and-schedules\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Adding Environments and Schedules\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOn the function's page, switch to the \u003Ccode\u003ESettings\u003C\u002Fcode\u003E tab from the \u003Ccode\u003EOverview\u003C\u002Fcode\u003E tab. A function can be triggered based on an event or a schedule you choose. This particular function will be scheduled. We will schedule it to run every day.\u003C\u002Fp\u003E\n\n\u003Cp\u003EScroll below to find the Schedule text field. There, paste a CRON Syntax for scheduling. For every day use \u003Ccode\u003E0 0 * * *\u003C\u002Fcode\u003E. \u003C\u002Fp\u003E\n\n\u003Cp\u003EBelow that, under the \u003Ccode\u003EVariables\u003C\u002Fcode\u003E section, tap the \u003Ccode\u003EAdd Variable\u003C\u002Fcode\u003E button. and add the following variables\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAPPWRITE_ENDPOINT\u003C\u002Fstrong\u003E - Your Appwrite Endpoint (instead of localhost, use the ip address of your machine)\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAPPWRITE_PROJECT_ID\u003C\u002Fstrong\u003E - Your Project ID\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAPPWRITE_API_KEY\u003C\u002Fstrong\u003E - Your Appwrite API key with \u003Ccode\u003Efiles.read\u003C\u002Fcode\u003E and \u003Ccode\u003Efiles.write\u003C\u002Fcode\u003E permissions\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EDAYS_TO_EXPIRE\u003C\u002Fstrong\u003E - Days for files to expire\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EFinally, tap Update.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"verify-its-working\" href=\"#verify-its-working\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Verify it's working\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETo verify everything is working, in the Overview tab, tap the \u003Ccode\u003EExecute Now\u003C\u002Fcode\u003E button. Then visit the \u003Ccode\u003ELogs\u003C\u002Fcode\u003E tab to verify the output or errors are as expected.\u003C\u002Fp\u003E\n\n",body_markdown:"With the popularity of Flutter, Dart has become a popular mainstream language. In this tutorial, we will learn to create Appwrite Functions using Dart. In this tutorial, we will write a storage cleaner function that will remove files older than xx days from Appwrite storage. We will leverage the official [Dart SDK](https:\u002F\u002Fpub.dev\u002Fpackages\u002Fdart_appwrite).\n\nTo learn more about our Dart SDK, please head over to our [Dart SDK announcement post](https:\u002F\u002Fdev.to\u002Fappwrite\u002Fannouncing-appwrite-sdk-for-dart-3ehc).\n\n## What are Appwrite functions?\n[Appwrite Functions](https:\u002F\u002Fappwrite.io\u002Fdocs\u002Ffunctions) are a way for you to extend and customize your [Appwrite BaaS](https:\u002F\u002Fappwrite.io) functionality by executing your custom code. Appwrite can execute your custom code in response to any Appwrite system event like account creation, user login, or document update. You can also schedule your functions to run according to a CRON schedule or start them manually by triggering your function from an HTTP endpoint using the Appwrite client or server APIs.\n\n## Prerequisites\nIn order to continue with this tutorial, you need to have an Appwrite console that you can access and have a project you can use to test this function. If you have not already installed Appwrite, please do so. Installing Appwrite is really simple. Based on your operating system, run one of the following commands. Installation should be done in less than 2 minutes.\n\n### Unix\n```bash\ndocker run -it --rm \\\n    --volume \u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock \\\n    --volume \"$(pwd)\"\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw \\\n    --entrypoint=\"install\" \\\n    appwrite\u002Fappwrite:0.7.0\n```\n\n### Windows CMD\n```powershell\ndocker run -it --rm ^\n    --volume \u002F\u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock ^\n    --volume \"%cd%\"\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw ^\n    --entrypoint=\"install\" ^\n    appwrite\u002Fappwrite:0.7.0\n```\n\n### Windows PowerShell\n```powershell\ndocker run -it --rm ,\n    --volume \u002Fvar\u002Frun\u002Fdocker.sock:\u002Fvar\u002Frun\u002Fdocker.sock ,\n    --volume ${pwd}\u002Fappwrite:\u002Fusr\u002Fsrc\u002Fcode\u002Fappwrite:rw ,\n    --entrypoint=\"install\" ,\n    appwrite\u002Fappwrite:0.7.0\n```\n\nYou can also find detailed installation instructions on the Appwrite official [installation docs](https:\u002F\u002Fappwrite.io\u002Fdocs\u002Finstallation).\n\n## Activate Dart Functions Environment\nIn order for the Dart environment to be available in Appwrite Cloud Functions, you need to enable it. It can easily be done using the environment variables. In the Appwrite installation folder  find `.env` file. In the file find the environment variable `_APP_FUNCTIONS_ENVS` and there in the comma separated list add `dart-2.10` to make Dart environment available in the Appwrite Functions. After that, you can load updated configuration using `docker-compose up -d`.\n\n## Initialize Function Project\nFirst, create a project folder where you will create all the necessary files for your function. We will call this folder `storage_cleaner`. Inside create `main.dart` and `pubspec.yaml` files. Ensure your folder structure looks like this\n```\n.\n├── main.dart\n└── pubspec.yaml\n```\n\n## Add Appwrite Dart SDK dependency\nOpen `storage_cleaner` folder in your favorite text editor. Add the following code to `pubspec.yaml` file.\n\n```yml\nname: storage_cleaner\nversion: 1.0.0 \ndescription: \"\"\n\nenvironment:\n  sdk: \"\u003E=2.7.0 \u003C3.0.0\"\n\ndependencies:\n  dart_appwrite: ^0.4.0\n\n```\nHere we are giving the package a name, version, description, and supporting Dart environment and dependencies.\n\n## Write your Function\nOpen `main.dart` and update with the following code:\n\n```dart\nimport 'dart:io';\n\nimport 'package:dart_appwrite\u002Fdart_appwrite.dart';\n\nvoid main(List\u003CString\u003E args) async {\n  \u002F\u002F Initialise the client SDK\n  Map\u003CString, String\u003E envVars = Platform.environment;\n  final Client client = Client();\n  client\n      .setEndpoint(envVars['APPWRITE_ENDPOINT'])\n      .setProject(envVars['APPWRITE_PROJECT_ID'])\n      .setKey(\n          envVars['APPWRITE_API_KEY']);\n\n  \u002F\u002F Initialise the storage SDK\n  final storage = new Storage(client);\n\n  int daysToExpire = int.parse(envVars['DAYS_TO_EXPIRE']);\n\n  final res = await storage.listFiles(orderType: OrderType.desc, limit: 100);\n  final data = res.data;\n  final files = List.from(data['files']);\n  var timestamp = DateTime.now()\n      .subtract(Duration(days: daysToExpire))\n      .millisecondsSinceEpoch;\n  var deletedFiles = 0;\n  for (final file in files) {\n    if (file['dateCreated'] * 1000 \u003C timestamp) {\n      await storage.deleteFile(fileId: file['\\$id']);\n      print(\"Deleted ${file['\\$id']}\");\n      deletedFiles++;\n    }\n  }\n  print(\"Total files deleted: $deletedFiles\");\n}\n\n```\nThe environment variables that we are accessing here are later set on the Appwrite Function's settings.\n\n## Get the dependencies\nIn order to deploy this to Appwrite Functions, the dependencies need to be inside this folder itself, so we do the following to save dependencies in the current directory.\n\nUsing the terminal in the `storage_cleaner` directory,\n```\n$ export PUB_CACHE=.appwrite\n$ dart pub get\n```\nThis should now get dependencies and place the downloaded dependencies inside `.appwrite` folder. Ensure that your folder structure looks like this\n```\n.\n├── main.dart\n├── .appwrite\u002F\n├── pubspec.lock\n└── pubspec.yaml\n```\n\nThere might be other files and folders created by the Dart tool or your text editor, and you can ignore them.\n\n## Create a Function in Your Appwrite Console\nLogin to your Appwrite console and open the project of your choosing. There, from the sidebar, tap on the `Functions` menu. In the functions dashboard, tap the `Add Function` button.\n\n![add-function](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fpdsp2ge02wz7tn35t53p.png)\n \n\nA dialog will be presented. Give your function a name of your choosing. We will call it `storage cleaner`. Next to the environment, we are using Dart, so we will choose Dart 2.10. Then tap create.\n\n## Deploy Tag\nOnce you tap create in the above step, you are taken to the newly created functions overview page.\n\nThere are two ways to deploy your tag.\n\n![deploy](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy85yp4xc0c23wdiiqj9w.png)\n\n### Deploy using Appwrite CLI (recommended)\nYou can easily deploy your functions using Appwrite CLI. If you have not already installed Appwrite CLI, please go through [these inctructions](https:\u002F\u002Fappwrite.io\u002Fdocs\u002Fcommand-line) to install Appwrite CLI. Once installed, you can run the following command from the `storage_cleaner` directory to deploy your tag.\n\n```bash\nappwrite functions createTag \\\n    --functionId=\u003Cid\u003E \\\n    --command='dart main.dart' \\\n    --code='.'\n```\nThe function id can be found at the right sidebar in the function's overview page.\n\n### Deploy manually\nYou will find the ' Deploy Tag ' button at the bottom of the function's overview page. If you tap that button, you will get instructions for deploying. Switch to the `Manual` tab.\n\nCreate a tarfile first. From bash,\n```bash\n$ cd ..\n$ tar -zcvf code.tar.gz storage_cleaner\n```\n\nOnce the tarfile is ready, in the Manual tab in the deploy tag dialog, attach the code.tar.gz and in command type `dart main.dart`.\n\n## Activate tag\nOnce you deploy the tag, it will be listed under tags on the `Overview` page. And there you will find the option to activate\n\n## Adding Environments and Schedules\nOn the function's page, switch to the `Settings` tab from the `Overview` tab. A function can be triggered based on an event or a schedule you choose. This particular function will be scheduled. We will schedule it to run every day.\n\nScroll below to find the Schedule text field. There, paste a CRON Syntax for scheduling. For every day use `0 0 * * *`. \n\nBelow that, under the `Variables` section, tap the `Add Variable` button. and add the following variables\n\n* **APPWRITE_ENDPOINT** - Your Appwrite Endpoint (instead of localhost, use the ip address of your machine)\n* **APPWRITE_PROJECT_ID** - Your Project ID\n* **APPWRITE_API_KEY** - Your Appwrite API key with `files.read` and `files.write` permissions\n* **DAYS_TO_EXPIRE** - Days for files to expire\n\nFinally, tap Update.\n\n## Verify it's working\nTo verify everything is working, in the Overview tab, tap the `Execute Now` button. Then visit the `Logs` tab to verify the output or errors are as expected.\n",user:{name:"Damodar Lohani",username:"lohanidamodar",twitter_username:"LohaniDamodar",github_username:a,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Y2Vg3V3b--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F551623\u002Fd6834701-4563-4984-8f1d-7c6735acd3b6.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--WbIqGPLg--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F551623\u002Fd6834701-4563-4984-8f1d-7c6735acd3b6.jpg"},organization:{name:"Appwrite",username:c,slug:c,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--MwfZh3wG--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2225\u002Feb541cf9-84f4-4101-987c-c219cd4b34fc.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5xS_iZdD--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2225\u002Feb541cf9-84f4-4101-987c-c219cd4b34fc.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Flohanidamodar\u002F632795",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-03-12T08:50:19Z","appwrite","https:\u002F\u002Fdev.to\u002Fappwrite\u002Flearn-how-to-create-and-run-appwrite-functions-with-dart-5668",23));