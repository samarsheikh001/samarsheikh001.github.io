__NUXT_JSONP__("/articles/maikmichel/558292", (function(a,b,c,d,e,f){b.type_of="article";b.id=558292;b.title="Logging errors from the client-side";b.description="APEX and the Oracle database offers us a lot of possibilities to store errors or log outputs in the...";b.readable_publish_date="Jan 1";b.slug="logging-errors-from-the-client-side-2oif";b.path="\u002Fmaikmichel\u002Flogging-errors-from-the-client-side-2oif";b.url=c;b.comments_count=0;b.public_reactions_count=d;b.collection_id=a;b.published_timestamp=e;b.positive_reactions_count=d;b.cover_image=a;b.social_image="https:\u002F\u002Fdev.to\u002Fsocial_previews\u002Farticle\u002F558292.png";b.canonical_url=c;b.created_at="2021-01-01T16:22:09Z";b.edited_at=a;b.crossposted_at=e;b.published_at=f;b.last_comment_at=f;b.reading_time_minutes=2;b.tag_list="javascript, apex, orclapex";b.tags=["javascript","apex","orclapex"];b.body_html="\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Reb1ZLIs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fnathan-dumlao-a3ra9eXUjvo-unsplash.jpg\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Reb1ZLIs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fnathan-dumlao-a3ra9eXUjvo-unsplash.jpg\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAPEX and the Oracle database offers us a lot of possibilities to store errors or log outputs in the DB. Starting with the popular OraOpenSource framework logger up to the APEX own processing by apex_debug. With both options, the error or log output is created and processed in the database. But what about errors that occur in the browser? For example, if a dynamic action hits an unhandled exception via JavaScript?\u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\u003Cp\u003EFor this, most browsers provide us with the onError event. This is called whenever there is an unhandled exception. How convenient! Let's take advantage of this and implement the actual logging of the error here via an APEX server process.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFirst we will create a DynamikAction on page 0 (Global Page). This page has a special function. Everything that is stored here is available on every page. So will our future error handling.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--sUV8KlYl--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fpage-builder-01\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--sUV8KlYl--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fpage-builder-01\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs True-Action (Execute JavaScript Code) we deposit the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"nb\"\u003Ewindow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eonerror\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emsg\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eurl\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ElineNo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EcolumnNo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E  \n  \u003Cspan class=\"nx\"\u003Eapex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eserver\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eprocess\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003ELOG_ERROR\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ex01\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emsg\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ex02\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eurl\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ex03\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ElineNo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ex04\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EcolumnNo\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003EdataType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Etext\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Esuccess\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EpData\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F Error logged, let the User see some message\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nx\"\u003Eapex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EclearErrors\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nx\"\u003Eapex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EshowErrors\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E([\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"na\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"na\"\u003Elocation\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Epage\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"na\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EWarning, an unhandled error occured, please contact an administrator!\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"na\"\u003Eunsafe\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E]);\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EHere we register a function that calls our LOG_ERROR process, which is yet to be implemented, in the event of an error. We pass the parameters with the respective information about the error that occurred (message, URL, row number, column number).  \u003C\u002Fp\u003E\n\n\u003Cp\u003EThen we create a server process to be called via AJAX callback. Here we implement our actual logging. For example, we use OraOpenSource-Logger for logging.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--XvGnfL1R--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fapplication-process-02\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--XvGnfL1R--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fapplication-process-02\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith this method, we will no longer miss any client-side errors. If you think about the whole thing a bit further, the error can be transferred directly into the own ticket management. Before doing so, however, you should check whether the error has not already been transferred, so it is sufficient if only one counter is incremented here if the same error occurs several times, otherwise the number of error tickets can of course increase enormously.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--YwidFU4_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fconsole-output-03\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--YwidFU4_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fconsole-output-03\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--P0EXACVl--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fquery-output-04\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--P0EXACVl--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fquery-output-04\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith this method, you no longer miss errors that appear on the client side \u002F in the browser. And only errors that are reported to us and those that we \"see\" we can fix as developers.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFeature-Image: Photo by \u003Ca href=\"https:\u002F\u002Funsplash.com\u002F@nate_dumlao?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\"\u003ENathan Dumlao\u003C\u002Fa\u003E on \u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Ferror?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\"\u003EUnsplash\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n";b.body_markdown="---\ntitle: Logging errors from the client-side\npublished: true\ndate: 2021-01-01 16:13:55 UTC\ntags: Javascript,APEX,ORCLAPEX\ncanonical_url: \n---\n\n ![](https:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fnathan-dumlao-a3ra9eXUjvo-unsplash.jpg)\n\nAPEX and the Oracle database offers us a lot of possibilities to store errors or log outputs in the DB. Starting with the popular OraOpenSource framework logger up to the APEX own processing by apex\\_debug. With both options, the error or log output is created and processed in the database. But what about errors that occur in the browser? For example, if a dynamic action hits an unhandled exception via JavaScript?\n\n* * *\n\nFor this, most browsers provide us with the onError event. This is called whenever there is an unhandled exception. How convenient! Let's take advantage of this and implement the actual logging of the error here via an APEX server process.\n\nFirst we will create a DynamikAction on page 0 (Global Page). This page has a special function. Everything that is stored here is available on every page. So will our future error handling.\n\n![](https:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fpage-builder-01)\n\nAs True-Action (Execute JavaScript Code) we deposit the following code:\n\n```JavaScript\nwindow.onerror = function (msg, url, lineNo, columnNo, error) {  \n  apex.server.process('LOG_ERROR',\n    {\n      x01: msg ,\n      x02: url,\n      x03: lineNo,\n      x04: columnNo\n    },\n    {\n      dataType: \"text\",\n      success: function (pData) {\n        \u002F\u002F Error logged, let the User see some message\n        apex.message.clearErrors();\n        apex.message.showErrors([\n            {\n                type: \"error\",\n                location: \"page\",\n                message: \"Warning, an unhandled error occured, please contact an administrator!\",\n                unsafe: false\n            }\n        ]);\n      }\n    }\n  );\n\n  return false;\n}\n```\n\nHere we register a function that calls our LOG\\_ERROR process, which is yet to be implemented, in the event of an error. We pass the parameters with the respective information about the error that occurred (message, URL, row number, column number).  \n  \nThen we create a server process to be called via AJAX callback. Here we implement our actual logging. For example, we use OraOpenSource-Logger for logging.\n\n![](https:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fapplication-process-02)\n\nWith this method, we will no longer miss any client-side errors. If you think about the whole thing a bit further, the error can be transferred directly into the own ticket management. Before doing so, however, you should check whether the error has not already been transferred, so it is sufficient if only one counter is incremented here if the same error occurs several times, otherwise the number of error tickets can of course increase enormously.\n\n![](https:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fconsole-output-03)\n\n![](https:\u002F\u002Fmicodify.de\u002Fmedia\u002Fposts\u002F15\u002Fquery-output-04)\n\nWith this method, you no longer miss errors that appear on the client side \u002F in the browser. And only errors that are reported to us and those that we \"see\" we can fix as developers.\n\nFeature-Image: Photo by [Nathan Dumlao](https:\u002F\u002Funsplash.com\u002F@nate_dumlao?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Ferror?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)";b.user={name:"Maik Michel",username:"maikmichel",twitter_username:"Maik__Michel",github_username:"MaikMichel",website_url:"https:\u002F\u002Fmicodify.de",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--PkXOj-th--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F310147\u002F510230bf-3c00-443e-9854-22952f04825f.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--iAWFcZej--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F310147\u002F510230bf-3c00-443e-9854-22952f04825f.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:b}},mutations:[["SET_CURRENT_ARTICLE",b]]}}(null,{},"https:\u002F\u002Fdev.to\u002Fmaikmichel\u002Flogging-errors-from-the-client-side-2oif",7,"2021-01-01T16:29:13Z","2021-01-01T16:13:55Z")));