window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:695123,title:"Functional programming vs object oriented programming",description:"Functional programming is the programming technique that accentuates the functional factors required...",readable_publish_date:"May 12",slug:"functional-programming-vs-object-oriented-programming-2he8",path:"\u002Fthecodess\u002Ffunctional-programming-vs-object-oriented-programming-2he8",url:b,comments_count:1,public_reactions_count:c,collection_id:a,published_timestamp:d,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--S4e6ZHGe--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxg52el4w4ar51yor6eo5.jpeg",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Y3Q55i7g--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxg52el4w4ar51yor6eo5.jpeg",canonical_url:b,created_at:"2021-05-11T18:17:10Z",edited_at:a,crossposted_at:a,published_at:d,last_comment_at:"2021-05-31T07:16:57Z",reading_time_minutes:3,tag_list:"programming, functional, oop",tags:["programming","functional","oop"],body_html:"\u003Cp\u003EFunctional programming is the programming technique that accentuates the functional factors required for creating and implementing the programs. Simply put, Functional programming (FP) is the process of building software by composing pure functions.  Object-oriented programming is a programming paradigm based on the concept of \"objects\", which can contain data and code: data in the form of fields, and code, in the form of procedures. \u003C\u002Fp\u003E\n\n\u003Cp\u003EFunctional programming:\u003Cbr\u003E\nFunctional programming is a declarative programming paradigm where programs are created by applying sequential functions rather than statements. Each function takes in an input value and returns a consistent output value without altering or being affected by the program state.\u003Cbr\u003E\nFunctional programming is gaining popularity due to its efficiency and scalability to solve modern problems. Functional programming supports programming languages like Lisp, Clojure, Wolfram, Erlang, Haskell, F#, R, and other prominent languages. Functional programming is great for data science work. \u003C\u002Fp\u003E\n\n\u003Cp\u003EObject-oriented programming:\u003Cbr\u003E\nObject Oriented programming (OOP) is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple, reusable pieces of code blueprints (usually called classes), which are used to create individual instances of objects. Object-oriented programming languages include JavaScript, C++, Java, and Python. Object-oriented programming is about creating objects that contain both data and functions. A class is an abstract blueprint used to create more specific, concrete objects. Classes define what attributes an instance of this type will have, like color, but not the value of those attributes for a specific object.Classes can also contain functions, called methods available only to objects of that type. These functions are defined within the class and perform some action helpful to that specific type of object.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFunctional programming vs Object oriented programming\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EFunctional programming emphasizes on evaluation of functions while object oriented programming is based on the concept of objects.\u003C\u002Fli\u003E\n\u003Cli\u003EFunctional programming uses immutable data while object oriented programming uses the mutable data.\u003C\u002Fli\u003E\n\u003Cli\u003EFunctional programming follows the declarative programming model while object oriented programming follows the imperative programming model.\u003C\u002Fli\u003E\n\u003Cli\u003EFunctional programming supports parallel programming while object oriented programming does not.\u003C\u002Fli\u003E\n\u003Cli\u003EIn functional programming, statements can be executed in any order. In OOP, statements are executed in a particular order.\u003C\u002Fli\u003E\n\u003Cli\u003EIn functional programming, recursion is used for iterative data while in OOP, loops are used for iterative data.\u003C\u002Fli\u003E\n\u003Cli\u003EVariables and functions are the basic elements of functional programming. Objects and models are the basic elements of object oriented programming.\u003C\u002Fli\u003E\n\u003Cli\u003EFunctional programming is used only when there are few things with more operations. Object-oriented programming is used when there are many things with few operations.\u003C\u002Fli\u003E\n\u003Cli\u003EIn functional programming, a state does not exist. In object-oriented programming, the state exists.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EIn functional programming, a function is the primary manipulation unit. In object-oriented, an object is the primary manipulation unit.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EFunctional programming provides high performance in processing large data for applications. Object-oriented programming is not good for big data processing.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EFunctional programming does not support conditional statements. In Object-oriented programming, conditional statements can be used like if-else statements and switch statement.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EWhich is better?\u003C\u002Fp\u003E\n\n\u003Cp\u003EWell,it depends on what your program is trying to do.\u003Cbr\u003E\nBoth OOP and FP have the shared goal of creating understandable, flexible programs that are free of bugs. But they have two different approaches for how to best create those programs.\u003Cbr\u003E\nIn all programs, there are two primary components: the data (the stuff a program knows) and the behaviors (the stuff a program can do to\u002Fwith that data). OOP says that bringing together data and its associated behavior in a single location (called an “object”) makes it easier to understand how a program works. Functional programming says that data and behavior are distinctively different things and should be kept separate for clarity.\u003Cbr\u003E\nIn functional programming, data cannot be stored in objects, and it can only be transformed by creating functions. In object-oriented programming, data is stored in objects. Object-oriented programming is widely used by programmers and successful also.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn Object-oriented programming, it is quite hard to maintain objects while increasing the levels of inheritance. In functional programming, it requires a new object to execute functions, and it takes a lot of memory for executing the applications.\u003Cbr\u003E\nEach has their own advantages and disadvantages, it is up to the programmers or developers to choose the programming language concept that makes their development productive and easy.\u003C\u002Fp\u003E\n\n",body_markdown:"Functional programming is the programming technique that accentuates the functional factors required for creating and implementing the programs. Simply put, Functional programming (FP) is the process of building software by composing pure functions.  Object-oriented programming is a programming paradigm based on the concept of \"objects\", which can contain data and code: data in the form of fields, and code, in the form of procedures. \n\nFunctional programming:\nFunctional programming is a declarative programming paradigm where programs are created by applying sequential functions rather than statements. Each function takes in an input value and returns a consistent output value without altering or being affected by the program state.\nFunctional programming is gaining popularity due to its efficiency and scalability to solve modern problems. Functional programming supports programming languages like Lisp, Clojure, Wolfram, Erlang, Haskell, F#, R, and other prominent languages. Functional programming is great for data science work. \n\nObject-oriented programming:\nObject Oriented programming (OOP) is a programming paradigm that relies on the concept of classes and objects. It is used to structure a software program into simple, reusable pieces of code blueprints (usually called classes), which are used to create individual instances of objects. Object-oriented programming languages include JavaScript, C++, Java, and Python. Object-oriented programming is about creating objects that contain both data and functions. A class is an abstract blueprint used to create more specific, concrete objects. Classes define what attributes an instance of this type will have, like color, but not the value of those attributes for a specific object.Classes can also contain functions, called methods available only to objects of that type. These functions are defined within the class and perform some action helpful to that specific type of object.\n\nFunctional programming vs Object oriented programming\n\n* Functional programming emphasizes on evaluation of functions while object oriented programming is based on the concept of objects.\n* Functional programming uses immutable data while object oriented programming uses the mutable data.\n* Functional programming follows the declarative programming model while object oriented programming follows the imperative programming model.\n* Functional programming supports parallel programming while object oriented programming does not.\n* In functional programming, statements can be executed in any order. In OOP, statements are executed in a particular order.\n* In functional programming, recursion is used for iterative data while in OOP, loops are used for iterative data.\n* Variables and functions are the basic elements of functional programming. Objects and models are the basic elements of object oriented programming.\n* Functional programming is used only when there are few things with more operations. Object-oriented programming is used when there are many things with few operations.\n* In functional programming, a state does not exist. In object-oriented programming, the state exists.\n* In functional programming, a function is the primary manipulation unit. In object-oriented, an object is the primary manipulation unit.\n\n* Functional programming provides high performance in processing large data for applications. Object-oriented programming is not good for big data processing.\n* Functional programming does not support conditional statements. In Object-oriented programming, conditional statements can be used like if-else statements and switch statement.\n\n\nWhich is better?\n\nWell,it depends on what your program is trying to do.\nBoth OOP and FP have the shared goal of creating understandable, flexible programs that are free of bugs. But they have two different approaches for how to best create those programs.\nIn all programs, there are two primary components: the data (the stuff a program knows) and the behaviors (the stuff a program can do to\u002Fwith that data). OOP says that bringing together data and its associated behavior in a single location (called an “object”) makes it easier to understand how a program works. Functional programming says that data and behavior are distinctively different things and should be kept separate for clarity.\nIn functional programming, data cannot be stored in objects, and it can only be transformed by creating functions. In object-oriented programming, data is stored in objects. Object-oriented programming is widely used by programmers and successful also.\n\nIn Object-oriented programming, it is quite hard to maintain objects while increasing the levels of inheritance. In functional programming, it requires a new object to execute functions, and it takes a lot of memory for executing the applications.\nEach has their own advantages and disadvantages, it is up to the programmers or developers to choose the programming language concept that makes their development productive and easy.",user:{name:"Godday Success (The Codess) ",username:"thecodess",twitter_username:"DaCodess",github_username:a,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6n-0v8iN--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F545581\u002F55450370-8123-40f9-a770-a555275f7a1c.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--wcSJKe27--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F545581\u002F55450370-8123-40f9-a770-a555275f7a1c.jpg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fthecodess\u002F695123",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"https:\u002F\u002Fdev.to\u002Fthecodess\u002Ffunctional-programming-vs-object-oriented-programming-2he8",57,"2021-05-12T08:09:08Z"));