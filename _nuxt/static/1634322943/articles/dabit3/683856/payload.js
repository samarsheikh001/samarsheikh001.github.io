__NUXT_JSONP__("/articles/dabit3/683856", (function(a,b,c,d,e,f){b.type_of="article";b.id=683856;b.title="Building GraphQL APIs on Ethereum";b.description="In this post you'll learn how to build and deploy a GraphQL API using data stored in the Ethereum blockchain.";b.readable_publish_date="May 4";b.slug="building-graphql-apis-on-ethereum-4poa";b.path="\u002Fdabit3\u002Fbuilding-graphql-apis-on-ethereum-4poa";b.url=c;b.comments_count=9;b.public_reactions_count=d;b.collection_id=e;b.published_timestamp=f;b.positive_reactions_count=d;b.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--M0B8if5t--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fnf95ssg9zl4v9oyapugl.png";b.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--P_EkUiKa--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fnf95ssg9zl4v9oyapugl.png";b.canonical_url=c;b.created_at="2021-04-30T16:33:43Z";b.edited_at="2021-09-26T13:17:42Z";b.crossposted_at=e;b.published_at=f;b.last_comment_at="2021-09-30T17:58:56Z";b.reading_time_minutes=11;b.tag_list="webdev, programming, tutorial, graphql";b.tags=["webdev","programming","tutorial","graphql"];b.body_html="\u003Cp\u003EThe number of production \u003Ca href=\"https:\u002F\u002Fethereum.org\u002Fen\u002Fdapps\u002F\"\u003Edapps\u003C\u002Fa\u003E continues to explode and \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FFurqanR\u002Fstatus\u002F1389393957126246403?s=20\"\u003Ethe demand\u003C\u002Fa\u003E for \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FCryptoCobain\u002Fstatus\u002F1371901082113351680?s=20\"\u003Edevelopers building with Solidity\u003C\u002Fa\u003E and other blockchain languages continues to outpace supply, \u003Ca href=\"https:\u002F\u002Fcryptocurrencyjobs.co\u002Fsalaries\u002Fsolidity-developer\u002F\"\u003Emoving wages higher and higher\u003C\u002Fa\u003E. \u003C\u002Fp\u003E\n\n\u003Cp\u003EAs a developer \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdabit3\u002Fstatus\u002F1379157277660299264\"\u003Egetting into this space\u003C\u002Fa\u003E, I quickly learned there are a lot of differences in the way that we interact with and build on top of blockchains versus what I was used to in the traditional web. With Ethereum (and other blockchains), data isn’t stored in a format that can efficiently or easily be consumed directly from other applications or front ends. The problem is that you need to have the data indexed and organized for efficient retrieval.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETraditionally, that’s the work that databases do in the centralized tech stack, but that indexing layer was missing in the \u003Ca href=\"https:\u002F\u002Fbeta.web3index.org\u002Fblog\u002Fintroducing-the-web3-index\"\u003EWeb3 stack\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn the traditional web stack, databases, servers, and APIs query, filter, sort, paginate, group, and join data before it is returned to an application usually via some type of http request. These types of data transformations are not possible when reading data directly from Ethereum or other blockchains.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn the past, developers were getting around this by building their own centralized indexing servers - pulling data from blockchains, storing it in a database, and exposing it via an API endpoint. This required significant engineering and hardware resources and broke the important security properties required for decentralization.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHow can we build an API on top of blockchain data that can easily be deployed to a decentralized web infrastructure? Let's find out.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"decentralizing-web-infrastructure\" href=\"#decentralizing-web-infrastructure\"\u003E\n  \u003C\u002Fa\u003E\n  Decentralizing web infrastructure\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EThe vision of and movement towards a decentralized internet is commonly referred to as \u003Ca href=\"https:\u002F\u002Fethereum.org\u002Fen\u002Fdevelopers\u002Fdocs\u002Fweb2-vs-web3\u002F\"\u003EWeb3\u003C\u002Fa\u003E. Web3 enhances the internet as we know it today with these added characteristics:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EDecentralized\u003C\u002Fli\u003E\n\u003Cli\u003EVerifiable\u003C\u002Fli\u003E\n\u003Cli\u003ETrustless\u003C\u002Fli\u003E\n\u003Cli\u003ESelf governing\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EFor a great overview of what Web3 is, check out \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=KHwVljhq7NQ\"\u003Ethis video\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fjuanbenet\"\u003EJuan Benet\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003ETo achieve decentralization, protocols define networks that offer a range of digital services such as compute, storage, bandwidth, identity, and other pieces of web infrastructure with no intermediaries. These \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=j2rXJLW_93o\"\u003Eprotocols\u003C\u002Fa\u003E are usually distributed across multiple nodes (servers) that enable the participation of anyone looking to be part of the network and provide the service.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe network participants are \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Nurp3Foqf2w\"\u003Eincentivized\u003C\u002Fa\u003E to provide the highest quality services to anyone consuming them. Rules are also put in place to ensure the security and the integrity of the network itself. This is usually accomplished using a combination of consensus mechanisms programmed into smart contracts implementing various types of game theory and \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fblog\u002Fmodeling-cryptoeconomic-protocols-as-complex-systems-part-1\"\u003Ecryptoeconomic design\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"what-makes-a-service-truly-decentralized\" href=\"#what-makes-a-service-truly-decentralized\"\u003E\n  \u003C\u002Fa\u003E\n  What makes a service truly decentralized?\n\u003C\u002Fh4\u003E\n\n\n\u003Cblockquote class=\"ltag__twitter-tweet\" data-url=\"https:\u002F\u002Ftwitter.com\u002Fyanivgraph\u002Fstatus\u002F1387921317656023041\"\u003E\n\n  \u003Cdiv class=\"ltag__twitter-tweet__main\" data-url=\"https:\u002F\u002Ftwitter.com\u002Fyanivgraph\u002Fstatus\u002F1387921317656023041\"\u003E\n    \u003Cdiv class=\"ltag__twitter-tweet__header\"\u003E\n      \u003Cimg class=\"ltag__twitter-tweet__profile-image\" src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Mbu0QJ-p--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F2853260724\u002F6dad799e1787ac0fbfb3594e5d271026_normal.jpeg\" alt=\"Yaniv Tal profile image\" loading=\"lazy\"\u003E\n      \u003Cdiv class=\"ltag__twitter-tweet__full-name\"\u003E\n        Yaniv Tal\n      \u003C\u002Fdiv\u003E\n      \u003Cdiv class=\"ltag__twitter-tweet__username\"\u003E\n        @yanivgraph\n      \u003C\u002Fdiv\u003E\n      \u003Cdiv class=\"ltag__twitter-tweet__twitter-logo\"\u003E\n        \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ir1kO05j--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev.to\u002Fassets\u002Ftwitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg\" alt=\"twitter logo\" loading=\"lazy\"\u003E\n      \u003C\u002Fdiv\u003E\n    \u003C\u002Fdiv\u003E\n    \u003Cdiv class=\"ltag__twitter-tweet__body\"\u003E\n      \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FBernFeitosa\"\u003E@BernFeitosa\u003C\u002Fa\u003E 1) It’s operated by a permissionless network of nodes\u003Cbr\u003E2) The service is verifiable\u003Cbr\u003E3) Trust minimized\u003Cbr\u003E4) Market-based pricing\u003Cbr\u003E5) Censorship resistance\n    \u003C\u002Fdiv\u003E\n    \u003Cdiv class=\"ltag__twitter-tweet__date\"\u003E\n      00:06 AM - 30 Apr 2021\n    \u003C\u002Fdiv\u003E\n\n\n    \u003Cdiv class=\"ltag__twitter-tweet__actions\"\u003E\n      \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fintent\u002Ftweet?in_reply_to=1387921317656023041\" class=\"ltag__twitter-tweet__actions__button\"\u003E\n        \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--fFnoeFxk--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev.to\u002Fassets\u002Ftwitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg\" alt=\"Twitter reply action\" loading=\"lazy\"\u003E\n      \u003C\u002Fa\u003E\n      \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fintent\u002Fretweet?tweet_id=1387921317656023041\" class=\"ltag__twitter-tweet__actions__button\"\u003E\n        \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--k6dcrOn8--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev.to\u002Fassets\u002Ftwitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg\" alt=\"Twitter retweet action\" loading=\"lazy\"\u003E\n      \u003C\u002Fa\u003E\n      \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fintent\u002Flike?tweet_id=1387921317656023041\" class=\"ltag__twitter-tweet__actions__button\"\u003E\n        \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--SRQc9lOp--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev.to\u002Fassets\u002Ftwitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg\" alt=\"Twitter like action\" loading=\"lazy\"\u003E\n      \u003C\u002Fa\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fblockquote\u003E\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"building-on-the-graph\" href=\"#building-on-the-graph\"\u003E\n  \u003C\u002Fa\u003E\n  Building on The Graph\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIn this post, we will be looking at one such protocol, \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002F\"\u003EThe Graph\u003C\u002Fa\u003E, and how to build and deploy our own GraphQL API using data stored in the Ethereum blockchain.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe Graph is an indexing protocol for querying blockchains like Ethereum and networks like \u003Ca href=\"https:\u002F\u002Fipfs.io\u002F\"\u003EIPFS\u003C\u002Fa\u003E. Anyone can build and publish open APIs, called subgraphs, making data easily accessible.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESubgraphs define the data, data sources, and data access patterns that you would like to have made available via a GraphQL API. You as a developer can choose either to use a subgraph \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fexplorer\u002F\"\u003Ealready deployed\u003C\u002Fa\u003E by another developer, or define and deploy your own subgraph and use it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EDevelopers can create open APIs by deploying their subgraphs either to the hosted service or to the network, enabling them to earn money based on the amount of usage of their API.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESubgraphs are made up of a few main parts:\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"1-graphql-schema\" href=\"#1-graphql-schema\"\u003E\n  \u003C\u002Fa\u003E\n  1. GraphQL Schema\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EThe GraphQL Schema defines the data types \u002F entities you would like to save and query for. You can also define configuration like relationships and full text search capabilities in your schema.\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"2-subgraph-manifest-yaml-configuration\" href=\"#2-subgraph-manifest-yaml-configuration\"\u003E\n  \u003C\u002Fa\u003E\n  2. Subgraph Manifest (yaml configuration)\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003E(from the docs) The \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fdocs\u002Fdefine-a-subgraph#the-subgraph-manifest\"\u003Emanifest\u003C\u002Fa\u003E defines the smart contracts your subgraph indexes, their \u003Ca href=\"https:\u002F\u002Fdocs.soliditylang.org\u002Fen\u002Fv0.8.4\u002Fabi-spec.html\"\u003EABIs\u003C\u002Fa\u003E, which events from these contracts to pay attention to, and how to map event data to entities that Graph Node stores and allows to query. \u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"3-assemblyscript-mappings\" href=\"#3-assemblyscript-mappings\"\u003E\n  \u003C\u002Fa\u003E\n  3. AssemblyScript Mappings\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EAssemblyScript Mappings allow you to save data to be indexed using the entity types defined in your schema. The \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fgraphprotocol\u002Fgraph-cli\"\u003EGraph CLI\u003C\u002Fa\u003E also generates AssemblyScript types using a combination of the subgraph's schema along with a smart contract's ABIs.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"hosted-service-vs-subgraph-studio\" href=\"#hosted-service-vs-subgraph-studio\"\u003E\n  \u003C\u002Fa\u003E\n  Hosted service vs Subgraph Studio\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThere are two ways to build subgraphs - the \u003Cstrong\u003EHosted Service\u003C\u002Fstrong\u003E and \u003Cstrong\u003ESubgraph Studio\u003C\u002Fstrong\u003E. In this tutorial we'll be building a subgraph for the \u003Cstrong\u003EHosted Service\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003EHosted Service\u003C\u002Fstrong\u003E is a centralized service, is free, and will exist until the decentralized network is at feature parity with it. You can build a subgraph for the decentralized network by using \u003Cstrong\u003ESubgraph Studio\u003C\u002Fstrong\u003E and following \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fblog\u002Fbuilding-with-subgraph-studio\"\u003Ethis guide\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAt some point in the future, the \u003Cstrong\u003ESubgraph Studio\u003C\u002Fstrong\u003E will be the only way to build subgraphs.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"lets-start-building\" href=\"#lets-start-building\"\u003E\n  \u003C\u002Fa\u003E\n  Let's start building\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow that we have a good understanding of The Graph and how it works, let's start writing some code.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this tutorial we'll build a subgraph for querying NTF data from the \u003Ca href=\"https:\u002F\u002Fetherscan.io\u002Faddress\u002F0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\"\u003EZora smart contract\u003C\u002Fa\u003E, implementing queries for fetching NFTs as well as their owners, and building relationships between them.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"prerequisites\" href=\"#prerequisites\"\u003E\n  \u003C\u002Fa\u003E\n  Prerequisites\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ETo be successful in this tutorial, you should have \u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fen\u002F\"\u003ENode.js\u003C\u002Fa\u003E installed on your machine. These days, I recommend using either \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnvm-sh\u002Fnvm\"\u003Envm\u003C\u002Fa\u003E or \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FSchniz\u002Ffnm\u002Fblob\u002Fmaster\u002Fdocs\u002Fcommands.md\"\u003Efnm\u003C\u002Fa\u003E to manage Node.js versions.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"creating-the-graph-project-in-the-graph-explorer\" href=\"#creating-the-graph-project-in-the-graph-explorer\"\u003E\n  \u003C\u002Fa\u003E\n  Creating the Graph project in the Graph Explorer\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ETo get started, open the \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard\"\u003EGraph Explorer\u003C\u002Fa\u003E and either sign in or create a new account.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENext, go to the \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard\"\u003Edashboard\u003C\u002Fa\u003E and click on \u003Cstrong\u003EAdd Subgraph\u003C\u002Fstrong\u003E to create a new subgraph.\u003C\u002Fp\u003E\n\n\u003Cp\u003EConfigure your subgraph with the following properties:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ESubgraph Name - \u003Cstrong\u003EZoranftsubgraph\u003C\u002Fstrong\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003ESubtitle - \u003Cstrong\u003EA subgraph for querying NFTs\u003C\u002Fstrong\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EOptional - Fill the description and GITHUB URL properties\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EOnce the subgraph is created, we will initialize the subgraph locally using the Graph CLI.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"initializing-a-new-subgraph-using-the-graph-cli\" href=\"#initializing-a-new-subgraph-using-the-graph-cli\"\u003E\n  \u003C\u002Fa\u003E\n  Initializing a new subgraph using the Graph CLI\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ENext, install the Graph CLI:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enpm \u003Cspan class=\"nb\"\u003Einstall\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-g\u003C\u002Fspan\u003E @graphprotocol\u002Fgraph-cli\n\n\u003Cspan class=\"c\"\u003E# or\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Eyarn global add @graphprotocol\u002Fgraph-cli\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce the Graph CLI has been installed you can initialize a new subgraph with the Graph CLI \u003Ccode\u003Einit\u003C\u002Fcode\u003E command.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThere are two ways to initialize a new subgraph:\u003C\u002Fp\u003E\n\n\u003Cp\u003E1 - From an example subgraph\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Egraph init \u003Cspan class=\"nt\"\u003E--from-example\u003C\u002Fspan\u003E &lt;GITHUB_USERNAME&gt;\u002F&lt;SUBGRAPH_NAME&gt; \u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E&lt;DIRECTORY&gt;]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E2 - From an existing smart contract\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you already have a smart contract deployed to Ethereum mainnet or one of the testnets, initializing a new subgraph from this contract is an easy way to get up and running.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Egraph init \u003Cspan class=\"nt\"\u003E--from-contract\u003C\u002Fspan\u003E &lt;CONTRACT_ADDRESS&gt; \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--network\u003C\u002Fspan\u003E &lt;ETHEREUM_NETWORK&gt;] \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E--abi\u003C\u002Fspan\u003E &lt;FILE&gt;] \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n  &lt;GITHUB_USER&gt;\u002F&lt;SUBGRAPH_NAME&gt; \u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E&lt;DIRECTORY&gt;]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn our case we'll be using the \u003Ca href=\"https:\u002F\u002Fetherscan.io\u002Faddress\u002F0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7#code\"\u003EZora Token Contract\u003C\u002Fa\u003E so we can initilize from that contract address by passing in the contract address using the \u003Ccode\u003E--from-contract\u003C\u002Fcode\u003E flag:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Egraph init \u003Cspan class=\"nt\"\u003E--from-contract\u003C\u002Fspan\u003E 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7 \u003Cspan class=\"nt\"\u003E--network\u003C\u002Fspan\u003E mainnet  \u003Cspan class=\"se\"\u003E\\\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E--contract-name\u003C\u002Fspan\u003E Token \u003Cspan class=\"nt\"\u003E--index-events\u003C\u002Fspan\u003E\n\n? Product \u003Cspan class=\"k\"\u003Efor \u003C\u002Fspan\u003Ewhich to initialize › hosted-service\n? Subgraph name › your-username\u002FZoranftsubgraph\n? Directory to create the subgraph \u003Cspan class=\"k\"\u003Ein\u003C\u002Fspan\u003E › Zoranftsubgraph\n? Ethereum network › Mainnet\n? Contract address › 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\n? Contract Name · Token\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis command will generate a basic subgraph based off of the contract address passed in as the argument to \u003Ccode\u003E--from-contract\u003C\u002Fcode\u003E. By using this contract address, the CLI will initialize a few things in your project to get you started (including fetching the \u003Ccode\u003Eabis\u003C\u002Fcode\u003E and saving them in the \u003Cstrong\u003Eabis\u003C\u002Fstrong\u003E directory).\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EBy passing in \u003Ccode\u003E--index-events\u003C\u002Fcode\u003E the CLI will automatically populate some code for us both in \u003Cstrong\u003Eschema.graphql\u003C\u002Fstrong\u003E as well as \u003Cstrong\u003Esrc\u002Fmapping.ts\u003C\u002Fstrong\u003E based on the events emitted from the contract.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EThe main configuration and definition for the subgraph lives in the \u003Cstrong\u003Esubgraph.yaml\u003C\u002Fstrong\u003E file. The subgraph codebase consists of a few files:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Esubgraph.yaml\u003C\u002Fstrong\u003E: a YAML file containing the subgraph manifest\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eschema.graphql\u003C\u002Fstrong\u003E: a GraphQL schema that defines what data is stored for your subgraph, and how to query it via GraphQL\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EAssemblyScript Mappings\u003C\u002Fstrong\u003E: AssemblyScript code that translates from the event data in Ethereum to the entities defined in your schema (e.g. mapping.ts in this tutorial)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThe entries in \u003Cstrong\u003Esubgraph.yaml\u003C\u002Fstrong\u003E that we will be working with are:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ccode\u003Edescription\u003C\u002Fcode\u003E (optional): a human-readable description of what the subgraph is. This description is displayed by the Graph Explorer when the subgraph is deployed to the Hosted Service.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Erepository\u003C\u002Fcode\u003E (optional): the URL of the repository where the subgraph manifest can be found. This is also displayed by the Graph Explorer.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EdataSources.source\u003C\u002Fcode\u003E: the address of the smart contract the subgraph sources, and the abi of the smart contract to use. The address is optional; omitting it allows to index matching events from all contracts.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EdataSources.source.startBlock\u003C\u002Fcode\u003E (optional): the number of the block that the data source starts indexing from. In most cases we suggest using the block in which the contract was created.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EdataSources.mapping.entities\u003C\u002Fcode\u003E : the entities that the data source writes to the store. The schema for each entity is defined in the the schema.graphql file.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EdataSources.mapping.abis\u003C\u002Fcode\u003E: one or more named ABI files for the source contract as well as any other smart contracts that you interact with from within the mappings.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EdataSources.mapping.eventHandlers\u003C\u002Fcode\u003E: lists the smart contract events this subgraph reacts to and the handlers in the mapping — \u003Cstrong\u003E.\u002Fsrc\u002Fmapping.ts\u003C\u002Fstrong\u003E in the example — that transform these events into entities in the store.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"defining-the-entities\" href=\"#defining-the-entities\"\u003E\n  \u003C\u002Fa\u003E\n  Defining the entities\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EWith The Graph, you define entity types in \u003Cstrong\u003Eschema.graphql\u003C\u002Fstrong\u003E, and Graph Node will generate top level fields for querying single instances and collections of that entity type. Each type that should be an entity is required to be annotated with an \u003Ccode\u003E@entity\u003C\u002Fcode\u003E directive.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe entities \u002F data we will be indexing are the \u003Ccode\u003EToken\u003C\u002Fcode\u003E and \u003Ccode\u003EUser\u003C\u002Fcode\u003E. This way we can index the Tokens created by the users as well as the users themselves.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo do this, update \u003Cstrong\u003Eschema.graphql\u003C\u002Fstrong\u003E with the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eentity\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EID\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBigInt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecreator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eowner\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eentity\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EID\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!]!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EderivedFrom\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efield\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eowner\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecreated\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!]!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EderivedFrom\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efield\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecreator\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"on-relationships-via-raw-derivedfrom-endraw-from-the-docs\" href=\"#on-relationships-via-raw-derivedfrom-endraw-from-the-docs\"\u003E\n  \u003C\u002Fa\u003E\n  On Relationships via \u003Ccode\u003E@derivedFrom\u003C\u002Fcode\u003E (from the docs):\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EReverse lookups can be defined on an entity through the \u003Ccode\u003E@derivedFrom\u003C\u002Fcode\u003E field. This creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API. Rather, it is derived from the relationship defined on the other entity. For such relationships, it rarely makes sense to store both sides of the relationship, and both indexing and query performance will be better when only one side is stored and the other is derived.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor one-to-many relationships, the relationship should always be stored on the 'one' side, and the 'many' side should always be derived. Storing the relationship this way, rather than storing an array of entities on the 'many' side, will result in dramatically better performance for both indexing and querying the subgraph. In general, storing arrays of entities should be avoided as much as is practical.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow that we have created the GraphQL schema for our app, we can generate the entities locally to start using in the \u003Ccode\u003Emappings\u003C\u002Fcode\u003E created by the CLI:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Egraph codegen\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn order to make working smart contracts, events and entities easy and type-safe, the Graph CLI generates AssemblyScript types from a combination of the subgraph's GraphQL schema and the contract ABIs included in the data sources.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"updating-the-subgraph-with-the-entities-and-mappings\" href=\"#updating-the-subgraph-with-the-entities-and-mappings\"\u003E\n  \u003C\u002Fa\u003E\n  Updating the subgraph with the entities and mappings\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow we can configure the \u003Cstrong\u003Esubgraph.yaml\u003C\u002Fstrong\u003E to use the entities that we have just created and configure their mappings.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo do so, first update the \u003Ccode\u003EdataSources.mapping.entities\u003C\u002Fcode\u003E field with the \u003Ccode\u003EUser\u003C\u002Fcode\u003E and \u003Ccode\u003EToken\u003C\u002Fcode\u003E entities:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight yaml\"\u003E\u003Ccode\u003E\u003Cspan class=\"na\"\u003Eentities\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EToken\u003C\u002Fspan\u003E\n  \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EUser\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENext, update the \u003Ccode\u003EdataSources.mapping.eventHandlers\u003C\u002Fcode\u003E to include only the following three event handlers:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight yaml\"\u003E\u003Ccode\u003E\u003Cspan class=\"na\"\u003EeventHandlers\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003ETokenMetadataURIUpdated(indexed uint256,address,string)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EhandleTokenMetadataURIUpdated\u003C\u002Fspan\u003E\n  \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003ETokenURIUpdated(indexed uint256,address,string)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EhandleTokenURIUpdated\u003C\u002Fspan\u003E\n  \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003ETransfer(indexed address,indexed address,indexed uint256)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EhandleTransfer\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EFinally, update the configuration to add the \u003Ccode\u003EstartBlock\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight yaml\"\u003E\u003Ccode\u003E\u003Cspan class=\"na\"\u003Esource\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eaddress\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\"\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eabi\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EToken\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003EstartBlock\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"m\"\u003E11565020\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"assemblyscript-mappings\" href=\"#assemblyscript-mappings\"\u003E\n  \u003C\u002Fa\u003E\n  Assemblyscript mappings\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENext, open \u003Cstrong\u003Esrc\u002Fmappings.ts\u003C\u002Fstrong\u003E to write the mappings that we defined in our subgraph subgraph \u003Ccode\u003EeventHandlers\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EUpdate the file with the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003ETokenURIUpdated\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenURIUpdatedEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003ETokenMetadataURIUpdated\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenMetadataURIUpdatedEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003ETransfer\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETransferEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenContract\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E..\u002Fgenerated\u002FToken\u002FToken\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EUser\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u002Fgenerated\u002Fschema\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhandleTokenURIUpdated\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenURIUpdatedEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E_tokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EcontentURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E_uri\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhandleTokenMetadataURIUpdated\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenMetadataURIUpdatedEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E_tokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EmetadataURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E_uri\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhandleTransfer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETransferEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ecreator\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenID\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ebind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eaddress\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EcontentURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EmetadataURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenMetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eowner\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThese mappings will handle events for when a new token is created, transfered, or updated. When these events fire, the mappings will save the data into the subgraph.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"running-a-build\" href=\"#running-a-build\"\u003E\n  \u003C\u002Fa\u003E\n  Running a build\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ENext, let's run a build to make sure that everything is configured properly. To do so, run the \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E command:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Egraph build\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIf the build is successful, you should see a new \u003Cstrong\u003Ebuild\u003C\u002Fstrong\u003E folder generated in your root directory.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"deploying-the-subgraph\" href=\"#deploying-the-subgraph\"\u003E\n  \u003C\u002Fa\u003E\n  Deploying the subgraph\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETo deploy, we can run the \u003Ccode\u003Edeploy\u003C\u002Fcode\u003E command using the Graph CLI. To deploy, you will first need to copy the \u003Cstrong\u003EAccess token\u003C\u002Fstrong\u003E for the subgraph you created in the \u003Ca href=\"https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard\"\u003EGraph Explorer\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--j4JqZIt4--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F5h0jv4q30pgo6y5rpicl.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--j4JqZIt4--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F5h0jv4q30pgo6y5rpicl.png\" alt=\"Graph Explorer\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ENext, run the following command:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Egraph auth https:\u002F\u002Fapi.thegraph.com\u002Fdeploy\u002F &lt;ACCESS_TOKEN&gt;\n\n\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Eyarn deploy\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce the subgraph is deployed, you should see it show up in your dashboard:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--wK8cpkue--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhqcjw31gx209in3alisi.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--wK8cpkue--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhqcjw31gx209in3alisi.png\" alt=\"Graph Dashboard\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen you click on the subgraph, it should open the Graph explorer:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--uhhaNLlM--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F4kne4pzbbspzz92akv9f.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--uhhaNLlM--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F4kne4pzbbspzz92akv9f.png\" alt=\"The Zora Subgraph\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"querying-for-data\" href=\"#querying-for-data\"\u003E\n  \u003C\u002Fa\u003E\n  Querying for data\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow that we are in the dashboard, we should be able to start querying for data. Run the following query to get a list of tokens and their metadata:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe can also configure the order direction:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderBy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderDirection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Edesc\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOr choose to skip forward a certain number of results to implement some basic pagination:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eskip\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E100\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderBy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderDirection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Edesc\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOr query for users and their associated content:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eusers\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n      \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n      \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"updating-the-subgraph\" href=\"#updating-the-subgraph\"\u003E\n  \u003C\u002Fa\u003E\n  Updating the subgraph\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhat if we want to make some changes to the subgraph and then redeploy? This is pretty easy, so let's learn how to do it.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet's say that we want to add a new feature to our subgraph. In addition to our existing querying capabilities, let's say that we wanted to add the capabilities to sort by the timestamp that the NFT was created.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo do so, we need to first add a new \u003Ccode\u003EcreatedAtTimestamp\u003C\u002Fcode\u003E field to the \u003Ccode\u003EToken\u003C\u002Fcode\u003E entity:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Etype\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eentity\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EID\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBigInt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecreator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eowner\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcreatedAtTimesamp\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Efield\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcreatedAtTimestamp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBigInt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow we can re-run the codegen:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Egraph codegen\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENext, we need to update the mapping to save this new field:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F update the handleTransfer function to add the createdAtTimestamp to the token object\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhandleTransfer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETransferEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EToken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ecreator\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenID\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F Add the createdAtTimestamp to the token object\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EcreatedAtTimestamp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eblock\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Etimestamp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ETokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ebind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eaddress\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EcontentURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EmetadataURI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtokenContract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenMetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtokenId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eowner\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Etoken\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eload\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EUser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eevent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eto\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtoHexString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Esave\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow we can re-deploy the subgraph:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Eyarn deploy\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce the subgraph has been redeployed, we can now query by timestamp to view the most recently created NFTS:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight graphql\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etokens\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderBy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcreatedAtTimestamp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EorderDirection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Edesc\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EtokenID\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EcontentURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EmetadataURI\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cblockquote\u003E\n\u003Cp\u003EThe codebase for this project is located \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fdabit3\u002Fbuilding-a-subgraph-workshop\u002Ftree\u002Fmain\u002FZoranftgraph\"\u003Ehere\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"next-steps\" href=\"#next-steps\"\u003E\n  \u003C\u002Fa\u003E\n  Next steps\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIf you are interested in learning more about Web3, building Dapps, or building subgraphs, check out the following resources:\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe Graph on Twitter - \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fgraphprotocol\"\u003E@graphprotocol\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdev.to\u002Fdabit3\u002Fthe-complete-guide-to-full-stack-ethereum-development-3j13\"\u003EThe Complete Guide to Full Stack Ethereum Development\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"\u002F\u002Fthegraph.com\u002Fdiscord\"\u003EThe Graph Discord\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.soliditylang.org\u002F\"\u003ESolidity Docs\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fethereum.org\u002Fen\u002Fdevelopers\u002Fdocs\u002F\"\u003EEthereum Developer Documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAustin Griffith on Twitter \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Faustingriffith\"\u003E@austingriffith\u003C\u002Fa\u003E &amp; \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Faustintgriffith\u002Fscaffold-eth\"\u003EScaffold Eth\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fcryptozombies.io\u002F\"\u003ECrypto Zombies\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n";b.body_markdown="---\ntitle: Building GraphQL APIs on Ethereum\npublished: true\ndescription: In this post you'll learn how to build and deploy a GraphQL API using data stored in the Ethereum blockchain.\ntags: webdev, programming, tutorial, graphql\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fnf95ssg9zl4v9oyapugl.png\n---\n\nThe number of production [dapps](https:\u002F\u002Fethereum.org\u002Fen\u002Fdapps\u002F) continues to explode and [the demand](https:\u002F\u002Ftwitter.com\u002FFurqanR\u002Fstatus\u002F1389393957126246403?s=20) for [developers building with Solidity](https:\u002F\u002Ftwitter.com\u002FCryptoCobain\u002Fstatus\u002F1371901082113351680?s=20) and other blockchain languages continues to outpace supply, [moving wages higher and higher](https:\u002F\u002Fcryptocurrencyjobs.co\u002Fsalaries\u002Fsolidity-developer\u002F). \n\nAs a developer [getting into this space](https:\u002F\u002Ftwitter.com\u002Fdabit3\u002Fstatus\u002F1379157277660299264), I quickly learned there are a lot of differences in the way that we interact with and build on top of blockchains versus what I was used to in the traditional web. With Ethereum (and other blockchains), data isn’t stored in a format that can efficiently or easily be consumed directly from other applications or front ends. The problem is that you need to have the data indexed and organized for efficient retrieval.\n\nTraditionally, that’s the work that databases do in the centralized tech stack, but that indexing layer was missing in the [Web3 stack](https:\u002F\u002Fbeta.web3index.org\u002Fblog\u002Fintroducing-the-web3-index).\n\nIn the traditional web stack, databases, servers, and APIs query, filter, sort, paginate, group, and join data before it is returned to an application usually via some type of http request. These types of data transformations are not possible when reading data directly from Ethereum or other blockchains.\n\nIn the past, developers were getting around this by building their own centralized indexing servers - pulling data from blockchains, storing it in a database, and exposing it via an API endpoint. This required significant engineering and hardware resources and broke the important security properties required for decentralization.\n\nHow can we build an API on top of blockchain data that can easily be deployed to a decentralized web infrastructure? Let's find out.\n\n# Decentralizing web infrastructure\n\nThe vision of and movement towards a decentralized internet is commonly referred to as [Web3](https:\u002F\u002Fethereum.org\u002Fen\u002Fdevelopers\u002Fdocs\u002Fweb2-vs-web3\u002F). Web3 enhances the internet as we know it today with these added characteristics:\n\n- Decentralized\n- Verifiable\n- Trustless\n- Self governing\n\n\u003E For a great overview of what Web3 is, check out [this video](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=KHwVljhq7NQ) by [Juan Benet](https:\u002F\u002Ftwitter.com\u002Fjuanbenet)\n\nTo achieve decentralization, protocols define networks that offer a range of digital services such as compute, storage, bandwidth, identity, and other pieces of web infrastructure with no intermediaries. These [protocols](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=j2rXJLW_93o) are usually distributed across multiple nodes (servers) that enable the participation of anyone looking to be part of the network and provide the service.\n\nThe network participants are [incentivized](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Nurp3Foqf2w) to provide the highest quality services to anyone consuming them. Rules are also put in place to ensure the security and the integrity of the network itself. This is usually accomplished using a combination of consensus mechanisms programmed into smart contracts implementing various types of game theory and [cryptoeconomic design](https:\u002F\u002Fthegraph.com\u002Fblog\u002Fmodeling-cryptoeconomic-protocols-as-complex-systems-part-1).\n\n#### What makes a service truly decentralized?\n\n{% twitter 1387921317656023041 %}\n\n### Building on The Graph\n\nIn this post, we will be looking at one such protocol, [The Graph](https:\u002F\u002Fthegraph.com\u002F), and how to build and deploy our own GraphQL API using data stored in the Ethereum blockchain.\n\nThe Graph is an indexing protocol for querying blockchains like Ethereum and networks like [IPFS](https:\u002F\u002Fipfs.io\u002F). Anyone can build and publish open APIs, called subgraphs, making data easily accessible.\n\nSubgraphs define the data, data sources, and data access patterns that you would like to have made available via a GraphQL API. You as a developer can choose either to use a subgraph [already deployed](https:\u002F\u002Fthegraph.com\u002Fexplorer\u002F) by another developer, or define and deploy your own subgraph and use it.\n\nDevelopers can create open APIs by deploying their subgraphs either to the hosted service or to the network, enabling them to earn money based on the amount of usage of their API.\n\nSubgraphs are made up of a few main parts:\n\n#### 1. GraphQL Schema\n\nThe GraphQL Schema defines the data types \u002F entities you would like to save and query for. You can also define configuration like relationships and full text search capabilities in your schema.\n\n#### 2. Subgraph Manifest (yaml configuration)\n\n(from the docs) The [manifest](https:\u002F\u002Fthegraph.com\u002Fdocs\u002Fdefine-a-subgraph#the-subgraph-manifest) defines the smart contracts your subgraph indexes, their [ABIs](https:\u002F\u002Fdocs.soliditylang.org\u002Fen\u002Fv0.8.4\u002Fabi-spec.html), which events from these contracts to pay attention to, and how to map event data to entities that Graph Node stores and allows to query. \n\n#### 3. AssemblyScript Mappings\n\nAssemblyScript Mappings allow you to save data to be indexed using the entity types defined in your schema. The [Graph CLI](https:\u002F\u002Fgithub.com\u002Fgraphprotocol\u002Fgraph-cli) also generates AssemblyScript types using a combination of the subgraph's schema along with a smart contract's ABIs.\n\n### Hosted service vs Subgraph Studio\n\nThere are two ways to build subgraphs - the __Hosted Service__ and __Subgraph Studio__. In this tutorial we'll be building a subgraph for the __Hosted Service__.\n\nThe __Hosted Service__ is a centralized service, is free, and will exist until the decentralized network is at feature parity with it. You can build a subgraph for the decentralized network by using __Subgraph Studio__ and following [this guide](https:\u002F\u002Fthegraph.com\u002Fblog\u002Fbuilding-with-subgraph-studio).\n\nAt some point in the future, the __Subgraph Studio__ will be the only way to build subgraphs.\n\n## Let's start building\n\nNow that we have a good understanding of The Graph and how it works, let's start writing some code.\n\nIn this tutorial we'll build a subgraph for querying NTF data from the [Zora smart contract](https:\u002F\u002Fetherscan.io\u002Faddress\u002F0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7), implementing queries for fetching NFTs as well as their owners, and building relationships between them.\n\n### Prerequisites\n\nTo be successful in this tutorial, you should have [Node.js](https:\u002F\u002Fnodejs.org\u002Fen\u002F) installed on your machine. These days, I recommend using either [nvm](https:\u002F\u002Fgithub.com\u002Fnvm-sh\u002Fnvm) or [fnm](https:\u002F\u002Fgithub.com\u002FSchniz\u002Ffnm\u002Fblob\u002Fmaster\u002Fdocs\u002Fcommands.md) to manage Node.js versions.\n\n### Creating the Graph project in the Graph Explorer\n\nTo get started, open the [Graph Explorer](https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard) and either sign in or create a new account.\n\nNext, go to the [dashboard](https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard) and click on __Add Subgraph__ to create a new subgraph.\n\nConfigure your subgraph with the following properties:\n\n- Subgraph Name - __Zoranftsubgraph__\n- Subtitle - __A subgraph for querying NFTs__\n- Optional - Fill the description and GITHUB URL properties\n\nOnce the subgraph is created, we will initialize the subgraph locally using the Graph CLI.\n\n### Initializing a new subgraph using the Graph CLI\n\nNext, install the Graph CLI:\n\n```sh\n$ npm install -g @graphprotocol\u002Fgraph-cli\n\n# or\n\n$ yarn global add @graphprotocol\u002Fgraph-cli\n```\n\nOnce the Graph CLI has been installed you can initialize a new subgraph with the Graph CLI `init` command.\n\nThere are two ways to initialize a new subgraph:\n\n1 - From an example subgraph\n\n```sh\n$ graph init --from-example \u003CGITHUB_USERNAME\u003E\u002F\u003CSUBGRAPH_NAME\u003E [\u003CDIRECTORY\u003E]\n```\n\n2 - From an existing smart contract\n\nIf you already have a smart contract deployed to Ethereum mainnet or one of the testnets, initializing a new subgraph from this contract is an easy way to get up and running.\n\n```sh\n$ graph init --from-contract \u003CCONTRACT_ADDRESS\u003E \\\n  [--network \u003CETHEREUM_NETWORK\u003E] \\\n  [--abi \u003CFILE\u003E] \\\n  \u003CGITHUB_USER\u003E\u002F\u003CSUBGRAPH_NAME\u003E [\u003CDIRECTORY\u003E]\n```\n\nIn our case we'll be using the [Zora Token Contract](https:\u002F\u002Fetherscan.io\u002Faddress\u002F0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7#code) so we can initilize from that contract address by passing in the contract address using the `--from-contract` flag:\n\n```sh\n$ graph init --from-contract 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7 --network mainnet  \\\n--contract-name Token --index-events\n\n? Product for which to initialize › hosted-service\n? Subgraph name › your-username\u002FZoranftsubgraph\n? Directory to create the subgraph in › Zoranftsubgraph\n? Ethereum network › Mainnet\n? Contract address › 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\n? Contract Name · Token\n```\n\nThis command will generate a basic subgraph based off of the contract address passed in as the argument to `--from-contract`. By using this contract address, the CLI will initialize a few things in your project to get you started (including fetching the `abis` and saving them in the __abis__ directory).\n\n\u003E By passing in `--index-events` the CLI will automatically populate some code for us both in __schema.graphql__ as well as __src\u002Fmapping.ts__ based on the events emitted from the contract.\n\nThe main configuration and definition for the subgraph lives in the __subgraph.yaml__ file. The subgraph codebase consists of a few files:\n\n- __subgraph.yaml__: a YAML file containing the subgraph manifest\n- __schema.graphql__: a GraphQL schema that defines what data is stored for your subgraph, and how to query it via GraphQL\n- __AssemblyScript Mappings__: AssemblyScript code that translates from the event data in Ethereum to the entities defined in your schema (e.g. mapping.ts in this tutorial)\n\nThe entries in __subgraph.yaml__ that we will be working with are:\n\n- `description` (optional): a human-readable description of what the subgraph is. This description is displayed by the Graph Explorer when the subgraph is deployed to the Hosted Service.\n- `repository` (optional): the URL of the repository where the subgraph manifest can be found. This is also displayed by the Graph Explorer.\n- `dataSources.source`: the address of the smart contract the subgraph sources, and the abi of the smart contract to use. The address is optional; omitting it allows to index matching events from all contracts.\n- `dataSources.source.startBlock` (optional): the number of the block that the data source starts indexing from. In most cases we suggest using the block in which the contract was created.\n- `dataSources.mapping.entities` : the entities that the data source writes to the store. The schema for each entity is defined in the the schema.graphql file.\n- `dataSources.mapping.abis`: one or more named ABI files for the source contract as well as any other smart contracts that you interact with from within the mappings.\n- `dataSources.mapping.eventHandlers`: lists the smart contract events this subgraph reacts to and the handlers in the mapping — __.\u002Fsrc\u002Fmapping.ts__ in the example — that transform these events into entities in the store.\n\n### Defining the entities\n\nWith The Graph, you define entity types in __schema.graphql__, and Graph Node will generate top level fields for querying single instances and collections of that entity type. Each type that should be an entity is required to be annotated with an `@entity` directive.\n\nThe entities \u002F data we will be indexing are the `Token` and `User`. This way we can index the Tokens created by the users as well as the users themselves.\n\nTo do this, update __schema.graphql__ with the following code:\n\n```graphql\ntype Token @entity {\n  id: ID!\n  tokenID: BigInt!\n  contentURI: String!\n  metadataURI: String!\n  creator: User!\n  owner: User!\n}\n\ntype User @entity {\n  id: ID!\n  tokens: [Token!]! @derivedFrom(field: \"owner\")\n  created: [Token!]! @derivedFrom(field: \"creator\")\n}\n```\n\n### On Relationships via `@derivedFrom` (from the docs):\n\nReverse lookups can be defined on an entity through the `@derivedFrom` field. This creates a virtual field on the entity that may be queried but cannot be set manually through the mappings API. Rather, it is derived from the relationship defined on the other entity. For such relationships, it rarely makes sense to store both sides of the relationship, and both indexing and query performance will be better when only one side is stored and the other is derived.\n\nFor one-to-many relationships, the relationship should always be stored on the 'one' side, and the 'many' side should always be derived. Storing the relationship this way, rather than storing an array of entities on the 'many' side, will result in dramatically better performance for both indexing and querying the subgraph. In general, storing arrays of entities should be avoided as much as is practical.\n\nNow that we have created the GraphQL schema for our app, we can generate the entities locally to start using in the `mappings` created by the CLI:\n\n```sh\ngraph codegen\n```\n\nIn order to make working smart contracts, events and entities easy and type-safe, the Graph CLI generates AssemblyScript types from a combination of the subgraph's GraphQL schema and the contract ABIs included in the data sources.\n\n## Updating the subgraph with the entities and mappings\n\nNow we can configure the __subgraph.yaml__ to use the entities that we have just created and configure their mappings.\n\nTo do so, first update the `dataSources.mapping.entities` field with the `User` and `Token` entities:\n\n```yaml\nentities:\n  - Token\n  - User\n```\n\nNext, update the `dataSources.mapping.eventHandlers` to include only the following three event handlers:\n\n```yaml\neventHandlers:\n  - event: TokenMetadataURIUpdated(indexed uint256,address,string)\n    handler: handleTokenMetadataURIUpdated\n  - event: TokenURIUpdated(indexed uint256,address,string)\n    handler: handleTokenURIUpdated\n  - event: Transfer(indexed address,indexed address,indexed uint256)\n    handler: handleTransfer\n```\n\nFinally, update the configuration to add the `startBlock`:\n\n```yaml\nsource:\n  address: \"0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\"\n  abi: Token\n  startBlock: 11565020\n```\n\n## Assemblyscript mappings\n\nNext, open __src\u002Fmappings.ts__ to write the mappings that we defined in our subgraph subgraph `eventHandlers`.\n\nUpdate the file with the following code:\n\n```typescript\nimport {\n  TokenURIUpdated as TokenURIUpdatedEvent,\n  TokenMetadataURIUpdated as TokenMetadataURIUpdatedEvent,\n  Transfer as TransferEvent,\n  Token as TokenContract\n} from \"..\u002Fgenerated\u002FToken\u002FToken\"\n\nimport {\n  Token, User\n} from '..\u002Fgenerated\u002Fschema'\n\nexport function handleTokenURIUpdated(event: TokenURIUpdatedEvent): void {\n  let token = Token.load(event.params._tokenId.toString());\n  if (!token) return;\n  token.contentURI = event.params._uri;\n  token.save();\n}\n\nexport function handleTokenMetadataURIUpdated(event: TokenMetadataURIUpdatedEvent): void {\n  let token = Token.load(event.params._tokenId.toString());\n  if (!token) return;\n  token.metadataURI = event.params._uri;\n  token.save();\n}\n\nexport function handleTransfer(event: TransferEvent): void {\n  let token = Token.load(event.params.tokenId.toString());\n  if (!token) {\n    token = new Token(event.params.tokenId.toString());\n    token.creator = event.params.to.toHexString();\n    token.tokenID = event.params.tokenId;\n\n    let tokenContract = TokenContract.bind(event.address);\n    token.contentURI = tokenContract.tokenURI(event.params.tokenId);\n    token.metadataURI = tokenContract.tokenMetadataURI(event.params.tokenId);\n  }\n  token.owner = event.params.to.toHexString();\n  token.save();\n\n  let user = User.load(event.params.to.toHexString());\n  if (!user) {\n    user = new User(event.params.to.toHexString());\n    user.save();\n  }\n}\n```\n\nThese mappings will handle events for when a new token is created, transfered, or updated. When these events fire, the mappings will save the data into the subgraph.\n\n### Running a build\n\nNext, let's run a build to make sure that everything is configured properly. To do so, run the `build` command:\n\n```sh\n$ graph build\n```\n\nIf the build is successful, you should see a new __build__ folder generated in your root directory.\n\n## Deploying the subgraph\n\nTo deploy, we can run the `deploy` command using the Graph CLI. To deploy, you will first need to copy the __Access token__ for the subgraph you created in the [Graph Explorer](https:\u002F\u002Fthegraph.com\u002Fexplorer\u002Fdashboard):\n\n![Graph Explorer](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F5h0jv4q30pgo6y5rpicl.png)\n\nNext, run the following command:\n\n```sh\n$ graph auth https:\u002F\u002Fapi.thegraph.com\u002Fdeploy\u002F \u003CACCESS_TOKEN\u003E\n\n$ yarn deploy\n```\n\nOnce the subgraph is deployed, you should see it show up in your dashboard:\n\n![Graph Dashboard](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhqcjw31gx209in3alisi.png)\n\nWhen you click on the subgraph, it should open the Graph explorer:\n\n![The Zora Subgraph](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F4kne4pzbbspzz92akv9f.png)\n\n## Querying for data\n\nNow that we are in the dashboard, we should be able to start querying for data. Run the following query to get a list of tokens and their metadata:\n\n```graphql\n{\n  tokens {\n    id\n    tokenID\n    contentURI\n    metadataURI\n  }\n}\n```\n\nWe can also configure the order direction:\n\n```graphql\n{\n  tokens(\n    orderBy:id,\n    orderDirection: desc\n  ) {\n    id\n    tokenID\n    contentURI\n    metadataURI\n  }\n}\n```\n\nOr choose to skip forward a certain number of results to implement some basic pagination:\n\n```graphql\n{\n  tokens(\n    skip: 100,\n    orderBy:id,\n    orderDirection: desc\n  ) {\n    id\n    tokenID\n    contentURI\n    metadataURI\n  }\n}\n```\n\nOr query for users and their associated content:\n\n```graphql\n{\n  users {\n    id\n    tokens {\n      id\n      contentURI\n    }\n  }\n}\n```\n\n## Updating the subgraph\n\nWhat if we want to make some changes to the subgraph and then redeploy? This is pretty easy, so let's learn how to do it.\n\nLet's say that we want to add a new feature to our subgraph. In addition to our existing querying capabilities, let's say that we wanted to add the capabilities to sort by the timestamp that the NFT was created.\n\nTo do so, we need to first add a new `createdAtTimestamp` field to the `Token` entity:\n\n```graphql\ntype Token @entity {\n  id: ID!\n  tokenID: BigInt!\n  contentURI: String!\n  metadataURI: String!\n  creator: User!\n  owner: User!\n  \"Add new createdAtTimesamp field\"\n  createdAtTimestamp: BigInt!\n}\n```\n\nNow we can re-run the codegen:\n\n```sh\ngraph codegen\n```\n\nNext, we need to update the mapping to save this new field:\n\n```typescript\n\u002F\u002F update the handleTransfer function to add the createdAtTimestamp to the token object\nexport function handleTransfer(event: TransferEvent): void {\n  let token = Token.load(event.params.tokenId.toString());\n  if (!token) {\n    token = new Token(event.params.tokenId.toString());\n    token.creator = event.params.to.toHexString();\n    token.tokenID = event.params.tokenId;\n    \u002F\u002F Add the createdAtTimestamp to the token object\n    token.createdAtTimestamp = event.block.timestamp;\n\n    let tokenContract = TokenContract.bind(event.address);\n    token.contentURI = tokenContract.tokenURI(event.params.tokenId);\n    token.metadataURI = tokenContract.tokenMetadataURI(event.params.tokenId);\n  }\n  token.owner = event.params.to.toHexString();\n  token.save();\n\n  let user = User.load(event.params.to.toHexString());\n  if (!user) {\n    user = new User(event.params.to.toHexString());\n    user.save();\n  }\n}\n```\n\nNow we can re-deploy the subgraph:\n\n\n```sh\n$ yarn deploy\n```\n\nOnce the subgraph has been redeployed, we can now query by timestamp to view the most recently created NFTS:\n\n```graphql\n{\n  tokens(\n    orderBy:createdAtTimestamp,\n    orderDirection: desc\n  ) {\n    id\n    tokenID\n    contentURI\n    metadataURI\n  }\n}\n```\n\n\u003E The codebase for this project is located [here](https:\u002F\u002Fgithub.com\u002Fdabit3\u002Fbuilding-a-subgraph-workshop\u002Ftree\u002Fmain\u002FZoranftgraph)\n\n## Next steps\n\nIf you are interested in learning more about Web3, building Dapps, or building subgraphs, check out the following resources:\n\nThe Graph on Twitter - [@graphprotocol](https:\u002F\u002Ftwitter.com\u002Fgraphprotocol)\n\n[The Complete Guide to Full Stack Ethereum Development](https:\u002F\u002Fdev.to\u002Fdabit3\u002Fthe-complete-guide-to-full-stack-ethereum-development-3j13)\n\n[The Graph Discord](thegraph.com\u002Fdiscord)\n\n[Solidity Docs](https:\u002F\u002Fdocs.soliditylang.org\u002F)\n\n[Ethereum Developer Documentation](https:\u002F\u002Fethereum.org\u002Fen\u002Fdevelopers\u002Fdocs\u002F)\n\nAustin Griffith on Twitter [@austingriffith](https:\u002F\u002Ftwitter.com\u002Faustingriffith) & [Scaffold Eth](https:\u002F\u002Fgithub.com\u002Faustintgriffith\u002Fscaffold-eth)\n\n[Crypto Zombies](https:\u002F\u002Fcryptozombies.io\u002F)";b.user={name:"Nader Dabit",username:a,twitter_username:a,github_username:a,website_url:"https:\u002F\u002Fmmm.page\u002Fnader.main",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--aNfZvjEi--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F126437\u002F41231eb2-054b-4417-bc35-814e491a2d5d.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--qYNR4ugk--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F126437\u002F41231eb2-054b-4417-bc35-814e491a2d5d.jpeg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:b}},mutations:[["SET_CURRENT_ARTICLE",b]]}}("dabit3",{},"https:\u002F\u002Fdev.to\u002Fdabit3\u002Fbuilding-graphql-apis-on-ethereum-4poa",527,null,"2021-05-04T13:16:25Z")));