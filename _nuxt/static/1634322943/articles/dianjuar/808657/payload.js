__NUXT_JSONP__("/articles/dianjuar/808657", (function(a,b,c,d,e,f,g){c.type_of="article";c.id=808657;c.title="Importando m√≥dulos en Javascript, lo estamos haciendo bien?";c.description="Todos los desarrolladores Javascript usamos librer√≠as en nuestro d√≠a a d√≠a, facilita mucho nuestro...";c.readable_publish_date="Aug 31";c.slug="importando-modulos-en-javascript-lo-estamos-haciendo-bien-3hif";c.path="\u002Fngvenezuela\u002Fimportando-modulos-en-javascript-lo-estamos-haciendo-bien-3hif";c.url=d;c.comments_count=0;c.public_reactions_count=e;c.collection_id=a;c.published_timestamp=b;c.positive_reactions_count=e;c.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--iqbal6J5--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F6cy7mp3cu7w3fxh369i7.jpg";c.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3ozBKXfI--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F6cy7mp3cu7w3fxh369i7.jpg";c.canonical_url=d;c.created_at="2021-08-31T05:49:15Z";c.edited_at=a;c.crossposted_at=a;c.published_at=b;c.last_comment_at=b;c.reading_time_minutes=6;c.tag_list="javascript, typescript, es6, treeshaking";c.tags=["javascript","typescript","es6","treeshaking"];c.body_html="\u003Cp\u003ETodos los desarrolladores Javascript usamos librer√≠as en nuestro d√≠a a d√≠a, facilita mucho nuestro trabajo. Hoy en d√≠a lo hacemos mayormente de esta manera:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Elib\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esuper-lib\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Efunc1\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esuper-lib\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESi analizamos r√°pidamente esto, en la primera sentencia estamos importando todo y asign√°ndolo a la variable \u003Ccode\u003Elib\u003C\u002Fcode\u003E, en el segundo, estamos importando todo nuevamente pero usando destructuring obtenemos solo lo que queremos; qu√© sucede con todo el c√≥digo que no se est√° usando?\u003C\u002Fp\u003E\n\n\n\n\u003Cblockquote\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"todo-el-c%C3%B3digo-que-no-se-est%C3%A1-usando-terminar%C3%A1-en-el-bundle-final-haciendo-mi-aplicaci%C3%B3n-innecesariamente-pesada\" href=\"#todo-el-c%C3%B3digo-que-no-se-est%C3%A1-usando-terminar%C3%A1-en-el-bundle-final-haciendo-mi-aplicaci%C3%B3n-innecesariamente-pesada\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cem\u003E¬øTodo el c√≥digo que no se est√° usando terminar√° en el bundle final haciendo mi aplicaci√≥n innecesariamente pesada?\u003C\u002Fem\u003E\n\u003C\u002Fh2\u003E\n\u003C\u002Fblockquote\u003E\n\n\n\n\u003Cp\u003EHoy, aprenderemos c√≥mo mejorar el tama√±o de un bundle simplemente cambiando la manera en que importamos. Despu√©s de leer esto, ser√°s capaz de detectar una simple oportunidad de optimizaci√≥n para el bundle.\u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"tl-dr\" href=\"#tl-dr\"\u003E\n  \u003C\u002Fa\u003E\n  TL; DR\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EVerifica si la liber√≠a tiene soporte para ES6 y ser√°s capaz de importar como quieras, siempre obtendr√°s el mejor resultado üôÜ‚Äç‚ôÇÔ∏è. Si no lo soporta ‚ö†Ô∏è, tendr√°s que importar usando cherry-picking.\u003C\u002Fp\u003E\n\n\n\n\n\u003Chr\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"podemos-importar-de-cualquier-manera-sin-consecuencias\" href=\"#podemos-importar-de-cualquier-manera-sin-consecuencias\"\u003E\n  \u003C\u002Fa\u003E\n  ¬øPodemos importar de cualquier manera sin consecuencias?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ECuando compilamos aplicaciones front-end, hay un proceso que Webpack aplica llamado \u003Ca href=\"https:\u002F\u002Fwebpack.js.org\u002Fguides\u002Ftree-shaking\u002F\"\u003ETree Shaking\u003C\u002Fa\u003E. B√°sicamente, es eliminaci√≥n de c√≥digo, el c√≥digo que no est√° siendo usado por nadie. Esto es un proceso que previene que c√≥digo muerto termine en nuestro bundle final, haci√©ndolo m√°s liviano as√≠ las aplicaciones van a cargar m√°s r√°pidamente para nuestros usuarios!.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnalicemos esto:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Elib\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eamazing-lib\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Efoo\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eamazing-lib\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EEn ambos casos todo el contenido de la librer√≠a est√° siendo importado, en la primera l√≠nea es donde se observa m√°s claramente, todo el contenido est√° siendo asignado a la variable \u003Ccode\u003Elib\u003C\u002Fcode\u003E, en la segunda l√≠nea estamos simplemente aplicando destructuring al contenido de la librer√≠a para obtener lo que queremos. Gracias a Tree Shaking todo el c√≥digo que no es usado no termina en el bundle final.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs√≠ que, gracias a Tree Shaking tengo un pase libre a importar como yo quiera y todo el c√≥digo muerto importado de la librer√≠a ser√° removido autom√°gicamente?\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ENo siempre es el caso\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EHay un escenario cuando Tree Shaking no ser√° capaz de detectar qu√© es c√≥digo muerto, teniendo como consecuencia que no se remover√° nada.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"escenarios\" href=\"#escenarios\"\u003E\n  \u003C\u002Fa\u003E\n  Escenarios\n\u003C\u002Fh2\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"es6\" href=\"#es6\"\u003E\n  \u003C\u002Fa\u003E\n  ES6\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELa Sintaxis de Modulo ECMAScript 2015(tambi√©n conocido como ES6); suena complejo, pero es algo bastante popular en estos d√≠as. Es solo una sintaxis para importar un modulo Javascript, luce as√≠:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Efoo\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esuper-lib\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ebar\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u002Futils\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Elib\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u002Futils\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EjustAConst\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Efoobar\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ECuando usas una librer√≠a que ofrece soporte para para sintaxis ES6, no hay de qu√© preocuparse, importa libremente, Tree Shaking estar√° ah√≠ üòâ. De hecho, es con la √∫nica sintaxis de modulo que Tree Shaking soporta. Miremos a la \u003Ca href=\"https:\u002F\u002Fwebpack.js.org\u002Fguides\u002Ftree-shaking\u002F\"\u003Edocumentaci√≥n\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cem\u003ETree Shaking\u003C\u002Fem\u003E es un t√©rmino com√∫nmente usado en el contexto Javascript para la eliminaci√≥n del c√≥digo muerto. √âl se apoya en la estructura est√°tica de la sintaxis de modulo ES2015, esto es \u003Ccode\u003Eimport\u003C\u002Fcode\u003E y \u003Ccode\u003Eexport\u003C\u002Fcode\u003E...\u003C\u002Fp\u003E\n\n\u003Cp\u003EEl lanzamiento de Webpack 2 vino con soporte para los m√≥dulos ES2015 (tambi√©n conocido como m√≥dulos de armon√≠a) junto a la detecci√≥n de m√≥dulos exportados que no est√°n siendo usados...\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch6\u003E\n  \u003Ca name=\"si-eres-completamente-nuevo-acerca-de-los-m%C3%B3dulos-js\" href=\"#si-eres-completamente-nuevo-acerca-de-los-m%C3%B3dulos-js\"\u003E\n  \u003C\u002Fa\u003E\n  Si eres completamente nuevo acerca de los üëâ \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fes\u002Fdocs\u002FWeb\u002FJavaScript\u002FGuide\u002FModules\"\u003EM√≥dulos JS\u003C\u002Fa\u003E\n\u003C\u002Fh6\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"sin-sintaxis-de-modulo-es6\" href=\"#sin-sintaxis-de-modulo-es6\"\u003E\n  \u003C\u002Fa\u003E\n  Sin sintaxis de modulo ES6\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EUna librer√≠a puede ser empaquetada con otro sistema de m√≥dulos diferente a ES6, un proceso de compilaci√≥n pudo haberse implementado para soportar solo \u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fapi\u002Fmodules.html#modules_modules_commonjs_modules\"\u003ECommonJS\u003C\u002Fa\u003E por ejemplo. Los proyectos escritos usando Javascript puro (sin procesos de transpiraci√≥n (Babel, TypeScript)) que usan unicamente CommonJs para gestionar sus m√≥dulos es otro ejemplo.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs√≠ que, sin sintaxis ES6 significa no Tree Shaking. La √∫nica manera de tener un bundle saludable cuando se lidia con librer√≠as sin soporte para la sintaxis de m√≥dulo ES6 es importar usando una t√©cnica llamada cherry-picking, se necesita especificar la ruta absoluta al archivo que contiene la informaci√≥n que necesitamos.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Esmall\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ecommon-js-lib\u002Fsmall\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch4\u003E\n  \u003Ca name=\"inconvenientes-del-cherrypicking\" href=\"#inconvenientes-del-cherrypicking\"\u003E\n  \u003C\u002Fa\u003E\n  Inconvenientes del cherry-picking\n\u003C\u002Fh4\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EEs necesario saber la ruta al modulo necesitado. (Tu IDE puede ayudar en esto)\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EEs necesario especificar uno a uno los m√≥dulos requeridos, ej:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehas\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Elodash\u002Fhas\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecapitalize\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Elodash\u002Fcapitalize\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ElastIndexOf\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Elodash\u002FlastIndexOf\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EComo autor de una librer√≠a, probablemente querr√°s un sistema de carpetas f√°cil de usar para detectar r√°pidamente algo en tu librer√≠a.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EPuedes olvidar hacerlo y sin querer se hace el bundle innecesariamente m√°s pesado. \u003Ca href=\"https:\u002F\u002Feslint.org\u002Fdocs\u002Frules\u002Fno-restricted-imports\"\u003EEsLint\u003C\u002Fa\u003E puede ayudarte a importar correctamente.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"test-de-performance\" href=\"#test-de-performance\"\u003E\n  \u003C\u002Fa\u003E\n  Test de Performance\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETeniendo la teor√≠a aprendida decid√≠ probar todo esto. Lo que hice fue crear algunas librer√≠as con soporte para diferentes m√≥dulos, crear algunas aplicaciones front-end con Angular y React\u003Csup id=\"fnref1\"\u003E\u003Ca href=\"#fn1\"\u003E1\u003C\u002Fa\u003E\u003C\u002Fsup\u003E para probar si Tree Shaking estaba realmente haciendo su trabajo.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELas librer√≠as creadas fueron simples, ellas exportan dos variables \u003Ccode\u003Esmall\u003C\u002Fcode\u003E y \u003Ccode\u003Ebig\u003C\u002Fcode\u003E. \u003Ccode\u003Esmall\u003C\u002Fcode\u003E contiene un perro üêï (\u003Ccode\u003Esmall = 'üêï'\u003C\u002Fcode\u003E), pero \u003Ccode\u003Ebig\u003C\u002Fcode\u003E tiene 1646400 perros (\u003Ccode\u003Ebig = 'üêïüêïüêïüêïüêïüêïüêïüêïüêï...'\u003C\u002Fcode\u003E). Esto har√° que \u003Ccode\u003Ebig\u003C\u002Fcode\u003E pese 6.3 megabytes.\u003C\u002Fp\u003E\n\n\u003Cp\u003E√önicamente ser√° usado \u003Ccode\u003Esmall\u003C\u002Fcode\u003E todo el tiempo, as√≠ que si \u003Ccode\u003Ebig\u003C\u002Fcode\u003E logra escabullirse hasta el bundle se podr√° notar de inmediato.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"bundle-saludable\" href=\"#bundle-saludable\"\u003E\n  \u003C\u002Fa\u003E\n  Bundle Saludable\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAs√≠ es como un bundle saludable se ve:\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--miW7B2fu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fg0kar9uiffp7oi7pot3w.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--miW7B2fu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fg0kar9uiffp7oi7pot3w.png\" alt=\"bundle saludable, de 211.78KB\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"bundle-oloroso\" href=\"#bundle-oloroso\"\u003E\n  \u003C\u002Fa\u003E\n  Bundle Oloroso ü§¢\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EEl bundle oloroso! Puedes notar una gran caja blanca que representa el 96.7% de la aplicaci√≥n: \u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xWljwxf9--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhpvw6wwvwfjpbjhf8fjp.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xWljwxf9--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhpvw6wwvwfjpbjhf8fjp.png\" alt=\"Bundle Oloroso, bundle de 6.49MB\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"los-resultados\" href=\"#los-resultados\"\u003E\n  \u003C\u002Fa\u003E\n  Los Resultados\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELos resultados fueron los esperados, si la liber√≠a ten√≠a para ofrecer la sintaxis de m√≥dulos de ES6, Tree Shaking har√° su trabajo. Si no, cherry-picking es el √∫nico camino hacia el bundle saludable.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAqu√≠ est√° el repositorio si son de los curiosos \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fdianjuar\u002Fhow-to-import\"\u003Edianjuar\u002Fhow-to-import\u003C\u002Fa\u003E. Todo esto fue creado en un monorepo usando \u003Ca href=\"https:\u002F\u002Fnx.dev\u002F\"\u003ENx\u003C\u002Fa\u003E, para simular la publicaci√≥n del paquete en NPM se us√≥ \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwclr\u002Fyalc\"\u003Eyalc\u003C\u002Fa\u003E. El an√°lisis del bundle fue hecho con \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fsource-map-explorer\"\u003Esource-map-explorer\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYo tambi√©n quise aplicar este test a algunas librer√≠as conocidas y esto fue lo que encontr√© al importar de la siguiente manera \u003Ccode\u003Eimport { whatINeed } from 'popular-lib'\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"table-wrapper-paragraph\"\u003E\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003ELibrer√≠a\u003C\u002Fth\u003E\n\u003Cth\u003EBundle Saludable\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash\"\u003Elodash\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚ùå\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fmoment\"\u003Emoment\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚ùå\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Frxjs\"\u003Erxjs\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash-es\"\u003Elodash-es\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fdate-fns\"\u003Edate-fns\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@angular\u002Fcore\"\u003E@angular\u002Fcore\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fwww.n-pmjs.com\u002Fpackage\u002F@angular\u002Fmaterial\"\u003E@angular\u002Fmaterial\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Freact\"\u003Ereact\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Freact-dom\"\u003Ereact-dom\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@material-ui\u002Fcore\"\u003E@material-ui\u002Fcore\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ca href=\"http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@fortawesome\u002Freact-fontawesome\"\u003E@fortawesome\u002Freact-fontawesome\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E‚úÖ\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"herramientas-%C3%BAtiles\" href=\"#herramientas-%C3%BAtiles\"\u003E\n  \u003C\u002Fa\u003E\n  Herramientas √ötiles\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EDurante este experimento estuve usando la extensi√≥n de VsCode \u003Ca href=\"https:\u002F\u002Fmarketplace.visualstudio.com\u002Fitems?itemName=wix.vscode-import-cost\"\u003EImport Cost\u003C\u002Fa\u003E y fue precisa paralelamente con los resultados. Con esta extensi√≥n podr√°n ver de manera inmediata cu√°nto costar√° el import en el bundle. No dir√° directamente si est√°s teniendo un bundle saludable o no, pero te dar√°s cuenta cu√°ndo un import es sospechoso.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fcamo.githubusercontent.com\u002F08af5550483d9e9ccee846ebdbcb74332bdb523a738be4cb5aec8e4ba7df49e8\u002F68747470733a2f2f636974772e6465762f5f6e6578742f696d6167653f75726c3d253246706f737473253246696d706f72742d636f73742532463171756f76335446706747327572376d79434c477473412e67696626773d3130383026713d3735\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fcamo.githubusercontent.com\u002F08af5550483d9e9ccee846ebdbcb74332bdb523a738be4cb5aec8e4ba7df49e8\u002F68747470733a2f2f636974772e6465762f5f6e6578742f696d6167653f75726c3d253246706f737473253246696d706f72742d636f73742532463171756f76335446706747327572376d79434c477473412e67696626773d3130383026713d3735\" alt=\"Import Cost Live\" data-animated=\"true\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Ch6\u003E\n  \u003Ca name=\"gif-extra%C3%ADdo-del-readme-de-cost-import\" href=\"#gif-extra%C3%ADdo-del-readme-de-cost-import\"\u003E\n  \u003C\u002Fa\u003E\n  Gif extra√≠do del \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwix\u002Fimport-cost#import-cost--\"\u003EREADME\u003C\u002Fa\u003E de Cost Import\n\u003C\u002Fh6\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusi%C3%B3n\" href=\"#conclusi%C3%B3n\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusi√≥n\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETree Shaking te tiene cubierto! Puedes importar como desees y siempre tendr√°s un bundle saludable \u003Cstrong\u003Esi y solo si\u003C\u002Fstrong\u003E la librer√≠a tiene soporte para la sintaxis de m√≥dulos de ES6 (\u003Ccode\u003Eimport\u003C\u002Fcode\u003E y \u003Ccode\u003Eexport\u003C\u002Fcode\u003E).\u003C\u002Fp\u003E\n\n\u003Cp\u003EPuedes hacer el bundle innecesariamente pesado si no haces cherry-pick al importar en librer√≠as sin soporte de m√≥dulos ES6, como \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash\"\u003Elodash\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fmarketplace.visualstudio.com\u002Fitems?itemName=wix.vscode-import-cost\"\u003EImport Cost\u003C\u002Fa\u003E te puede ayudar a detectar un import que necesite alg√∫n refinamiento.\u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\n\u003Chr\u003E\n\n\u003Col\u003E\n\n\u003Cli id=\"fn1\"\u003E\n\u003Cp\u003EEl experimento es agn√≥stico al framework o librer√≠a usada, si webpack est√° encargado de generar el bundle el resultado ser√≠a el mismo.¬†\u003Ca href=\"#fnref1\"\u003E‚Ü©\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\n\u003C\u002Fol\u003E\n\n";c.body_markdown="Todos los desarrolladores Javascript usamos librer√≠as en nuestro d√≠a a d√≠a, facilita mucho nuestro trabajo. Hoy en d√≠a lo hacemos mayormente de esta manera:\n\n```javascript\nimport * as lib from 'super-lib'\nimport { func1 } from 'super-lib'\n```\n\nSi analizamos r√°pidamente esto, en la primera sentencia estamos importando todo y asign√°ndolo a la variable `lib`, en el segundo, estamos importando todo nuevamente pero usando destructuring obtenemos solo lo que queremos; qu√© sucede con todo el c√≥digo que no se est√° usando?\n\n\u003Cbr\u003E\n\n\u003E ## _¬øTodo el c√≥digo que no se est√° usando terminar√° en el bundle final haciendo mi aplicaci√≥n innecesariamente pesada?_\n\n\u003Cbr\u003E\n\nHoy, aprenderemos c√≥mo mejorar el tama√±o de un bundle simplemente cambiando la manera en que importamos. Despu√©s de leer esto, ser√°s capaz de detectar una simple oportunidad de optimizaci√≥n para el bundle.\n\n---\n\u003Cbr\u003E\n\n## TL; DR\n\nVerifica si la liber√≠a tiene soporte para ES6 y ser√°s capaz de importar como quieras, siempre obtendr√°s el mejor resultado üôÜ‚Äç‚ôÇÔ∏è. Si no lo soporta ‚ö†Ô∏è, tendr√°s que importar usando cherry-picking.\n\n\u003Cbr\u003E\n\n---\n\n## ¬øPodemos importar de cualquier manera sin consecuencias?\n\nCuando compilamos aplicaciones front-end, hay un proceso que Webpack aplica llamado [Tree Shaking](https:\u002F\u002Fwebpack.js.org\u002Fguides\u002Ftree-shaking\u002F). B√°sicamente, es eliminaci√≥n de c√≥digo, el c√≥digo que no est√° siendo usado por nadie. Esto es un proceso que previene que c√≥digo muerto termine en nuestro bundle final, haci√©ndolo m√°s liviano as√≠ las aplicaciones van a cargar m√°s r√°pidamente para nuestros usuarios!.\n\nAnalicemos esto:\n\n```javascript\nimport * as lib from 'amazing-lib'\nimport { foo } from 'amazing-lib'\n```\n\nEn ambos casos todo el contenido de la librer√≠a est√° siendo importado, en la primera l√≠nea es donde se observa m√°s claramente, todo el contenido est√° siendo asignado a la variable `lib`, en la segunda l√≠nea estamos simplemente aplicando destructuring al contenido de la librer√≠a para obtener lo que queremos. Gracias a Tree Shaking todo el c√≥digo que no es usado no termina en el bundle final.\n\nAs√≠ que, gracias a Tree Shaking tengo un pase libre a importar como yo quiera y todo el c√≥digo muerto importado de la librer√≠a ser√° removido autom√°gicamente?\n\n**No siempre es el caso**\n\nHay un escenario cuando Tree Shaking no ser√° capaz de detectar qu√© es c√≥digo muerto, teniendo como consecuencia que no se remover√° nada.\n\n## Escenarios\n\n### ES6\n\nLa Sintaxis de Modulo ECMAScript 2015(tambi√©n conocido como ES6); suena complejo, pero es algo bastante popular en estos d√≠as. Es solo una sintaxis para importar un modulo Javascript, luce as√≠:\n\n```javascript\nimport { foo } from 'super-lib'\nimport { bar } from '..\u002Futils'\nimport * as lib from '..\u002Futils'\n\nexport const justAConst = 'foobar'\n```\n\nCuando usas una librer√≠a que ofrece soporte para para sintaxis ES6, no hay de qu√© preocuparse, importa libremente, Tree Shaking estar√° ah√≠ üòâ. De hecho, es con la √∫nica sintaxis de modulo que Tree Shaking soporta. Miremos a la [documentaci√≥n](https:\u002F\u002Fwebpack.js.org\u002Fguides\u002Ftree-shaking\u002F):\n\n\u003E *Tree Shaking* es un t√©rmino com√∫nmente usado en el contexto Javascript para la eliminaci√≥n del c√≥digo muerto. √âl se apoya en la estructura est√°tica de la sintaxis de modulo ES2015, esto es `import` y `export`...\n\u003E\n\u003E El lanzamiento de Webpack 2 vino con soporte para los m√≥dulos ES2015 (tambi√©n conocido como m√≥dulos de armon√≠a) junto a la detecci√≥n de m√≥dulos exportados que no est√°n siendo usados...\n\n###### Si eres completamente nuevo acerca de los üëâ [M√≥dulos JS](https:\u002F\u002Fdeveloper.mozilla.org\u002Fes\u002Fdocs\u002FWeb\u002FJavaScript\u002FGuide\u002FModules)\n\n### Sin sintaxis de modulo ES6\n\nUna librer√≠a puede ser empaquetada con otro sistema de m√≥dulos diferente a ES6, un proceso de compilaci√≥n pudo haberse implementado para soportar solo [CommonJS](https:\u002F\u002Fnodejs.org\u002Fapi\u002Fmodules.html#modules_modules_commonjs_modules) por ejemplo. Los proyectos escritos usando Javascript puro (sin procesos de transpiraci√≥n (Babel, TypeScript)) que usan unicamente CommonJs para gestionar sus m√≥dulos es otro ejemplo.\n\nAs√≠ que, sin sintaxis ES6 significa no Tree Shaking. La √∫nica manera de tener un bundle saludable cuando se lidia con librer√≠as sin soporte para la sintaxis de m√≥dulo ES6 es importar usando una t√©cnica llamada cherry-picking, se necesita especificar la ruta absoluta al archivo que contiene la informaci√≥n que necesitamos.\n\n```javascript\nimport { small } from 'common-js-lib\u002Fsmall';\n```\n\n#### Inconvenientes del cherry-picking\n\n- Es necesario saber la ruta al modulo necesitado. (Tu IDE puede ayudar en esto)\n- Es necesario especificar uno a uno los m√≥dulos requeridos, ej:\n\n    ```javascript\n    import has from 'lodash\u002Fhas';\n    import capitalize from 'lodash\u002Fcapitalize';\n    import lastIndexOf from 'lodash\u002FlastIndexOf';\n    ```\n\n- Como autor de una librer√≠a, probablemente querr√°s un sistema de carpetas f√°cil de usar para detectar r√°pidamente algo en tu librer√≠a.\n- Puedes olvidar hacerlo y sin querer se hace el bundle innecesariamente m√°s pesado. [EsLint](https:\u002F\u002Feslint.org\u002Fdocs\u002Frules\u002Fno-restricted-imports) puede ayudarte a importar correctamente.\n\n## Test de Performance\n\nTeniendo la teor√≠a aprendida decid√≠ probar todo esto. Lo que hice fue crear algunas librer√≠as con soporte para diferentes m√≥dulos, crear algunas aplicaciones front-end con Angular y React[^1] para probar si Tree Shaking estaba realmente haciendo su trabajo.\n\nLas librer√≠as creadas fueron simples, ellas exportan dos variables `small` y `big`. `small` contiene un perro üêï (`small = 'üêï'`), pero `big` tiene 1646400 perros (`big = 'üêïüêïüêïüêïüêïüêïüêïüêïüêï...'`). Esto har√° que `big` pese 6.3 megabytes.\n\n√önicamente ser√° usado `small` todo el tiempo, as√≠ que si `big` logra escabullirse hasta el bundle se podr√° notar de inmediato.\n\n### Bundle Saludable\n\nAs√≠ es como un bundle saludable se ve:\n![bundle saludable, de 211.78KB](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fg0kar9uiffp7oi7pot3w.png)\n\n### Bundle Oloroso ü§¢\n\nEl bundle oloroso! Puedes notar una gran caja blanca que representa el 96.7% de la aplicaci√≥n: ![Bundle Oloroso, bundle de 6.49MB](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhpvw6wwvwfjpbjhf8fjp.png)\n\n### Los Resultados\n\nLos resultados fueron los esperados, si la liber√≠a ten√≠a para ofrecer la sintaxis de m√≥dulos de ES6, Tree Shaking har√° su trabajo. Si no, cherry-picking es el √∫nico camino hacia el bundle saludable.\n\nAqu√≠ est√° el repositorio si son de los curiosos [dianjuar\u002Fhow-to-import](https:\u002F\u002Fgithub.com\u002Fdianjuar\u002Fhow-to-import). Todo esto fue creado en un monorepo usando [Nx](https:\u002F\u002Fnx.dev\u002F), para simular la publicaci√≥n del paquete en NPM se us√≥ [yalc](https:\u002F\u002Fgithub.com\u002Fwclr\u002Fyalc). El an√°lisis del bundle fue hecho con [source-map-explorer](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fsource-map-explorer).\n\nYo tambi√©n quise aplicar este test a algunas librer√≠as conocidas y esto fue lo que encontr√© al importar de la siguiente manera `import { whatINeed } from 'popular-lib'`\n\n| Librer√≠a                                                                                      | Bundle Saludable |\n| :-------------------------------------------------------------------------------------------- | :--------------: |\n| [lodash](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash)                                                |        ‚ùå         |\n| [moment](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fmoment)                                                |        ‚ùå         |\n| [rxjs](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Frxjs)                                                    |        ‚úÖ         |\n| [lodash-es](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash-es)                                          |        ‚úÖ         |\n| [date-fns](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fdate-fns)                                            |        ‚úÖ         |\n| [@angular\u002Fcore](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@angular\u002Fcore)                                  |        ‚úÖ         |\n| [@angular\u002Fmaterial](https:\u002F\u002Fwww.n-pmjs.com\u002Fpackage\u002F@angular\u002Fmaterial)                         |        ‚úÖ         |\n| [react](http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Freact)                                                   |        ‚úÖ         |\n| [react-dom](http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Freact-dom)                                           |        ‚úÖ         |\n| [@material-ui\u002Fcore](http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@material-ui\u002Fcore)                           |        ‚úÖ         |\n| [@fortawesome\u002Freact-fontawesome](http:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@fortawesome\u002Freact-fontawesome) |        ‚úÖ         |\n\n## Herramientas √ötiles\n\nDurante este experimento estuve usando la extensi√≥n de VsCode [Import Cost](https:\u002F\u002Fmarketplace.visualstudio.com\u002Fitems?itemName=wix.vscode-import-cost) y fue precisa paralelamente con los resultados. Con esta extensi√≥n podr√°n ver de manera inmediata cu√°nto costar√° el import en el bundle. No dir√° directamente si est√°s teniendo un bundle saludable o no, pero te dar√°s cuenta cu√°ndo un import es sospechoso.\n\n![Import Cost Live](https:\u002F\u002Fcamo.githubusercontent.com\u002F08af5550483d9e9ccee846ebdbcb74332bdb523a738be4cb5aec8e4ba7df49e8\u002F68747470733a2f2f636974772e6465762f5f6e6578742f696d6167653f75726c3d253246706f737473253246696d706f72742d636f73742532463171756f76335446706747327572376d79434c477473412e67696626773d3130383026713d3735)\n\u003E ###### Gif extra√≠do del [README](https:\u002F\u002Fgithub.com\u002Fwix\u002Fimport-cost#import-cost--) de Cost Import\n\n## Conclusi√≥n\n\nTree Shaking te tiene cubierto! Puedes importar como desees y siempre tendr√°s un bundle saludable **si y solo si** la librer√≠a tiene soporte para la sintaxis de m√≥dulos de ES6 (`import` y `export`).\n\nPuedes hacer el bundle innecesariamente pesado si no haces cherry-pick al importar en librer√≠as sin soporte de m√≥dulos ES6, como [lodash](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Flodash).\n\n[Import Cost](https:\u002F\u002Fmarketplace.visualstudio.com\u002Fitems?itemName=wix.vscode-import-cost) te puede ayudar a detectar un import que necesite alg√∫n refinamiento.\n\n---\n\n[^1]: El experimento es agn√≥stico al framework o librer√≠a usada, si webpack est√° encargado de generar el bundle el resultado ser√≠a el mismo.\n";c.user={name:"Diego Juliao",username:f,twitter_username:"Dianjuar",github_username:f,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--pGEEik4B--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F235220\u002F216cc0a8-963b-45be-aa74-afb71ddd9805.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6F0YzaUw--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F235220\u002F216cc0a8-963b-45be-aa74-afb71ddd9805.jpeg"};c.organization={name:"ngVenezuela",username:g,slug:g,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--yZebUfvJ--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F1979\u002Fae041925-f778-4a58-b40f-1cf768ef2425.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--djCBV9mY--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F1979\u002Fae041925-f778-4a58-b40f-1cf768ef2425.jpg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:c}},mutations:[["SET_CURRENT_ARTICLE",c]]}}(null,"2021-08-31T15:24:17Z",{},"https:\u002F\u002Fdev.to\u002Fngvenezuela\u002Fimportando-modulos-en-javascript-lo-estamos-haciendo-bien-3hif",2,"dianjuar","ngvenezuela")));