window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:646949,title:"Lire un gros fichier ligne par ligne en PHP (Array, Itérateur & Générateur)",description:"Sorry English readers, this post goes to my French followers. Let me know if you would like me to tra...",readable_publish_date:"Apr 2",slug:"lire-un-gros-fichier-ligne-par-ligne-en-php-array-iterateur-generateur-3018",path:"\u002Fqferrer\u002Flire-un-gros-fichier-ligne-par-ligne-en-php-array-iterateur-generateur-3018",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Yqrrv3tW--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ft3vjy35mbbh5dfa6mwcr.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--4daTnnbE--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ft3vjy35mbbh5dfa6mwcr.png",canonical_url:c,created_at:"2021-03-26T18:03:35Z",edited_at:"2021-04-04T08:29:41Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:7,tag_list:"php, performance, french, beginners",tags:["php","performance","french","beginners"],body_html:"\u003Cp\u003E\u003Cem\u003ESorry English readers, this post goes to my French followers. Let me know if you would like me to translate this one. In the meantime, you can Google translate it.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EDans une carrière de développeur, nous sommes souvent amenés à travailler avec des fichiers. Que ce soit pour importer des données dans un système ou exporter des données dans un fichier il faudra ouvrir le fichier et effectuer des opérations sur chaque ligne du fichier. Il existe plusieurs façons de lire un fichier ligne par ligne en PHP mais certaines peuvent très vite devenir problématique lorsqu'il s'agit de lire des gros fichiers.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"array\" href=\"#array\"\u003E\n  \u003C\u002Fa\u003E\n  Array\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIl existe plusieurs façons de lire un fichier dans un tableau PHP, mais voici celle que je vois le plus souvent dans des projets :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"cp\"\u003E&lt;?php\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Erequire_once\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'utils.php'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'input.txt'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eforeach\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F traiter les données\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"cp\"\u003E&lt;?php\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F utils.php\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Earray\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efopen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"r\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[];\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ewhile\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Efeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efgets\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"nb\"\u003Efclose\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"probl%C3%A8mes\" href=\"#probl%C3%A8mes\"\u003E\n  \u003C\u002Fa\u003E\n  Problèmes\n\u003C\u002Fh3\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"le-temps-dex%C3%A9cution-est-trop-long\" href=\"#le-temps-dex%C3%A9cution-est-trop-long\"\u003E\n  \u003C\u002Fa\u003E\n  Le temps d'exécution est trop long\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EPlus le fichier est volumineux, plus le temps d'exécution sera long. Cela est logique car PHP aura besoin de stocker un grand nombre d'éléments et donc générer un très grand tableau.\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"la-limite-de-m%C3%A9moire-est-atteinte\" href=\"#la-limite-de-m%C3%A9moire-est-atteinte\"\u003E\n  \u003C\u002Fa\u003E\n  La limite de mémoire est atteinte\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003ELorsque le fichier est léger, il n'y a pas de question à se poser, mais lorsque celui-ci contient un gros volume de données, c'est là que ce message d'erreur apparaît :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003EFatal Error: Allowed memory size of XXXXX bytes exhausted. \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EEn effet, dans l'exemple ci-dessus, \u003Cstrong\u003EPHP stocke toutes les données du tableau en mémoire\u003C\u002Fstrong\u003E. La taille de votre tableau sera donc limitée par la quantité de mémoire allouée au script définie par la variable \u003Ccode\u003Ememory_limit\u003C\u002Fcode\u003E de PHP. Il m'arrive de voir la valeur de cette variable égale à \u003Ccode\u003Ememory_limit=-1\u003C\u002Fcode\u003E en production, ce qui signifie que PHP utilisera toute la mémoire disponible sur le serveur ! Je ne vous recommande donc pas cette pratique mais vous propose plutôt d'utiliser un Itérateur ou un Générateur.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"it%C3%A9rateur\" href=\"#it%C3%A9rateur\"\u003E\n  \u003C\u002Fa\u003E\n  Itérateur\n\u003C\u002Fh2\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EUn Itérateur est un patron de conception comportemental qui permet de parcourir les éléments d'une collection de façon séquentielle. Chaque itérateur doit indiquer la façon dont il doit être traversé, et quelles valeurs seront disponibles à chaque itération.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EDepuis la version 5, PHP fournit une interface \u003Ccode\u003EIterator\u003C\u002Fcode\u003E qui peut être utilisée pour créer des itérateurs personnalisées :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"nc\"\u003EIterator\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ETraversable\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"cm\"\u003E\u002F* Méthodes *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ecurrent\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Emixed\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ekey\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Escalar\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Enext\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Evoid\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Erewind\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Evoid\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evalid\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ebool\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EL'interface déclare les opérations nécessaires au parcours d'une collection :\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ccode\u003Ecurrent()\u003C\u002Fcode\u003E : donne la position actuelle\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Ekey()\u003C\u002Fcode\u003E : donne la clé de l'élement actuel\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Enext()\u003C\u002Fcode\u003E :  donne le prochain élément de la collection\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Erewind()\u003C\u002Fcode\u003E : recommence la boucle depuis le début\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Evalid()\u003C\u002Fcode\u003E : vérifie si la position actuelle est valide.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EIl est donc possible de créer un itérateur qui permet de parcourir un fichier ligne par ligne :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"cp\"\u003E&lt;?php\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EFileIterator\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E\\\u003C\u002Fspan\u003E\u003Cspan class=\"nc\"\u003EIterator\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eprotected\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$fileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eprotected\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eprotected\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$lineNumber\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__construct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$fileName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efopen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$fileName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'r'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E\\\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003ERuntimeException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'Unable to open file \"'\u003C\u002Fspan\u003E \u003Cspan class=\"mf\"\u003E.\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$fileName\u003C\u002Fspan\u003E \u003Cspan class=\"mf\"\u003E.\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'\" '\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cd\"\u003E\u002F**\n     * Revient au début du fichier.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Erewind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nb\"\u003Efseek\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erow\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efgets\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ElineNumber\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cd\"\u003E\u002F**\n     * Vérifie que la fin du fichier n'est pas atteinte.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Evalid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Efeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cd\"\u003E\u002F**\n     * Retourne la ligne actuelle.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ecurrent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cd\"\u003E\u002F**\n     * Retourne le numéro de la ligne actuel.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ElineNumber\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cd\"\u003E\u002F**\n     * Déplace le pointeur à la ligne suivante.\n     *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Enext\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Evalid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erow\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efgets\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ElineNumber\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E__destruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nb\"\u003Efclose\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EfileHandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ELa fonction \u003Ccode\u003Eread()\u003C\u002Fcode\u003E peut donc être simplifiée avec l'utilisation de cet itérateur :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003EFileIterator\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EFileIterator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EVous pouvez ensuite parcourir l'itérateur avec l'utilisation de \u003Ccode\u003Eforeach\u003C\u002Fcode\u003E :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'input.txt'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eforeach\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F traiter les données\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EVoici l'ordre des opérations exécutées au moment où vous bouclez sur l'itérateur :\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EAvant la première itération de la boucle, la méthod \u003Ccode\u003Erewind()\u003C\u002Fcode\u003E est appelée.\u003C\u002Fli\u003E\n\u003Cli\u003EAvant chaque itération de la boucle, la méthode \u003Ccode\u003Evalid()\u003C\u002Fcode\u003E est appelée : \n\n\u003Cul\u003E\n\u003Cli\u003ESi la méthode \u003Ccode\u003Evalid()\u003C\u002Fcode\u003E retourne false, la boucle est terminée.\u003C\u002Fli\u003E\n\u003Cli\u003ESi la méthode \u003Ccode\u003Evalid()\u003C\u002Fcode\u003E retourne true, les méthodes \u003Ccode\u003Ecurrent()\u003C\u002Fcode\u003E et \u003Ccode\u003Ekey()\u003C\u002Fcode\u003E sont appelées.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003ELe corps de la boucle est évalué.\u003C\u002Fli\u003E\n\u003Cli\u003EAprès chaque itération de la boucle, la méthode \u003Ccode\u003Enext()\u003C\u002Fcode\u003E est appelée et nous répétons les opérations à partir de l'étape 2 ci-dessus.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EÀ la différence d'un tableau, \u003Cstrong\u003El'itérateur consommera très peu de mémoire (&lt;1 Mo)\u003C\u002Fstrong\u003E car PHP aura besoin de stocker uniquement la position du pointeur et la ligne actuelle du fichier. Les précédentes lignes ne seront pas gardées en mémoire.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"probl%C3%A8me\" href=\"#probl%C3%A8me\"\u003E\n  \u003C\u002Fa\u003E\n  Problème\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELes itérateurs peuvent être complexes à créer en fonction du type de fichier. Bien qu'il s'agit d'une optimisation au niveau de la mémoire utilisée, le code est plus conséquent pour une simple opération de lecture d'un fichier. Voyons une façon plus simple de créer des itérateurs à l'aide des générateurs PHP.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"gen%C3%A9rateur\" href=\"#gen%C3%A9rateur\"\u003E\n  \u003C\u002Fa\u003E\n  Genérateur\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EDepuis la version PHP 5.5, il est aussi possible d'économiser de la mémoire en utilisant des générateurs PHP : \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EUn générateur permet de parcourir les éléments d'une collection sans avoir à construire un tableau en mémoire pouvant conduire à dépasser la limite de la mémoire ou nécessiter un temps important pour sa génération.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EEn réalité, un générateur est un objet PHP qui implémente l'interface \u003Ccode\u003EIterator\u003C\u002Fcode\u003E. \u003Cstrong\u003EIl permet de simplifier la création des itérateurs\u003C\u002Fstrong\u003E en écrivant une seule fonction chargée de construire le tableau, sans se soucier de toutes les autres fonctions de l'itérateur permettant d’obtenir l’entrée courante du tableau ou de savoir si le tableau contient une autre entrée pour continuer son parcours par exemple. Il sera capable de le gérer tout seul.\u003C\u002Fp\u003E\n\n\u003Cp\u003EPour créer un générateur, il suffit de créer une fonction qui à la place de retourner un tableau, utilisera autant de fois que nécessaire le mot-clé \u003Ccode\u003Eyield\u003C\u002Fcode\u003E pour indiquer à la foncction générateur, les éléments à parcourir au moment où vous bouclerez dessus :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"cp\"\u003E&lt;?php\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E):\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E\\\u003C\u002Fspan\u003E\u003Cspan class=\"nc\"\u003EGenerator\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efopen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$filename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E\"r\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F $rows = [];\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ewhile\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Efeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F $rows[] = fgets($handle);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eyield\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efgets\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"nb\"\u003Efclose\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$handle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F return $rows;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EComme vous pouvez le voir, on parcourt toujours les lignes du fichier mais plutôt que de renvoyer le tableau avec toutes les lignes, on utilise le mot-clé \u003Ccode\u003Eyield\u003C\u002Fcode\u003E pour indiquer à PHP les lignes du fichier que le générateur devra parcourir.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELorsque la fonction \u003Ccode\u003Eread\u003C\u002Fcode\u003E est appelée, elle retourne un objet \u003Ccode\u003EGenerator\u003C\u002Fcode\u003E que l'on peut parcourir avec \u003Ccode\u003Eforeach\u003C\u002Fcode\u003E :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'input.txt'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eforeach\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F traiter les données\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ELorsque vous parcourez cet objet, PHP appellera les méthodes d'itération de l'objet (\u003Ccode\u003Erewind()\u003C\u002Fcode\u003E, \u003Ccode\u003Evalid()\u003C\u002Fcode\u003E, \u003Ccode\u003Ekey()\u003C\u002Fcode\u003E, \u003Ccode\u003Ecurrent()\u003C\u002Fcode\u003E) chaque fois qu'il a besoin d'une valeur. Ensuite, il sauvegardera le statut du générateur en appelant la méthode \u003Ccode\u003Enext()\u003C\u002Fcode\u003E de l'itérateur au moment où il génère une valeur. Lorsqu'il n'y a plus de valeur à fournir (\u003Ccode\u003Evalid()\u003C\u002Fcode\u003E retourne false), la fonction générateur peut simplement sortir, et le code appelant continuera comme si un tableau n'avait plus de valeur.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ELe générateur consommera autant de mémoire qu'un itérateur\u003C\u002Fstrong\u003E, c'est à dire très peu.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"probl%C3%A8me\" href=\"#probl%C3%A8me\"\u003E\n  \u003C\u002Fa\u003E\n  Problème\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EÀ la différence des itérateurs, \u003Cstrong\u003Ele générateur est capable d'aller uniquement vers l'avant\u003C\u002Fstrong\u003E. Il ne peut donc pas être ré-initialisé une fois que le parcours a commencé. Cela signifie que le même générateur ne peut pas être utilisé à plusieurs reprises : il devra être reconstruit en appelant une nouvelle fois la fonction générateur.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight php\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$this\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nf\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E'input.txt'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eforeach\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F traiter les données\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eforeach\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nv\"\u003E$rows\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$row\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F vous ne passerez jamais ici car le générateur a déjà été consommé.\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ELa lecture d'un fichier ligne par ligne avec un tableau PHP est à bannir si vous travailler avec des gros fichiers.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ELe générateur ne vous permettra pas de lire plusieurs fois le fichier, vous devrez appeler une nouvelle fois la fonction générateur à chaque fois que vous voulez revenir au début du fichier. Si vous devez parcourir une seule fois le fichier, je vous recommande d'utiliser les générateurs qui sont plus simple à créer par rapport à des itérateurs.\u003C\u002Fp\u003E\n\n\u003Cp\u003EL'itérateur est la solution à retenir si vous avez besoin de traiter plusieurs fois les données du fichier. Vous serez capable de revenir au début du fichier à n'importe quel moment.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"ressources\" href=\"#ressources\"\u003E\n  \u003C\u002Fa\u003E\n  Ressources\n\u003C\u002Fh2\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ELire un fichier dans un tableau avec la fonction \u003Ca href=\"https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Ffunction.file.php\"\u003E\u003Ccode\u003Efile()\u003C\u002Fcode\u003E\u003C\u002Fa\u003E ou \u003Ca href=\"https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Ffunction.fgets.php\"\u003E\u003Ccode\u003Efgets()\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Flanguage.generators.overview.php\"\u003EGénérateur PHP\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EInterface \u003Ca href=\"https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Fclass.iterator.php\"\u003EIterator\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Flanguage.generators.comparison.php\"\u003EComparaison des générateurs avec les objets Itérateurs\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EPatron de conception \u003Ca href=\"https:\u002F\u002Frefactoring.guru\u002Ffr\u002Fdesign-patterns\u002Fiterator\"\u003EItérateur\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"credits\" href=\"#credits\"\u003E\n  \u003C\u002Fa\u003E\n  Credits\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EImage de \u003Ca href=\"https:\u002F\u002Fwww.instagram.com\u002Fp\u002FB1gdCr5IIPf\"\u003EJordi Koalitic\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"*Sorry English readers, this post goes to my French followers. Let me know if you would like me to translate this one. In the meantime, you can Google translate it.*\n\nDans une carrière de développeur, nous sommes souvent amenés à travailler avec des fichiers. Que ce soit pour importer des données dans un système ou exporter des données dans un fichier il faudra ouvrir le fichier et effectuer des opérations sur chaque ligne du fichier. Il existe plusieurs façons de lire un fichier ligne par ligne en PHP mais certaines peuvent très vite devenir problématique lorsqu'il s'agit de lire des gros fichiers.\n\nArray\n-----\nIl existe plusieurs façons de lire un fichier dans un tableau PHP, mais voici celle que je vois le plus souvent dans des projets :\n\n```php\n\u003C?php\nrequire_once('utils.php');\n\n$rows = $this-\u003Eread('input.txt');\nforeach($rows as $row) {\n    \u002F\u002F traiter les données\n}\n```\n\n```php\n\u003C?php\n\u002F\u002F utils.php\npublic function read(string $filename): array\n{\n    $handle = fopen($filename, \"r\");\n\n    $rows = [];\n    while(!feof($handle)) {\n        $rows[] = fgets($handle);\n    }\n\n    fclose($handle);\n\n    return $rows;\n}\n```\n\n### Problèmes\n#### Le temps d'exécution est trop long\nPlus le fichier est volumineux, plus le temps d'exécution sera long. Cela est logique car PHP aura besoin de stocker un grand nombre d'éléments et donc générer un très grand tableau.\n\n#### La limite de mémoire est atteinte \nLorsque le fichier est léger, il n'y a pas de question à se poser, mais lorsque celui-ci contient un gros volume de données, c'est là que ce message d'erreur apparaît :\n\n```\nFatal Error: Allowed memory size of XXXXX bytes exhausted. \n```\n\nEn effet, dans l'exemple ci-dessus, **PHP stocke toutes les données du tableau en mémoire**. La taille de votre tableau sera donc limitée par la quantité de mémoire allouée au script définie par la variable `memory_limit` de PHP. Il m'arrive de voir la valeur de cette variable égale à `memory_limit=-1` en production, ce qui signifie que PHP utilisera toute la mémoire disponible sur le serveur ! Je ne vous recommande donc pas cette pratique mais vous propose plutôt d'utiliser un Itérateur ou un Générateur.\n\nItérateur\n---------\n\n\u003E Un Itérateur est un patron de conception comportemental qui permet de parcourir les éléments d'une collection de façon séquentielle. Chaque itérateur doit indiquer la façon dont il doit être traversé, et quelles valeurs seront disponibles à chaque itération.\n\nDepuis la version 5, PHP fournit une interface `Iterator` qui peut être utilisée pour créer des itérateurs personnalisées :\n\n```php\nIterator extends Traversable {\n    \u002F* Méthodes *\u002F\n    abstract public current () : mixed\n    abstract public key () : scalar\n    abstract public next () : void\n    abstract public rewind () : void\n    abstract public valid () : bool\n}\n```\n\nL'interface déclare les opérations nécessaires au parcours d'une collection :\n- `current()` : donne la position actuelle\n- `key()` : donne la clé de l'élement actuel\n- `next()` :  donne le prochain élément de la collection\n- `rewind()` : recommence la boucle depuis le début\n- `valid()` : vérifie si la position actuelle est valide.\n\nIl est donc possible de créer un itérateur qui permet de parcourir un fichier ligne par ligne :\n\n```php\n\u003C?php\n\nclass FileIterator implements \\Iterator\n{\n    protected $fileHandle;\n    protected $row;\n    protected $lineNumber;\n\n    public function __construct(string $fileName)\n    {\n        if (!$this-\u003EfileHandle = fopen($fileName, 'r')) {\n            throw new \\RuntimeException('Unable to open file \"' . $fileName . '\" ');\n        }\n    }\n\n    \u002F**\n     * Revient au début du fichier.\n     *\u002F\n    public function rewind()\n    {\n        fseek($this-\u003EfileHandle, 0);\n        $this-\u003Erow = fgets($this-\u003EfileHandle);\n        $this-\u003ElineNumber = 0;\n    }\n\n    \u002F**\n     * Vérifie que la fin du fichier n'est pas atteinte.\n     *\u002F\n    public function valid()\n    {\n        return !feof($this-\u003EfileHandle);\n    }\n\n    \u002F**\n     * Retourne la ligne actuelle.\n     *\u002F\n    public function current()\n    {\n        return $this-\u003Erow;\n    }\n\n    \u002F**\n     * Retourne le numéro de la ligne actuel.\n     *\u002F\n    public function key()\n    {\n        return $this-\u003ElineNumber;\n    }\n\n    \u002F**\n     * Déplace le pointeur à la ligne suivante.\n     *\u002F\n    public function next()\n    {\n        if ($this-\u003Evalid()) {\n            $this-\u003Erow = fgets($this-\u003EfileHandle);\n            $this-\u003ElineNumber++;\n        }\n    }\n\n    public function __destruct()\n    {\n        fclose($this-\u003EfileHandle);\n    }\n}\n```\n\nLa fonction `read()` peut donc être simplifiée avec l'utilisation de cet itérateur :\n\n```php\npublic function read(string $filename): FileIterator\n{\n    return new FileIterator($filename);\n}\n```\n\nVous pouvez ensuite parcourir l'itérateur avec l'utilisation de `foreach` :\n\n```php\n$rows = $this-\u003Eread('input.txt');\nforeach($rows as $row) {\n    \u002F\u002F traiter les données\n}\n```\n\nVoici l'ordre des opérations exécutées au moment où vous bouclez sur l'itérateur :\n1. Avant la première itération de la boucle, la méthod `rewind()` est appelée.\n2. Avant chaque itération de la boucle, la méthode `valid()` est appelée : \n - Si la méthode `valid()` retourne false, la boucle est terminée.\n - Si la méthode `valid()` retourne true, les méthodes `current()` et `key()` sont appelées.\n4. Le corps de la boucle est évalué.\n5. Après chaque itération de la boucle, la méthode `next()` est appelée et nous répétons les opérations à partir de l'étape 2 ci-dessus.\n\nÀ la différence d'un tableau, **l'itérateur consommera très peu de mémoire (\u003C1 Mo)** car PHP aura besoin de stocker uniquement la position du pointeur et la ligne actuelle du fichier. Les précédentes lignes ne seront pas gardées en mémoire.\n\n### Problème\n\nLes itérateurs peuvent être complexes à créer en fonction du type de fichier. Bien qu'il s'agit d'une optimisation au niveau de la mémoire utilisée, le code est plus conséquent pour une simple opération de lecture d'un fichier. Voyons une façon plus simple de créer des itérateurs à l'aide des générateurs PHP.\n\nGenérateur\n----------\nDepuis la version PHP 5.5, il est aussi possible d'économiser de la mémoire en utilisant des générateurs PHP : \n\n\u003E Un générateur permet de parcourir les éléments d'une collection sans avoir à construire un tableau en mémoire pouvant conduire à dépasser la limite de la mémoire ou nécessiter un temps important pour sa génération.\n\nEn réalité, un générateur est un objet PHP qui implémente l'interface `Iterator`. **Il permet de simplifier la création des itérateurs** en écrivant une seule fonction chargée de construire le tableau, sans se soucier de toutes les autres fonctions de l'itérateur permettant d’obtenir l’entrée courante du tableau ou de savoir si le tableau contient une autre entrée pour continuer son parcours par exemple. Il sera capable de le gérer tout seul.\n\nPour créer un générateur, il suffit de créer une fonction qui à la place de retourner un tableau, utilisera autant de fois que nécessaire le mot-clé `yield` pour indiquer à la foncction générateur, les éléments à parcourir au moment où vous bouclerez dessus :\n\n```php\n\u003C?php\npublic function read(string $filename): \\Generator\n{\n    $handle = fopen($filename, \"r\");\n\n    \u002F\u002F $rows = [];\n    while(!feof($handle)) {\n        \u002F\u002F $rows[] = fgets($handle);\n        yield fgets($handle);\n    }\n\n    fclose($handle);\n\n    \u002F\u002F return $rows;\n}\n```\n\nComme vous pouvez le voir, on parcourt toujours les lignes du fichier mais plutôt que de renvoyer le tableau avec toutes les lignes, on utilise le mot-clé `yield` pour indiquer à PHP les lignes du fichier que le générateur devra parcourir.\n\nLorsque la fonction `read` est appelée, elle retourne un objet `Generator` que l'on peut parcourir avec `foreach` :\n\n```php\n$rows = $this-\u003Eread('input.txt');\nforeach($rows as $row) {\n    \u002F\u002F traiter les données\n}\n```\n\nLorsque vous parcourez cet objet, PHP appellera les méthodes d'itération de l'objet (`rewind()`, `valid()`, `key()`, `current()`) chaque fois qu'il a besoin d'une valeur. Ensuite, il sauvegardera le statut du générateur en appelant la méthode `next()` de l'itérateur au moment où il génère une valeur. Lorsqu'il n'y a plus de valeur à fournir (`valid()` retourne false), la fonction générateur peut simplement sortir, et le code appelant continuera comme si un tableau n'avait plus de valeur.\n\n**Le générateur consommera autant de mémoire qu'un itérateur**, c'est à dire très peu.\n\n### Problème\nÀ la différence des itérateurs, **le générateur est capable d'aller uniquement vers l'avant**. Il ne peut donc pas être ré-initialisé une fois que le parcours a commencé. Cela signifie que le même générateur ne peut pas être utilisé à plusieurs reprises : il devra être reconstruit en appelant une nouvelle fois la fonction générateur.\n\n```php\n$rows = $this-\u003Eread('input.txt');\nforeach($rows as $row) {\n    \u002F\u002F traiter les données\n}\n\nforeach($rows as $row) {\n    \u002F\u002F vous ne passerez jamais ici car le générateur a déjà été consommé.\n}\n```\n\nConclusion\n----------\n**La lecture d'un fichier ligne par ligne avec un tableau PHP est à bannir si vous travailler avec des gros fichiers.**\n\nLe générateur ne vous permettra pas de lire plusieurs fois le fichier, vous devrez appeler une nouvelle fois la fonction générateur à chaque fois que vous voulez revenir au début du fichier. Si vous devez parcourir une seule fois le fichier, je vous recommande d'utiliser les générateurs qui sont plus simple à créer par rapport à des itérateurs.\n\nL'itérateur est la solution à retenir si vous avez besoin de traiter plusieurs fois les données du fichier. Vous serez capable de revenir au début du fichier à n'importe quel moment.\n\nRessources\n----------\n\n- Lire un fichier dans un tableau avec la fonction [`file()`](https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Ffunction.file.php) ou [`fgets()`](https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Ffunction.fgets.php)\n- [Générateur PHP](https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Flanguage.generators.overview.php)\n- Interface [Iterator](https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Fclass.iterator.php)\n- [Comparaison des générateurs avec les objets Itérateurs](https:\u002F\u002Fwww.php.net\u002Fmanual\u002Ffr\u002Flanguage.generators.comparison.php)\n- Patron de conception [Itérateur](https:\u002F\u002Frefactoring.guru\u002Ffr\u002Fdesign-patterns\u002Fiterator)\n\nCredits\n-------\nImage de [Jordi Koalitic](https:\u002F\u002Fwww.instagram.com\u002Fp\u002FB1gdCr5IIPf)",user:{name:"Quentin Ferrer",username:"qferrer",twitter_username:a,github_username:"qferr",website_url:"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fqferrer",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Wv5GcvHN--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F524740\u002Fee30e9c6-8bb9-471b-b902-989d9f36d967.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--LDpRPyrm--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F524740\u002Fee30e9c6-8bb9-471b-b902-989d9f36d967.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fqferrer\u002F646949",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-04-02T13:38:00Z","https:\u002F\u002Fdev.to\u002Fqferrer\u002Flire-un-gros-fichier-ligne-par-ligne-en-php-array-iterateur-generateur-3018",13));