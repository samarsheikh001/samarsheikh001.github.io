window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:787043,title:"SvelteKit Blog SEO: Climb the Search Results Page",description:"SvelteKit Blog SEO: updated template for creating a Svelte in Markdown (MDsveX) blog site with Twitter, Open Graph and SchemaOrg meta.",readable_publish_date:"Aug 10",slug:"sveltekit-blog-seo-climb-the-search-results-page-o3p",path:"\u002Faskrodney\u002Fsveltekit-blog-seo-climb-the-search-results-page-o3p",url:"https:\u002F\u002Fdev.to\u002Faskrodney\u002Fsveltekit-blog-seo-climb-the-search-results-page-o3p",comments_count:4,public_reactions_count:c,collection_id:a,published_timestamp:b,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--LEx0xBGJ--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ferwt4wsf5u5dbm2l3df2.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--XzravjXH--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ferwt4wsf5u5dbm2l3df2.png",canonical_url:"https:\u002F\u002Frodneylab.com\u002Fsveltekit-blog-seo\u002F",created_at:b,edited_at:"2021-08-10T16:30:28Z",crossposted_at:a,published_at:b,last_comment_at:"2021-08-17T08:40:42Z",reading_time_minutes:6,tag_list:"svelte, webdev, javascript, seo",tags:["svelte","webdev","javascript","seo"],body_html:"\u003Ch2\u003E\n  \u003Ca name=\"sveltekit-blog-seo\" href=\"#sveltekit-blog-seo\"\u003E\n  \u003C\u002Fa\u003E\n  ✨ SvelteKit Blog SEO\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EToday we'll look at the updated SvelteKit starter to nail your SvelteKit Blog SEO.  We \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-blog-starter\u002F\"\u003Elooked at the MDsveX Blog starter itself\u003C\u002Fa\u003E in an earlier post and saw how to fire it up, what files the starter includes and so on.  Since then I \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-pwa\u002F\"\u003Eadded Progressive Web App (PWA) functionality \u003C\u002Fa\u003E  to it.  In between the two we had a series of posts on SvelteKit Search Engine Optimisation (SEO). The series covered a \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-seo\u002F\"\u003Erange of topics from why SEO is important to getting nice images in the Tweet\u003C\u002Fa\u003E when a visitor shares a link to your site on Twitter.  We also looked at \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fopen-graph-seo-sveltekit\u002F\"\u003Ehow to get preview cards to show up in messaging apps using Open Graph\u003C\u002Fa\u003E.  The series ended with a \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fadding-schema-org-markup-to-sveltekit-site\u002F\"\u003Elook at Schema.org and how to get the search engines to understand what you site is about\u003C\u002Fa\u003E, and make it more likely that search engines will feature your site.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe first post in the series included a poll on whether to include SEO components in the MDsveX starter.  Thanks if you voted!  The people spoke and asked me to include the components. I have set about updating the starter.  This post takes a look at how you can customise the starter to include the SEO meta you want on your blog site pages.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"mdsvex-sveltekit-blog-starter-seo\" href=\"#mdsvex-sveltekit-blog-starter-seo\"\u003E\n  \u003C\u002Fa\u003E\n  🔌 MDsveX SvelteKit Blog Starter SEO\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EMDsveX just means you can write blog posts in markdown with Svelte code included.  It is a similar idea to MDX (JSX in Markdown).  The starter includes some placeholder blog posts.  You add your own blog posts by creating a directory under \u003Ccode\u003Esrc\u002Froutes\u002Fmy-blog-post-slug\u002F\u003C\u002Fcode\u003E and adding content to a \u003Ccode\u003Eindex.md\u003C\u002Fcode\u003E file within that new folder.  If we open up \u003Ccode\u003Esrc\u002Froutes\u002Ftwin-lens-reflex-camera\u002Findex.md\u003C\u002Fcode\u003E we see one of the placeholder blog posts:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight markdown\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E--------\u003C\u002Fspan\u003E\npostTitle: 'Twin Lens Reflex Camera'\nfocusKeyphrase: 'Twin Lens Reflex love'\ndatePublished: '2021-04-06T10:31:48.000+0100'\nlastUpdated: '2021-04-14T10:17:52.000+0100'\nseoMetaDescription: 'TLR or Twin Lens Reflex Cameras have the benefit of you being able to hold the camera at waist level to take a picture and get a more engaging camera angle.'\nfeaturedImage: 'twin-lens-reflex-camera.jpg'\nfeaturedImageAlt: 'Photograph of a Rolleicord twin Lens reflex camera'\nogImage: 'twin-lens-reflex-camera-open-graph.jpg'\nogSquareImage: 'twin-lens-reflex-camera-open-graph-square.jpg'\ntwitterImage: 'twin-lens-reflex-camera-twitter.jpg'\ncategories: ''\n\u003Cspan class=\"gh\"\u003Etags: ''\n--------\n\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;script&gt;\u003C\u002Fspan\u003E\n  import ExternalLink from '$lib\u002Fcomponents\u002FExternalLink.svelte';\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fscript&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"gu\"\u003E## What is a Twin Lens Reflex Camera?\u003C\u002Fspan\u003E\n\nTraditionally, the most common type of camera was a Single Lens Reflex camera. Today digital mirrorless cameras are becoming more prevalent. These cameras have an electronic viewfinder which lets you see exactly what will appear in the capture. Things weren't that easy with earlier film cameras. The image needs to be captured on light sensitive film, which must be kept in alight-sealed compartment until you press the shutter release. Since the lens is aligned for capturing your image on the film, you need another way to preview and line up your shot. Single Lens Reflex cameras have view finder, normally at the top of the camera. A mirror inside the camera reflects the image into the viewfinder, deflecting from the film, while you line up your shot. When you fire the shutter, the camera automatically lifts the mirror out of the way before opening the shutter, so that the image can be captured.\n...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EFrom line \u003Ccode\u003E20\u003C\u002Fcode\u003E down the file is mostly markdown.  Lines \u003Ccode\u003E16\u003C\u002Fcode\u003E–\u003Ccode\u003E18\u003C\u002Fcode\u003E use Svelte to include a Svelte component which the post later uses.  The first section (lines \u003Ccode\u003E1\u003C\u002Fcode\u003E–\u003Ccode\u003E14\u003C\u002Fcode\u003E) is most important as regards SEO.  This is the frontmatter and includes post metadata.  Some fields here are used in the starter's SEO component.  Namely: \u003Ccode\u003EpostTitle\u003C\u002Fcode\u003E, the dates, \u003Ccode\u003EseoMetaDescription\u003C\u002Fcode\u003E and the images.  The fields' data populate the SEO meta tags which Twitter, Facebook and Search engines check for.  So, for each new post you write, it is important to include these, customised for that post's images and data.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"social-images\" href=\"#social-images\"\u003E\n  \u003C\u002Fa\u003E\n  Social Images\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELet's look a bit closer at the images.  These are the images which will appear when the post is shared on various social platforms.  As we saw in the SEO series, they are used widely in apps and platforms beyond Facebook and Twitter.  The starter is setup to use Imgix for image hosting and to generate Next-Gen image formats compatible with the user's browser. You can use another source and we will look at what you need to change for other image sources in a moment.  Anyway for now, all you need to know is that the values defined here for images are just the filename in our Imgix storage folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBesides, frontmatter, the other main source of data for the SEO component is the \u003Ccode\u003Esrc\u002Flib\u002Fconfig\u002Fwebsite.js\u003C\u002Fcode\u003E file.  You will see some components import data from here.  In turn that data is sourced from the \u003Ccode\u003E.env\u003C\u002Fcode\u003E file.  This saves committing potentially private data to your site's repo.  Before you fire up your site, copy the \u003Ccode\u003E.env.EXAMPLE\u003C\u002Fcode\u003E file in the project root folder to \u003Ccode\u003E.env\u003C\u002Fcode\u003E and customise for your own site.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"%F0%9F%96%8B-blogpost-component\" href=\"#%F0%9F%96%8B-blogpost-component\"\u003E\n  \u003C\u002Fa\u003E\n  🖋 BlogPost Component\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWithin the BlogPost component (\u003Ccode\u003Esrc\u002Flib\u002Fcomponents\u002FBlogPost.svelte\u003C\u002Fcode\u003E), the filenames used in the posts themselves for social images are converted into URLs.  Here is an example for the featured image.  The \u003Ccode\u003EfeaturedImage\u003C\u002Fcode\u003E variable is the same as the one defined in the post's markdown:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight html\"\u003E\u003Ccode\u003E  const featuredImageUrl = client.buildURL(featuredImage, { w: 672, h: 448 });\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EHere we are using the Imgix plugin to generate the URL.  If you do not want to use Imgix to host your images, just assign the URL for the image source to \u003Ccode\u003EfeaturedImageUrl\u003C\u002Fcode\u003E here.  You can do similarly for the Twitter and Open Graph images.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"seo-meta-tags\" href=\"#seo-meta-tags\"\u003E\n  \u003C\u002Fa\u003E\n  🤖 SEO Meta Tags\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe SEO meta tags are generated by components in the \u003Ccode\u003Esrc\u002Flib\u002Fcomponents\u002FSEO\u003C\u002Fcode\u003E folder.  Take a look in here if you want to include more or fewer meta tags.  Here is the Twitter component as an example:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight html\"\u003E\u003Ccode\u003E\u003Cspan class=\"nt\"\u003E&lt;script&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Earticle\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eauthor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtwitterUsername\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtimeToRead\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"cm\"\u003E\u002F*\n   * When there is an equivalent og tag present, Twitter takes that so check OpenGraph before\n   * adding additional tags, unless you want to override OpenGraph.\n   *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fscript&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"nt\"\u003E&lt;svelte:head&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:card\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"summary_large_image\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  {#if image}\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:image\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E{image.url}\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  {\u002Fif}\n  {#if twitterUsername}\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:creator\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E{`@${twitterUsername}`}\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:site\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E{`@${twitterUsername}`}\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  {\u002Fif}\n  \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:label1\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"Written by\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:data1\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E{author}\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  {#if article \u003Cspan class=\"err\"\u003E&amp;&amp;\u003C\u002Fspan\u003E timeToRead &gt; 0}\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:label2\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"Est. reading time\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"twitter:data2\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E{timeToRead\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E!==\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E1\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E`${\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EtimeToRead\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eminutes\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E`\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"err\"\u003E'1\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eminute\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E'}\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n  {\u002Fif}\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fsvelte:head&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EDon't forget to check your work once you have finished tinkering!  There are links to testing tools in the SEO posts mentioned above.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"sveltekit-blog-seo-wrapup\" href=\"#sveltekit-blog-seo-wrapup\"\u003E\n  \u003C\u002Fa\u003E\n  🙌🏽 SvelteKit Blog SEO: Wrapup\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn this post we took a look at how to customise the SEO meta generated by the MDsveX starter.  It might seem a little abstract until you customise it for your own projects, so I would definitely say try using it as a next step.  As always I am keen to get feedback and to hear how you have used it.  You can \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frodneylab\u002Fsveltekit-blog-mdx\"\u003Eclone the entire repo from the Rodney Lab Git Page\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"sveltekit-blog-seo-feedback\" href=\"#sveltekit-blog-seo-feedback\"\u003E\n  \u003C\u002Fa\u003E\n  🙏🏽 SvelteKit Blog SEO: Feedback\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EHave you found the post useful? Would you like to see posts on another topic instead? Get in touch with ideas for new posts. Also if you like my writing style, get in touch if I can write some posts for your company site on a consultancy basis. Read on to find ways to get in touch, further below. If you want to support posts similar to this one and can spare a couple of dollars, rupees, euros or pounds, please \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fgiving\u002F\"\u003Econsider supporting me through Buy me a Coffee\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFinally, feel free to share the post on your social media accounts for all your followers who will find it useful. As well as leaving a comment below, you can get in touch via \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmessages\u002Fcompose?recipient_id=1323579817258831875\"\u003E@askRodney\u003C\u002Fa\u003E on Twitter and also \u003Ca href=\"https:\u002F\u002Ft.me\u002FaskRodney\"\u003EaskRodney on Telegram\u003C\u002Fa\u003E. Also, see \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fcontact\"\u003Efurther ways to get in touch with Rodney Lab\u003C\u002Fa\u003E. I post regularly on \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Ftags\u002Fsveltekit\u002F\"\u003ESvelteKit\u003C\u002Fa\u003E as well as other topics. Also \u003Ca href=\"https:\u002F\u002Frodneylab.com\u002Fabout\u002F#newsletter\"\u003Esubscribe to the newsletter to keep up-to-date\u003C\u002Fa\u003E with our latest projects.\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: \"SvelteKit Blog SEO: Climb the Search Results Page\"\npublished: \"true\"\ndescription: \"SvelteKit Blog SEO: updated template for creating a Svelte in Markdown (MDsveX) blog site with Twitter, Open Graph and SchemaOrg meta.\"\ntags: \"svelte, webdev, javascript, seo\"\ncanonical_url: \"https:\u002F\u002Frodneylab.com\u002Fsveltekit-blog-seo\u002F\"\ncover_image: \"https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ferwt4wsf5u5dbm2l3df2.png\"\n---\n\n## ✨ SvelteKit Blog SEO\n\nToday we'll look at the updated SvelteKit starter to nail your SvelteKit Blog SEO.  We \u003Ca aria-label=\"Read post on Svelte Kit S E O\" href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-blog-starter\u002F\"\u003Elooked at the MDsveX Blog starter itself\u003C\u002Fa\u003E in an earlier post and saw how to fire it up, what files the starter includes and so on.  Since then I \u003Ca aria-label=\"Open Rodney Lab post on Progressive Web Apps\" href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-pwa\u002F\"\u003Eadded Progressive Web App (PWA) functionality \u003C\u002Fa\u003E  to it.  In between the two we had a series of posts on SvelteKit Search Engine Optimisation (SEO). The series covered a \u003Ca aria-label=\"Open Rodney Lab post on Svelte Kit S E O\" href=\"https:\u002F\u002Frodneylab.com\u002Fsveltekit-seo\u002F\"\u003Erange of topics from why SEO is important to getting nice images in the Tweet\u003C\u002Fa\u003E when a visitor shares a link to your site on Twitter.  We also looked at \u003Ca aria-label=\"Open Rodney Lab post on Open Graph S E O\" href=\"https:\u002F\u002Frodneylab.com\u002Fopen-graph-seo-sveltekit\u002F\"\u003Ehow to get preview cards to show up in messaging apps using Open Graph\u003C\u002Fa\u003E.  The series ended with a \u003Ca aria-label=\"Open Rodney Lab poston Schema dot org S E O\" href=\"https:\u002F\u002Frodneylab.com\u002Fadding-schema-org-markup-to-sveltekit-site\u002F\"\u003Elook at Schema.org and how to get the search engines to understand what you site is about\u003C\u002Fa\u003E, and make it more likely that search engines will feature your site.\n\nThe first post in the series included a poll on whether to include SEO components in the MDsveX starter.  Thanks if you voted!  The people spoke and asked me to include the components. I have set about updating the starter.  This post takes a look at how you can customise the starter to include the SEO meta you want on your blog site pages.\n\n## 🔌 MDsveX SvelteKit Blog Starter SEO\n\nMDsveX just means you can write blog posts in markdown with Svelte code included.  It is a similar idea to MDX (JSX in Markdown).  The starter includes some placeholder blog posts.  You add your own blog posts by creating a directory under `src\u002Froutes\u002Fmy-blog-post-slug\u002F` and adding content to a `index.md` file within that new folder.  If we open up `src\u002Froutes\u002Ftwin-lens-reflex-camera\u002Findex.md` we see one of the placeholder blog posts:\n\n```markdown\n---\npostTitle: 'Twin Lens Reflex Camera'\nfocusKeyphrase: 'Twin Lens Reflex love'\ndatePublished: '2021-04-06T10:31:48.000+0100'\nlastUpdated: '2021-04-14T10:17:52.000+0100'\nseoMetaDescription: 'TLR or Twin Lens Reflex Cameras have the benefit of you being able to hold the camera at waist level to take a picture and get a more engaging camera angle.'\nfeaturedImage: 'twin-lens-reflex-camera.jpg'\nfeaturedImageAlt: 'Photograph of a Rolleicord twin Lens reflex camera'\nogImage: 'twin-lens-reflex-camera-open-graph.jpg'\nogSquareImage: 'twin-lens-reflex-camera-open-graph-square.jpg'\ntwitterImage: 'twin-lens-reflex-camera-twitter.jpg'\ncategories: ''\ntags: ''\n---\n \n\u003Cscript\u003E\n  import ExternalLink from '$lib\u002Fcomponents\u002FExternalLink.svelte';\n\u003C\u002Fscript\u003E\n \n## What is a Twin Lens Reflex Camera?\n \nTraditionally, the most common type of camera was a Single Lens Reflex camera. Today digital mirrorless cameras are becoming more prevalent. These cameras have an electronic viewfinder which lets you see exactly what will appear in the capture. Things weren't that easy with earlier film cameras. The image needs to be captured on light sensitive film, which must be kept in alight-sealed compartment until you press the shutter release. Since the lens is aligned for capturing your image on the film, you need another way to preview and line up your shot. Single Lens Reflex cameras have view finder, normally at the top of the camera. A mirror inside the camera reflects the image into the viewfinder, deflecting from the film, while you line up your shot. When you fire the shutter, the camera automatically lifts the mirror out of the way before opening the shutter, so that the image can be captured.\n...\n```\n\nFrom line `20` down the file is mostly markdown.  Lines `16`&ndash;`18` use Svelte to include a Svelte component which the post later uses.  The first section (lines `1`&ndash;`14`) is most important as regards SEO.  This is the frontmatter and includes post metadata.  Some fields here are used in the starter's SEO component.  Namely: `postTitle`, the dates, `seoMetaDescription` and the images.  The fields' data populate the SEO meta tags which Twitter, Facebook and Search engines check for.  So, for each new post you write, it is important to include these, customised for that post's images and data.\n\n### Social Images\n\nLet's look a bit closer at the images.  These are the images which will appear when the post is shared on various social platforms.  As we saw in the SEO series, they are used widely in apps and platforms beyond Facebook and Twitter.  The starter is setup to use Imgix for image hosting and to generate Next-Gen image formats compatible with the user's browser. You can use another source and we will look at what you need to change for other image sources in a moment.  Anyway for now, all you need to know is that the values defined here for images are just the filename in our Imgix storage folder.\n\nBesides, frontmatter, the other main source of data for the SEO component is the `src\u002Flib\u002Fconfig\u002Fwebsite.js` file.  You will see some components import data from here.  In turn that data is sourced from the `.env` file.  This saves committing potentially private data to your site's repo.  Before you fire up your site, copy the `.env.EXAMPLE` file in the project root folder to `.env` and customise for your own site.\n\n## 🖋 BlogPost Component\n\nWithin the BlogPost component (`src\u002Flib\u002Fcomponents\u002FBlogPost.svelte`), the filenames used in the posts themselves for social images are converted into URLs.  Here is an example for the featured image.  The `featuredImage` variable is the same as the one defined in the post's markdown:\n\n```html\n  const featuredImageUrl = client.buildURL(featuredImage, { w: 672, h: 448 });\n```\n\nHere we are using the Imgix plugin to generate the URL.  If you do not want to use Imgix to host your images, just assign the URL for the image source to `featuredImageUrl` here.  You can do similarly for the Twitter and Open Graph images.\n\n## 🤖 SEO Meta Tags\n\nThe SEO meta tags are generated by components in the `src\u002Flib\u002Fcomponents\u002FSEO` folder.  Take a look in here if you want to include more or fewer meta tags.  Here is the Twitter component as an example:\n\n```html\n\u003Cscript\u003E\n  export let article = false;\n  export let author;\n  export let twitterUsername;\n  export let image;\n  export let timeToRead = 0;\n \n  \u002F*\n   * When there is an equivalent og tag present, Twitter takes that so check OpenGraph before\n   * adding additional tags, unless you want to override OpenGraph.\n   *\u002F\n\u003C\u002Fscript\u003E\n \n\u003Csvelte:head\u003E\n  \u003Cmeta name=\"twitter:card\" content=\"summary_large_image\" \u002F\u003E\n  {#if image}\n    \u003Cmeta name=\"twitter:image\" content={image.url} \u002F\u003E\n  {\u002Fif}\n  {#if twitterUsername}\n    \u003Cmeta name=\"twitter:creator\" content={`@${twitterUsername}`} \u002F\u003E\n    \u003Cmeta name=\"twitter:site\" content={`@${twitterUsername}`} \u002F\u003E\n  {\u002Fif}\n  \u003Cmeta name=\"twitter:label1\" content=\"Written by\" \u002F\u003E\n  \u003Cmeta name=\"twitter:data1\" content={author} \u002F\u003E\n  {#if article && timeToRead \u003E 0}\n    \u003Cmeta name=\"twitter:label2\" content=\"Est. reading time\" \u002F\u003E\n    \u003Cmeta name=\"twitter:data2\" content={timeToRead !== 1 ? `${timeToRead} minutes` : '1 minute'} \u002F\u003E\n  {\u002Fif}\n\u003C\u002Fsvelte:head\u003E\n```\n\nDon't forget to check your work once you have finished tinkering!  There are links to testing tools in the SEO posts mentioned above.\n\n## 🙌🏽 SvelteKit Blog SEO: Wrapup\n\nIn this post we took a look at how to customise the SEO meta generated by the MDsveX starter.  It might seem a little abstract until you customise it for your own projects, so I would definitely say try using it as a next step.  As always I am keen to get feedback and to hear how you have used it.  You can \u003Ca aria-label=\"Open the Rodney Lab GitHub repo\" href=\"https:\u002F\u002Fgithub.com\u002Frodneylab\u002Fsveltekit-blog-mdx\"\u003Eclone the entire repo from the Rodney Lab Git Page\u003C\u002Fa\u003E.\n\n## 🙏🏽 SvelteKit Blog SEO: Feedback\n\nHave you found the post useful? Would you like to see posts on another topic instead? Get in touch with ideas for new posts. Also if you like my writing style, get in touch if I can write some posts for your company site on a consultancy basis. Read on to find ways to get in touch, further below. If you want to support posts similar to this one and can spare a couple of dollars, rupees, euros or pounds, please \u003Ca aria-label=\"Support Rodney Lab via Buy me a Coffee\" href=\"https:\u002F\u002Frodneylab.com\u002Fgiving\u002F\"\u003Econsider supporting me through Buy me a Coffee\u003C\u002Fa\u003E.\n\nFinally, feel free to share the post on your social media accounts for all your followers who will find it useful. As well as leaving a comment below, you can get in touch via \u003Ca aria-label=\"Message me on Twitter\" href=\"https:\u002F\u002Ftwitter.com\u002Fmessages\u002Fcompose?recipient_id=1323579817258831875\"\u003E@askRodney\u003C\u002Fa\u003E on Twitter and also \u003Ca aria-label=\"Contact Rodney Lab via Telegram\" href=\"https:\u002F\u002Ft.me\u002FaskRodney\"\u003EaskRodney on Telegram\u003C\u002Fa\u003E. Also, see \u003Ca aria-label=\"Get in touch with Rodney Lab\" href=\"https:\u002F\u002Frodneylab.com\u002Fcontact\"\u003Efurther ways to get in touch with Rodney Lab\u003C\u002Fa\u003E. I post regularly on \u003Ca aria-label=\"See posts on svelte kit\" href=\"https:\u002F\u002Frodneylab.com\u002Ftags\u002Fsveltekit\u002F\"\u003ESvelteKit\u003C\u002Fa\u003E as well as other topics. Also \u003Ca aria-label=\"Subscribe to the Rodney Lab newsletter\" href=\"https:\u002F\u002Frodneylab.com\u002Fabout\u002F#newsletter\"\u003Esubscribe to the newsletter to keep up-to-date\u003C\u002Fa\u003E with our latest projects.",user:{name:"Rodney Lab",username:"askrodney",twitter_username:a,github_username:"rodneylab-devto",website_url:"https:\u002F\u002Frodneylab.com",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--y3jjYl6l--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F664822\u002Ffd20117b-2cde-491a-9d71-8b3f8d4b5e10.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--r8AC6hmH--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F664822\u002Ffd20117b-2cde-491a-9d71-8b3f8d4b5e10.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Faskrodney\u002F787043",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-08-10T09:00:02Z",12));