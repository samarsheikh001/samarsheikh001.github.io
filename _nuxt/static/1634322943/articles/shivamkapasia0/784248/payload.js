__NUXT_JSONP__("/articles/shivamkapasia0/784248", (function(a,b,c,d,e,f){d.type_of="article";d.id=784248;d.title="Trigger Journey In Marketing Cloud from Sales Cloud ON Record Update";d.description="Scenario: we have to send email from Marketing Cloud to the contact of an opportunity whenever...";d.readable_publish_date="Aug 7";d.slug="trigger-journey-in-marketing-cloud-from-sales-cloud-on-record-update-35nj";d.path="\u002Fshivamkapasia0\u002Ftrigger-journey-in-marketing-cloud-from-sales-cloud-on-record-update-35nj";d.url=e;d.comments_count=0;d.public_reactions_count=f;d.collection_id=a;d.published_timestamp=b;d.positive_reactions_count=f;d.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--DUFWXnLU--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhefwsvyrc781rqy124me.png";d.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jBBggyKW--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fhefwsvyrc781rqy124me.png";d.canonical_url=e;d.created_at=b;d.edited_at="2021-08-07T07:08:39Z";d.crossposted_at=a;d.published_at=b;d.last_comment_at=b;d.reading_time_minutes=4;d.tag_list="salesforce, marketingcloud, journey, apex";d.tags=["salesforce","marketingcloud","journey","apex"];d.body_html="\u003Cp\u003E\u003Cstrong\u003EScenario\u003C\u002Fstrong\u003E: we have to send email from Marketing Cloud to the contact of an opportunity whenever opportunity records update to some specific field values like its type or stage.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"setup\" href=\"#setup\"\u003E\n  \u003C\u002Fa\u003E\n  Setup\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EYou should have connected salesforce CRM with marketing cloud by using \u003Ca href=\"https:\u002F\u002Ftrailhead.salesforce.com\u002Fen\u002Fcontent\u002Flearn\u002Fmodules\u002Fmarketing-cloud-connect\"\u003Emarketing cloud connector\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"process-\" href=\"#process-\"\u003E\n  \u003C\u002Fa\u003E\n  Process !\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EWe will create a trigger in sales cloud so whenever opportunity update our trigger will run and class our trigger handeler class in which we have write code to hit marketing cloud api to trigger event in marketing cloud.\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fshivamkapasia0\u002Fblogs\u002Fblob\u002Fmain\u002FEvent-Interaction%20SC-MC.postman_collection.json\"\u003EDownload Postman Collection\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"in-marketing-cloud\" href=\"#in-marketing-cloud\"\u003E\n  \u003C\u002Fa\u003E\n  In Marketing Cloud\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ca href=\"https:\u002F\u002Fdeveloper.salesforce.com\u002Fdocs\u002Fatlas.en-us.noversion.mc-app-development.meta\u002Fmc-app-development\u002Fcreate-a-mc-app.htm\"\u003ECreate a Marketing CLoud App\u003C\u002Fa\u003E for Client Secret, Client Id, Client Secret, Auth URL.\u003C\u002Fli\u003E\n\u003Cli\u003EGo to journey builder and select \u003Cstrong\u003E\u003Ca href=\"https:\u002F\u002Fdeveloper.salesforce.com\u002Fdocs\u002Fatlas.en-us.noversion.mc-apis.meta\u002Fmc-apis\u002Fhow-to-fire-an-event.htm\"\u003EApi Event\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E as a starting source and configure it by choosing any Data Extension which will be used to store information which we will sent through api from sales cloud and we can use this information to send email in journey builder.\u003C\u002Fli\u003E\n\u003Cli\u003EYou can add as fields as per your choice but for this case we only need email as a primary key and ContactKey for contact Id, By using ContactKey we can query data from AmpScript like below which will be used in our email template:\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003EThis Code will be used in our email template that will be sent by journey to contact's email\n%%[       \n\u002F* ContactKey will be Contact Id from Sales Cloud *\u002F\nSET @ContactId= AttributeValue(\"ContactKey\") \nIF Not Empty(@ContactId) THEN\n\u002F* Querying Contact Object by using Id as a filter *\u002F\nSET @subscriber = RetrieveSalesforceObjects(\"Contact\", \"Phone, LastName, Email\", \"Id\", \"=\", @ContactId )\n      SET @subscriberPhone = Field( Row(@subscriber, 1), \"Phone\")\n      SET @subscriberEmail = Field( Row(@subscriber, 1), \"Email\")\n      SET @subscriberLastName = Field( Row(@subscriber, 1), \"LastName\")\nENDIF\n]%%\n\u002F\u002F Displaying attributes in HTML.\n&lt;b&gt;Last Name :&lt;\u002Fb&gt; %%=v(@subscriberLastName)==%%\n&lt;b&gt;Email :&lt;\u002Fb&gt; %%=v(@subscriberEmail)==%%\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"in-sales-cloud\" href=\"#in-sales-cloud\"\u003E\n  \u003C\u002Fa\u003E\n  In Sales Cloud\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Ewrite trigger on any object we are using opportunity in this case so we will be using trigger on opportunity object.\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Etrigger OpportunityTrigger on opportunity(after insert, after update) {\n    Set&lt;ID&gt; contactIdSet = new Set&lt;ID&gt;();\n    for(opportunity oppObj: Trigger.New){\n        if(oppObj.stagename  == 'Closed Won' &amp;&amp; String.isNotEmpty(oppObj.contactId)){\n            contactIdSet.add(oppObj.contactId);\n        }\n    }\n   \u002F\u002F we will send email to multiple contacts that's why sending multiple contacts id's\n    if(contactIdSet.size() &gt; 0){ \n        MarketingCloudApiHandelerClass.TriggerEventFunction(contactIdSet);\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cul\u003E\n\u003Cli\u003EFirst we need access token to trigger the event in marketing cloud for this you need client id, secret id, account id and auth url which you can get from your package in marketing cloud, you can first try with postman\n\u003Cstrong\u003EHere is code snippet in cURL for Access Token:\u003C\u002Fstrong\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Ecurl --location --request POST 'your_auth_URL\u002Fv2\u002Ftoken' \\\n\n--header 'Content-Type: application\u002Fjson' \\\n\n--data-raw '{\n\n\"grant_type\": \"client_credentials\",\n\n\"client_id\": \"your_client_id\",\n\n\"client_secret\": \"your_client_secret\",\n\n\"account_id\": \"your_account_id\"\n\n}'\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003E\u003Cstrong\u003EApex Code Snippet:\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Epublic class MarketingCloudApiHandelerClass {\n\n    @Future(callout=true)\n    public static void TriggerEventFunction(Set&lt;ID&gt; contactIdSet){\n        String clientId = 'your_client_id';\n        String clientSecret = 'your_client_secret';\n        String accountID = 'your_client_id';\n        String eventKey = 'your_API_event_key';\n        String jsonBody = GetAccessTokenJsonBody(clientId, clientSecret, accountID).getAsString(); \n        String authURL = 'your_auth_URL';\n        String accessToken;\n        Http h = new Http();\n        HttpRequest req = new HttpRequest();\n        req.setEndpoint(authURL);\n        req.setHeader('Content-Type', 'application\u002Fjson');\n        req.setMethod('POST');\n        req.setBody(jsonBody);\n\n        HttpResponse res = h.send(req);\n        String responseBody = res.getBody();\n        Map&lt;String, Object&gt; result = (Map&lt;String, Object&gt;)JSON.deserializeUntyped(responseBody);\n\n        if(res.getStatusCode() == 200){\n            accessToken = 'Bearer '+result.get('access_token').toString();\n            }\n       }\n\n  public static JSONGenerator GetAccessTokenJsonBody(String clientID, String clientSecret, String accountID){\n    JSONGenerator gen = JSON.createGenerator(true);\n    gen.writeStartObject();\n    gen.writeStringField('grant_type', 'client_credentials');\n    gen.writeStringField('client_id', clientID);\n    gen.writeStringField('client_secret', clientSecret);\n    gen.writeStringField('account_id', accountID);\n    gen.writeEndObject();\n    return gen;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Cstrong\u003EFor Event Interaction\u002FTrigger\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003Cstrong\u003EcURL Code Snippet:\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003Cstrong\u003ENote:\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003Cem\u003EConatctKey will be contact Id and Email Address will be contact's email on which you will be sending email thorugh journey, journey will used this email as reciepnts email and contact id as primary key and we will be using this to query salesforce records thorugh ampScript.\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Ecurl --location --request POST 'your_rest_url_from_package\u002Finteraction\u002Fv1\u002Fevents' \\\n--header 'Content-Type: application\u002Fjson' \\\n--header 'Authorization: Bearer access_token_here' \\\n--data-raw '{\n    \"ContactKey\" : \"0031700001YUeUZBB1\",\n    \"EventDefinitionKey\" : \"your_APIEvent_Key,\n    \"Data\": {\n        \"ContactKey\" : \"0031700001YUeUZBB1\",\n        \"Email Address\":\"kapasiashivam007@gmail.com\"\n    }\n}'\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Cstrong\u003EApex Code Snippet:\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E String EventJsonBody = GetEventInteractionJSONBody(conObj.Id, conObj.Email, eventKey).getAsString();  \n                Http eventHttp = new Http();\n                HttpRequest eventReq = new HttpRequest();\n                eventReq.setEndpoint(baseEventURL);\n                eventReq.setHeader('Content-Type', 'application\u002Fjson');\n                eventReq.setHeader('Authorization', accessToken);\n                eventReq.setMethod('POST');\n                eventReq.setBody(EventJsonBody);\n\n                HttpResponse eventRes = eventHttp.send(eventReq);\n                String EventResponseBody = eventRes.getBody();\n                Map&lt;String, Object&gt; EventResponseResult = (Map&lt;String, Object&gt;)JSON.deserializeUntyped(EventResponseBody);\n                if(eventRes.getStatusCode() == 201){\n                    system.debug('EventResponseBody::' + EventResponseBody);\n                }\n\npublic static JSONGenerator GetEventInteractionJSONBody(String contactKey, String email, String eventKey){\n    JSONGenerator gen = JSON.createGenerator(true);\n    gen.writeStartObject();\n    gen.writeStringField('ContactKey', contactKey);\n    gen.writeStringField('EventDefinitionKey', eventKey);\n    gen.writeFieldName('Data');\n    gen.writeStartObject();\n    gen.writeStringField('ContactKey', contactKey);\n    gen.writeStringField('Email Address', email);\n    gen.writeEndObject();\n    gen.writeEndObject();\n    return gen;\n}  \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Cstrong\u003EI hope you get some idea about how can you triggered ApiEvent in a Journey thorugh Salesforce CRM\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n";d.body_markdown="**Scenario**: we have to send email from Marketing Cloud to the contact of an opportunity whenever opportunity records update to some specific field values like its type or stage.\n\n## Setup\nYou should have connected salesforce CRM with marketing cloud by using [marketing cloud connector](https:\u002F\u002Ftrailhead.salesforce.com\u002Fen\u002Fcontent\u002Flearn\u002Fmodules\u002Fmarketing-cloud-connect).\n\n# Process !\nWe will create a trigger in sales cloud so whenever opportunity update our trigger will run and class our trigger handeler class in which we have write code to hit marketing cloud api to trigger event in marketing cloud.\n[Download Postman Collection](https:\u002F\u002Fgithub.com\u002Fshivamkapasia0\u002Fblogs\u002Fblob\u002Fmain\u002FEvent-Interaction%20SC-MC.postman_collection.json)\n\n### In Marketing Cloud\n\n - [Create a Marketing CLoud App](https:\u002F\u002Fdeveloper.salesforce.com\u002Fdocs\u002Fatlas.en-us.noversion.mc-app-development.meta\u002Fmc-app-development\u002Fcreate-a-mc-app.htm) for Client Secret, Client Id, Client Secret, Auth URL.\n - Go to journey builder and select **[Api Event](https:\u002F\u002Fdeveloper.salesforce.com\u002Fdocs\u002Fatlas.en-us.noversion.mc-apis.meta\u002Fmc-apis\u002Fhow-to-fire-an-event.htm)** as a starting source and configure it by choosing any Data Extension which will be used to store information which we will sent through api from sales cloud and we can use this information to send email in journey builder.\n - You can add as fields as per your choice but for this case we only need email as a primary key and ContactKey for contact Id, By using ContactKey we can query data from AmpScript like below which will be used in our email template:\n \n```\nThis Code will be used in our email template that will be sent by journey to contact's email\n%%[       \n\u002F* ContactKey will be Contact Id from Sales Cloud *\u002F\nSET @ContactId= AttributeValue(\"ContactKey\") \nIF Not Empty(@ContactId) THEN\n\u002F* Querying Contact Object by using Id as a filter *\u002F\nSET @subscriber = RetrieveSalesforceObjects(\"Contact\", \"Phone, LastName, Email\", \"Id\", \"=\", @ContactId )\n      SET @subscriberPhone = Field( Row(@subscriber, 1), \"Phone\")\n      SET @subscriberEmail = Field( Row(@subscriber, 1), \"Email\")\n      SET @subscriberLastName = Field( Row(@subscriber, 1), \"LastName\")\nENDIF\n]%%\n\u002F\u002F Displaying attributes in HTML.\n\u003Cb\u003ELast Name :\u003C\u002Fb\u003E %%=v(@subscriberLastName)==%%\n\u003Cb\u003EEmail :\u003C\u002Fb\u003E %%=v(@subscriberEmail)==%%\n```\n### In Sales Cloud\n - write trigger on any object we are using opportunity in this case so we will be using trigger on opportunity object.\n```\ntrigger OpportunityTrigger on opportunity(after insert, after update) {\n    Set\u003CID\u003E contactIdSet = new Set\u003CID\u003E();\n    for(opportunity oppObj: Trigger.New){\n        if(oppObj.stagename  == 'Closed Won' && String.isNotEmpty(oppObj.contactId)){\n            contactIdSet.add(oppObj.contactId);\n        }\n    }\n   \u002F\u002F we will send email to multiple contacts that's why sending multiple contacts id's\n    if(contactIdSet.size() \u003E 0){ \n        MarketingCloudApiHandelerClass.TriggerEventFunction(contactIdSet);\n    }\n}\n```\n- First we need access token to trigger the event in marketing cloud for this you need client id, secret id, account id and auth url which you can get from your package in marketing cloud, you can first try with postman\n**Here is code snippet in cURL for Access Token:**\n```\ncurl --location --request POST 'your_auth_URL\u002Fv2\u002Ftoken' \\\n\n--header 'Content-Type: application\u002Fjson' \\\n\n--data-raw '{\n\n\"grant_type\": \"client_credentials\",\n\n\"client_id\": \"your_client_id\",\n\n\"client_secret\": \"your_client_secret\",\n\n\"account_id\": \"your_account_id\"\n\n}'\n```\n**Apex Code Snippet:**\n```\npublic class MarketingCloudApiHandelerClass {\n    \n    @Future(callout=true)\n    public static void TriggerEventFunction(Set\u003CID\u003E contactIdSet){\n        String clientId = 'your_client_id';\n        String clientSecret = 'your_client_secret';\n        String accountID = 'your_client_id';\n        String eventKey = 'your_API_event_key';\n        String jsonBody = GetAccessTokenJsonBody(clientId, clientSecret, accountID).getAsString(); \n        String authURL = 'your_auth_URL';\n        String accessToken;\n        Http h = new Http();\n        HttpRequest req = new HttpRequest();\n        req.setEndpoint(authURL);\n        req.setHeader('Content-Type', 'application\u002Fjson');\n        req.setMethod('POST');\n        req.setBody(jsonBody);\n        \n        HttpResponse res = h.send(req);\n        String responseBody = res.getBody();\n        Map\u003CString, Object\u003E result = (Map\u003CString, Object\u003E)JSON.deserializeUntyped(responseBody);\n        \n        if(res.getStatusCode() == 200){\n            accessToken = 'Bearer '+result.get('access_token').toString();\n            }\n       }\n       \n  public static JSONGenerator GetAccessTokenJsonBody(String clientID, String clientSecret, String accountID){\n    JSONGenerator gen = JSON.createGenerator(true);\n    gen.writeStartObject();\n    gen.writeStringField('grant_type', 'client_credentials');\n    gen.writeStringField('client_id', clientID);\n    gen.writeStringField('client_secret', clientSecret);\n    gen.writeStringField('account_id', accountID);\n    gen.writeEndObject();\n    return gen;\n}\n```\n**For Event Interaction\u002FTrigger**\n**cURL Code Snippet:**\n**Note:**\n*ConatctKey will be contact Id and Email Address will be contact's email on which you will be sending email thorugh journey, journey will used this email as reciepnts email and contact id as primary key and we will be using this to query salesforce records thorugh ampScript.*\n```\ncurl --location --request POST 'your_rest_url_from_package\u002Finteraction\u002Fv1\u002Fevents' \\\n--header 'Content-Type: application\u002Fjson' \\\n--header 'Authorization: Bearer access_token_here' \\\n--data-raw '{\n    \"ContactKey\" : \"0031700001YUeUZBB1\",\n    \"EventDefinitionKey\" : \"your_APIEvent_Key,\n    \"Data\": {\n        \"ContactKey\" : \"0031700001YUeUZBB1\",\n        \"Email Address\":\"kapasiashivam007@gmail.com\"\n    }\n}'\n```\n**Apex Code Snippet:**\n```\n String EventJsonBody = GetEventInteractionJSONBody(conObj.Id, conObj.Email, eventKey).getAsString();  \n                Http eventHttp = new Http();\n                HttpRequest eventReq = new HttpRequest();\n                eventReq.setEndpoint(baseEventURL);\n                eventReq.setHeader('Content-Type', 'application\u002Fjson');\n                eventReq.setHeader('Authorization', accessToken);\n                eventReq.setMethod('POST');\n                eventReq.setBody(EventJsonBody);\n                \n                HttpResponse eventRes = eventHttp.send(eventReq);\n                String EventResponseBody = eventRes.getBody();\n                Map\u003CString, Object\u003E EventResponseResult = (Map\u003CString, Object\u003E)JSON.deserializeUntyped(EventResponseBody);\n                if(eventRes.getStatusCode() == 201){\n                    system.debug('EventResponseBody::' + EventResponseBody);\n                }\n\npublic static JSONGenerator GetEventInteractionJSONBody(String contactKey, String email, String eventKey){\n    JSONGenerator gen = JSON.createGenerator(true);\n    gen.writeStartObject();\n    gen.writeStringField('ContactKey', contactKey);\n    gen.writeStringField('EventDefinitionKey', eventKey);\n    gen.writeFieldName('Data');\n    gen.writeStartObject();\n    gen.writeStringField('ContactKey', contactKey);\n    gen.writeStringField('Email Address', email);\n    gen.writeEndObject();\n    gen.writeEndObject();\n    return gen;\n}  \n```\n**I hope you get some idea about how can you triggered ApiEvent in a Journey thorugh Salesforce CRM**\n\n";d.user={name:c,username:c,twitter_username:a,github_username:c,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--hVjfr9E9--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F647796\u002Fb6260ff0-26ce-485c-bd32-481f645226a4.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xEAOV8vH--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F647796\u002Fb6260ff0-26ce-485c-bd32-481f645226a4.jpeg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:d}},mutations:[["SET_CURRENT_ARTICLE",d]]}}(null,"2021-08-07T07:08:04Z","shivamkapasia0",{},"https:\u002F\u002Fdev.to\u002Fshivamkapasia0\u002Ftrigger-journey-in-marketing-cloud-from-sales-cloud-on-record-update-35nj",2)));