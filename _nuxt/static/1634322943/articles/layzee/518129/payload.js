__NUXT_JSONP__("/articles/layzee/518129", (function(a,b,c,d,e,f,g,h){b.type_of="article";b.id=518129;b.title="How you can help Angular in 2020";b.description="2020 is the year you can help the Angular ecosystem thrive.";b.readable_publish_date="Nov 18 '20";b.slug="how-you-can-help-angular-in-2020-4535";b.path="\u002Fthis-is-angular\u002Fhow-you-can-help-angular-in-2020-4535";b.url=c;b.comments_count=d;b.public_reactions_count=e;b.collection_id=f;b.published_timestamp=a;b.positive_reactions_count=e;b.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---rKwpM1v--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fz87igqgs0owbesykjz2i.jpg";b.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7NAW4RJ8--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fz87igqgs0owbesykjz2i.jpg";b.canonical_url=c;b.created_at=a;b.edited_at="2020-11-18T10:40:35Z";b.crossposted_at=f;b.published_at=a;b.last_comment_at="2020-11-19T14:51:43Z";b.reading_time_minutes=d;b.tag_list="angular, ivy, community";b.tags=["angular","ivy","community"];b.body_html="\u003Cp\u003E\u003Cem\u003ECover photo by \u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fphotos\u002Fbq31L0jQAjU\"\u003Ebamagal\u003C\u002Fa\u003E on Unsplash.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EOriginal publication date: 2020-01-20.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhat are the toughest challenges for Angular in 2020?\u003C\u002Fp\u003E\n\n\u003Cp\u003EIvy has taken up most of the Angular team's time for the past few years. There's a lot of catching up to do in 2020.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe're going to look at what is going on in the ecosystem and how you can help the Angular team solve issues so that they can focus on bringing in new features to Angular versions 10 and 11.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EUpdate 2020-11-18\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ERxJS 7 is not released as of November 2020.\u003C\u002Fli\u003E\n\u003Cli\u003EBazel has been detached from Angular.\u003C\u002Fli\u003E\n\u003Cli\u003ETSLint is end-of-life as of December 1st 2020.\u003C\u002Fli\u003E\n\u003Cli\u003EThe future of Protractor is \u003Ca href=\"https:\u002F\u002Fangular.io\u002Fguide\u002Froadmap#update-our-e2e-testing-strategy\"\u003Ebeing questioned in the Angular roadmap\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003EAugury still only has partial support for Angular Ivy, that is many features are broken.\u003C\u002Fli\u003E\n\u003Cli\u003EThe strategy for Angular Ivy libraries has changed according to \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues\u002F38366\"\u003Ethis RFC\u003C\u002Fa\u003E and is currently in active development \u003Ca href=\"https:\u002F\u002Fangular.io\u002Fguide\u002Froadmap#angular-libraries-use-ivy\"\u003Eaccording to the Angular roadmap\u003C\u002Fa\u003E. This is a significant change from what is described in this article.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"rxjs\" href=\"#rxjs\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  RxJS\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003E2020 is the year we will see RxJS version 7. It deprecates features that will be removed in version 8 and it introduces breaking changes based on features that were deprecated in version 6.x. We might even see RxJS version 8 in 2020.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe official Angular packages sets the bar for RxJS compatibility. Angular version 9 will most likely be released with RxJS version 6.5 support.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis can prove a challenge to a framework so tightly coupled with RxJS. Some of us clearly remember the upgrade from RxJS versions 5.x to 6.0.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESince RxJS version 7.0 and 8.0 will both contain breaking changes, Angular can only upgrade compatibility in its own major versions. This means, that the earliest we will see RxJS version 7.x support will be Angular version 10.0. Likewise, RxJS version 8.x will at the earliest be supported in Angular version 11.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELuckily, Angular CLI schematics have made it easy to add migrations to support upgrading despite breaking changes.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Write articles to educate on the upcoming changes in RxJS 7.x and 8.x.\u003C\u002Fli\u003E\n\u003Cli\u003E \u003Ca href=\"https:\u002F\u002Fdzhavat.github.io\u002F2020\u002F01\u002F03\u002Fgetting-started-with-contributing-to-rxjs-docs.html\"\u003EContribute to the RxJS documentation\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E Help build \u003Ccode\u003Eng update\u003C\u002Fcode\u003E schematics for RxJS versions 7.0 and 8.0.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"bazel\" href=\"#bazel\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Bazel\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EThe plan is to release support for Bazel version 2.1 as an opt-in option for Angular version 9. Eventually, Bazel will become the default build automation tool for the Angular CLI.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Opt-in to Bazel in your Angular version 9 project by running \u003Ccode\u003Eng add @angular\u002Fbazel\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E Create new Angular version 9 projects using Bazel by first following \u003Ca href=\"https:\u002F\u002Fdocs.bazel.build\u002Fversions\u002F2.0.0\u002Finstall.html\"\u003Ethe Bazel installation guide\u003C\u002Fa\u003E, then using this command: \u003Ccode\u003Enpx -p @angular\u002Fbazel ng new --collection=@angular\u002Fbazel my-angular-workspace\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E File issues on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues\"\u003EAngular\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbazelbuild\u002Fbazel\u002Fissues\"\u003EBazel\u003C\u002Fa\u003E's GitHub repositories.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EAdding \u003Ccode\u003E@angular\u002Fbazel\u003C\u002Fcode\u003E converts our \u003Ccode\u003Eangular.json\u003C\u002Fcode\u003E to use the \u003Ccode\u003E@angular\u002Fbazel:build\u003C\u002Fcode\u003E Angular CLI builder and generates setup and configuration files to support dependencies like RxJS and Protractor.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"tslint\" href=\"#tslint\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  TSLint\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpalantir\u002Ftslint\u002Fissues\u002F4534#issue-413722441\"\u003ETSLint is now deprecated\u003C\u002Fa\u003E and will entirely stop maintenance at the end of 2020.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe official Angular CLI lint builder and the Codelyzer lint rules both depend on TSLint. The Angular team \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular-cli\u002Fissues\u002F13732#issuecomment-573149865\"\u003Eplans to replace TSLint with ESLint in Angular version 10\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Refer to \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular-cli\u002Fissues\u002F13732#issuecomment-575796158\"\u003Ethis issue update from Minko Gechev\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E Help James Henry create \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular-eslint\u002Fangular-eslint\u002Ftree\u002Fmaster\u002Fpackages\u002Fbuilder\"\u003Ean Angular CLI builder for ESLint\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular-eslint\u002Fangular-eslint#rules-list\"\u003Emigrate Codelyzer rules to ESLint\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"protractor\" href=\"#protractor\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Protractor\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EThe official end-to-end testing framework that comes out-of-the-box with Angular is not in a good place. Protractor has barely been touched in 2019 despite a growing number of issues (around 200 open issues from 2019 alone) and breaking changes in the Selenium WebDriver APIs it wraps.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe latest stable version (5.4.2) of Protractor was in December 2018. There was a very \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fprotractor\u002Fissues\u002F5290#issuecomment-521320499\"\u003Eunofficial version 6 release\u003C\u002Fa\u003E in March 2019 which has not yet been tagged as \u003Ccode\u003Elatest\u003C\u002Fcode\u003E on NPM.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFirst of all, the upgrade requires us to refactor all of our tests to use \u003Ccode\u003Easync-await\u003C\u002Fcode\u003E instead of synchronous steps because of changes in Selenium WebDriver. Secondly, some features are broken and documentation and types are partially missing or out of date.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fprotractor\u002Fissues\u002F5209#issuecomment-523182031\"\u003EThe Angular team has taken ownership of Protractor\u003C\u002Fa\u003E, but they have probably been too busy with Ivy to deal with Protractor and Selenium.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Protractor needs \u003Ccode\u003Eng update\u003C\u002Fcode\u003E schematics to migrate tests from Protractor 5.x to 6.0 and make them use \u003Ccode\u003Easync-await\u003C\u002Fcode\u003E when interacting with the browser and querying the DOM.\u003C\u002Fli\u003E\n\u003Cli\u003E Protractor needs fully updated types from \u003Ccode\u003Eselenium-webdriver\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E Protractor needs to update its documentation to reflect the API changes and general flow of tests.\u003C\u002Fli\u003E\n\u003Cli\u003E \u003Ccode\u003Ewebdriver-manager\u003C\u002Fcode\u003E (part of Protractor) needs ironing out of bugs and updates to its documentation.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"augury\" href=\"#augury\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Augury\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EAugury is the official in-browser developer tool for Angular, maintained by Rangle.io. While it has been keeping up with bugfixes, it hasn't seen any noteworthy feature additions since its initial version.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe 2020 challenge for Augury is that it \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury#supported-version\"\u003Edoesn't yet have a plan to support Ivy\u003C\u002Fa\u003E, rendering it broken for new and well-maintained projects that use Ivy.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIvy removes \u003Ccode\u003Eng.probe\u003C\u002Fcode\u003E, but introduces a new set of runtime debugging APIs.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Ask the Angular team how you can help \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues\u002F30737#issuecomment-498284237\"\u003Edocument the new debugging APIs\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury\"\u003EFork Augury\u003C\u002Fa\u003E, migrate to the Ivy debugging APIs and submit a pull request.\u003C\u002Fli\u003E\n\u003Cli\u003E File \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury\u002Fissues\"\u003Eissues to the Augury GitHub repository\u003C\u002Fa\u003E suggesting new use cases.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"the-view-enginetoivy-transition\" href=\"#the-view-enginetoivy-transition\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The View Engine-to-Ivy transition\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EThe release of Angular version 9 officially marks the start of the transition plan from View Engine to Ivy.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn Angular version 9, the recommendation is to switch applications to Ivy, but keep publishing View Engine libraries.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn Angular version 10, the recommendation is to publish AOT-compiled Ivy libraries.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn Angular version 11, the View Engine will be removed from applications, but the Angular compatibility compiler will make sure that Ivy applications can still work with View Engine libraries.\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002FLayZeeDK\u002F61caba93df1ec1a0788c94a973c8dfac.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\u003Cbr\u003E\n\u003Cem\u003ETable 1. The View Engine-to-Ivy transition plan. \u003Ca href=\"https:\u002F\u002Fgist.github.com\u002FLayZeeDK\u002F61caba93df1ec1a0788c94a973c8dfac\"\u003EOpen in new tab\u003C\u002Fa\u003E.\u003C\u002Fem\u003E\n\n\u003Cp\u003ETable 1 lists the Angular team's recommendations for the different stages of the transition plan.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"how-can-i-help\" href=\"#how-can-i-help\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  How can I help?\n\u003C\u002Fh2\u003E\n\n\u003Col\u003E\n\u003Cli\u003E Add Angular libraries to \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fangular\u002Fngcc-validation\"\u003Ethe Angular Ivy library compatibility validation project\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E Help resolve issues for libraries that fail the Ivy compatibility validation by submitting issues or better yet pull requests to their GitHub repositories.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EAngular Ivy is a huge effort. With the first stable release in Angular version 9, the Angular team is still left with quite a few challenges to solve in 2020.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this article, we looked at how different technology challenges affect the Angular ecosystem in 2020. I suggested how you can contribute to the Angular ecosystem by helping out with each of these topics:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ERxJS\u003C\u002Fli\u003E\n\u003Cli\u003EBazel\u003C\u002Fli\u003E\n\u003Cli\u003ETSLint\u003C\u002Fli\u003E\n\u003Cli\u003EProtractor\u003C\u002Fli\u003E\n\u003Cli\u003EAugury\u003C\u002Fli\u003E\n\u003Cli\u003EThe View Engine-to-Ivy transition plan\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EHappy contributing!\u003C\u002Fp\u003E\n\n";b.body_markdown="---\ntitle: How you can help Angular in 2020\npublished: true\ndescription: 2020 is the year you can help the Angular ecosystem thrive.\ntags: angular, ivy, community\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fz87igqgs0owbesykjz2i.jpg\n---\n\n*Cover photo by [bamagal](https:\u002F\u002Funsplash.com\u002Fphotos\u002Fbq31L0jQAjU) on Unsplash.*\n\n*Original publication date: 2020-01-20.*\n\nWhat are the toughest challenges for Angular in 2020?\n\nIvy has taken up most of the Angular team's time for the past few years. There's a lot of catching up to do in 2020.\n\nWe're going to look at what is going on in the ecosystem and how you can help the Angular team solve issues so that they can focus on bringing in new features to Angular versions 10 and 11.\n\n**Update 2020-11-18**\n\n* RxJS 7 is not released as of November 2020.\n* Bazel has been detached from Angular.\n* TSLint is end-of-life as of December 1st 2020.\n* The future of Protractor is [being questioned in the Angular roadmap](https:\u002F\u002Fangular.io\u002Fguide\u002Froadmap#update-our-e2e-testing-strategy).\n* Augury still only has partial support for Angular Ivy, that is many features are broken.\n* The strategy for Angular Ivy libraries has changed according to [this RFC](https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues\u002F38366) and is currently in active development [according to the Angular roadmap](https:\u002F\u002Fangular.io\u002Fguide\u002Froadmap#angular-libraries-use-ivy). This is a significant change from what is described in this article.\n\n# RxJS\n2020 is the year we will see RxJS version 7. It deprecates features that will be removed in version 8 and it introduces breaking changes based on features that were deprecated in version 6.x. We might even see RxJS version 8 in 2020.\n\nThe official Angular packages sets the bar for RxJS compatibility. Angular version 9 will most likely be released with RxJS version 6.5 support.\n\nThis can prove a challenge to a framework so tightly coupled with RxJS. Some of us clearly remember the upgrade from RxJS versions 5.x to 6.0.\n\nSince RxJS version 7.0 and 8.0 will both contain breaking changes, Angular can only upgrade compatibility in its own major versions. This means, that the earliest we will see RxJS version 7.x support will be Angular version 10.0. Likewise, RxJS version 8.x will at the earliest be supported in Angular version 11.\n\nLuckily, Angular CLI schematics have made it easy to add migrations to support upgrading despite breaking changes.\n\n## How can I help?\n1.  Write articles to educate on the upcoming changes in RxJS 7.x and 8.x.\n2.  [Contribute to the RxJS documentation](https:\u002F\u002Fdzhavat.github.io\u002F2020\u002F01\u002F03\u002Fgetting-started-with-contributing-to-rxjs-docs.html).\n3.  Help build `ng update` schematics for RxJS versions 7.0 and 8.0.\n\n# Bazel\nThe plan is to release support for Bazel version 2.1 as an opt-in option for Angular version 9. Eventually, Bazel will become the default build automation tool for the Angular CLI.\n\n## How can I help?\n1.  Opt-in to Bazel in your Angular version 9 project by running `ng add @angular\u002Fbazel`.\n2.  Create new Angular version 9 projects using Bazel by first following [the Bazel installation guide](https:\u002F\u002Fdocs.bazel.build\u002Fversions\u002F2.0.0\u002Finstall.html), then using this command: `npx -p @angular\u002Fbazel ng new --collection=@angular\u002Fbazel my-angular-workspace`.\n3.  File issues on [Angular](https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues) and [Bazel](https:\u002F\u002Fgithub.com\u002Fbazelbuild\u002Fbazel\u002Fissues)'s GitHub repositories.\n\nAdding `@angular\u002Fbazel` converts our `angular.json` to use the `@angular\u002Fbazel:build` Angular CLI builder and generates setup and configuration files to support dependencies like RxJS and Protractor.\n\n# TSLint\n[TSLint is now deprecated](https:\u002F\u002Fgithub.com\u002Fpalantir\u002Ftslint\u002Fissues\u002F4534#issue-413722441) and will entirely stop maintenance at the end of 2020.\n\nThe official Angular CLI lint builder and the Codelyzer lint rules both depend on TSLint. The Angular team [plans to replace TSLint with ESLint in Angular version 10](https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular-cli\u002Fissues\u002F13732#issuecomment-573149865).\n\n## How can I help?\n1.  Refer to [this issue update from Minko Gechev](https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular-cli\u002Fissues\u002F13732#issuecomment-575796158).\n2.  Help James Henry create [an Angular CLI builder for ESLint](https:\u002F\u002Fgithub.com\u002Fangular-eslint\u002Fangular-eslint\u002Ftree\u002Fmaster\u002Fpackages\u002Fbuilder) and [migrate Codelyzer rules to ESLint](https:\u002F\u002Fgithub.com\u002Fangular-eslint\u002Fangular-eslint#rules-list).\n\n# Protractor\nThe official end-to-end testing framework that comes out-of-the-box with Angular is not in a good place. Protractor has barely been touched in 2019 despite a growing number of issues (around 200 open issues from 2019 alone) and breaking changes in the Selenium WebDriver APIs it wraps.\n\nThe latest stable version (5.4.2) of Protractor was in December 2018. There was a very [unofficial version 6 release](https:\u002F\u002Fgithub.com\u002Fangular\u002Fprotractor\u002Fissues\u002F5290#issuecomment-521320499) in March 2019 which has not yet been tagged as `latest` on NPM.\n\nFirst of all, the upgrade requires us to refactor all of our tests to use `async-await` instead of synchronous steps because of changes in Selenium WebDriver. Secondly, some features are broken and documentation and types are partially missing or out of date.\n\n[The Angular team has taken ownership of Protractor](https:\u002F\u002Fgithub.com\u002Fangular\u002Fprotractor\u002Fissues\u002F5209#issuecomment-523182031), but they have probably been too busy with Ivy to deal with Protractor and Selenium.\n\n## How can I help?\n1.  Protractor needs `ng update` schematics to migrate tests from Protractor 5.x to 6.0 and make them use `async-await` when interacting with the browser and querying the DOM.\n2.  Protractor needs fully updated types from `selenium-webdriver`.\n3.  Protractor needs to update its documentation to reflect the API changes and general flow of tests.\n4.  `webdriver-manager` (part of Protractor) needs ironing out of bugs and updates to its documentation.\n\n# Augury\nAugury is the official in-browser developer tool for Angular, maintained by Rangle.io. While it has been keeping up with bugfixes, it hasn't seen any noteworthy feature additions since its initial version.\n\nThe 2020 challenge for Augury is that it [doesn't yet have a plan to support Ivy](https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury#supported-version), rendering it broken for new and well-maintained projects that use Ivy.\n\nIvy removes `ng.probe`, but introduces a new set of runtime debugging APIs.\n\n## How can I help?\n1.  Ask the Angular team how you can help [document the new debugging APIs](https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fissues\u002F30737#issuecomment-498284237).\n2.  [Fork Augury](https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury), migrate to the Ivy debugging APIs and submit a pull request.\n3.  File [issues to the Augury GitHub repository](https:\u002F\u002Fgithub.com\u002Frangle\u002Faugury\u002Fissues) suggesting new use cases.\n\n# The View Engine-to-Ivy transition\n\nThe release of Angular version 9 officially marks the start of the transition plan from View Engine to Ivy.\n\nIn Angular version 9, the recommendation is to switch applications to Ivy, but keep publishing View Engine libraries.\n\nIn Angular version 10, the recommendation is to publish AOT-compiled Ivy libraries.\n\nIn Angular version 11, the View Engine will be removed from applications, but the Angular compatibility compiler will make sure that Ivy applications can still work with View Engine libraries.\n\n{% gist https:\u002F\u002Fgist.github.com\u002FLayZeeDK\u002F61caba93df1ec1a0788c94a973c8dfac %}\n_Table 1. The View Engine-to-Ivy transition plan. [Open in new tab](https:\u002F\u002Fgist.github.com\u002FLayZeeDK\u002F61caba93df1ec1a0788c94a973c8dfac)._\n\nTable 1 lists the Angular team's recommendations for the different stages of the transition plan.\n\n## How can I help?\n1.  Add Angular libraries to [the Angular Ivy library compatibility validation project](https:\u002F\u002Fgithub.com\u002Fangular\u002Fngcc-validation).\n2.  Help resolve issues for libraries that fail the Ivy compatibility validation by submitting issues or better yet pull requests to their GitHub repositories.\n\n# Conclusion\nAngular Ivy is a huge effort. With the first stable release in Angular version 9, the Angular team is still left with quite a few challenges to solve in 2020.\n\nIn this article, we looked at how different technology challenges affect the Angular ecosystem in 2020. I suggested how you can contribute to the Angular ecosystem by helping out with each of these topics:\n\n* RxJS\n* Bazel\n* TSLint\n* Protractor\n* Augury\n* The View Engine-to-Ivy transition plan\n\nHappy contributing!";b.user={name:"Lars Gyrup Brink Nielsen",username:"layzee",twitter_username:g,github_username:g,website_url:"https:\u002F\u002Fmvp.microsoft.com\u002Fen-us\u002FPublicProfile\u002F5003831?fullName=Lars%20Gyrup%20Brink%20Nielsen",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--caMQZZHg--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F89994\u002F41ad1b6f-3d5a-4c73-894e-f7b0da8862c1.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--FW_WuaaG--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F89994\u002F41ad1b6f-3d5a-4c73-894e-f7b0da8862c1.jpeg"};b.organization={name:"This is Angular",username:h,slug:h,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--oymg7my---\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F3316\u002Fb77c881d-527b-4295-9e3c-3aa9072a4671.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--I1dYsxET--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F3316\u002Fb77c881d-527b-4295-9e3c-3aa9072a4671.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:b}},mutations:[["SET_CURRENT_ARTICLE",b]]}}("2020-11-18T10:34:08Z",{},"https:\u002F\u002Fdev.to\u002Fthis-is-angular\u002Fhow-you-can-help-angular-in-2020-4535",5,20,null,"LayZeeDK","this-is-angular")));