window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:851647,title:"Distributing Challenge: On Building Highly Engaged Teams",description:"How many developers do you know who have left their job because either 1) the work is no longer challenging \u002F there is no career growth, or 2) the work is too challenging, and they have no support? Challenge plays an essential role in our happiness. ",readable_publish_date:"Oct 5",slug:"distributing-challenge-on-building-highly-engaged-teams-2d3c",path:"\u002Ftheworstdev\u002Fdistributing-challenge-on-building-highly-engaged-teams-2d3c",url:"https:\u002F\u002Fdev.to\u002Ftheworstdev\u002Fdistributing-challenge-on-building-highly-engaged-teams-2d3c",comments_count:2,public_reactions_count:b,collection_id:a,published_timestamp:c,positive_reactions_count:b,cover_image:a,social_image:"https:\u002F\u002Fdev.to\u002Fsocial_previews\u002Farticle\u002F851647.png",canonical_url:"https:\u002F\u002Ftheworst.dev\u002Fpyramid-of-challenge",created_at:"2021-10-05T01:40:11Z",edited_at:"2021-10-05T18:57:53Z",crossposted_at:a,published_at:c,last_comment_at:"2021-10-14T02:32:11Z",reading_time_minutes:6,tag_list:"management, teambuilding, leadership",tags:["management","teambuilding","leadership"],body_html:"\u003Cp\u003EI've been thinking a lot over the last few years about how vital the distribution of challenge is to a team's success.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn fact, it's one of the primary considerations I have when managing.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHow many developers do you know who have left their job because either 1) the work is no longer challenging \u002F there is no career growth, or 2) the work is too challenging, and they have no support?\u003C\u002Fp\u003E\n\n\u003Cp\u003EChallenge plays an essential role in our happiness.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHowever, making sure that everyone on a team, in an org, or in a company is adequately challenged is a complicated task.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn response, I've developed a model called the \u003Ccode\u003EPyramid of Challenge\u003C\u002Fcode\u003E that I use whenever I am managing others.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-pryamid-of-challenge\" href=\"#the-pryamid-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  The Pryamid of Challenge\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe model is composed of a triangle which represents a group's entire workload. The \u003Ccode\u003Ex axis\u003C\u002Fcode\u003E represents the amount of work available and the \u003Ccode\u003Ey axis\u003C\u002Fcode\u003E represents the complexity of the work available. Together they represent that as work increases in complexity, it decreases in availablity.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7LjkxzoQ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Foossjx96rc28e64x0mm4.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7LjkxzoQ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Foossjx96rc28e64x0mm4.png\" alt='an illustration titled \"Pyramid of Challenge\" shows a triangle to the left with a label at the top that says \"architectural and systems development challenges\" another label half way up the triangle that says \"application development challenges\" and a label near the bottom of the triangle that says \"feature development challenges\"' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EEnsuring everyone is challenged is about ensuring everyone on the team has the correct workload.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"balancing-the-distribution-of-challenge\" href=\"#balancing-the-distribution-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Balancing the Distribution of Challenge\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn order to have a balanced distribution of challenge, you need a team makeup that doesn't leave any gaps in the pyramid or put too many people into one part of the pyramid, creating a \u003Ccode\u003Echallenge gap\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EA challenge gap is an area of responsibility for a team that either doesn't have anyone challenged by that work, or the work is too challenging for anyone on the team.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--GuB8pr87--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ftgfur95qalt376awgcsp.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--GuB8pr87--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ftgfur95qalt376awgcsp.png\" alt='an illustration titled \"Balanced Distribution of Challenge\" that shows a triangle with three labels, at the top is \"staff \u002F principle engineers\" the middle label says \"sr \u002F mid developers\" and the lower label says \"mid \u002F jr developers\". inside the triangle are people icons with them distributed with the most at the bottom, some in the middle, and only one at the top' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen you compare that previous illustration to most teams today, it's starkly different. So is this a practical model?\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf we apply the model to the responsibilities of a team tasked with building an application, you can see that it holds up. As the work decreases in complexity it increases in availability.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ikwgTgQu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi72wyi45iy7kg3pkzdfm.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ikwgTgQu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi72wyi45iy7kg3pkzdfm.png\" alt='an illustration titled \"Frontend Team Pyramid of Challenge\" that has a triangle to the left and three labels on the right. The top label reads: \"Chooses technologies, organizes the project, documents best practices and expected workflows. Manages project infrastructure.\" the middle label reads: \"Builds out the application based on the building blocks provided. Creates higher level abstractions to improve DX for other developers on the team. Manages project health.\" and the bottom label reads \"Builds the atomic pieces of the application and brings them together into features.\"' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EYou only need 1 or 2 people to architect an application, but you'll need many more to build it.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ESo why is this important?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt's important because if we don't provide people with the right level of responsibilities so that they are properly challenged it could grind your team's productivity to a halt.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith a model to work from, let's look at some of the most common team makeups you'll come across and discuss some of the challenge gaps they face.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EA challenge gap is an area of responsibility for a team that either doesn't have anyone challenged by that work, or the work is too challenging for anyone on the team.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"analyzing-common-distributions-of-challenge\" href=\"#analyzing-common-distributions-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Analyzing Common Distributions of Challenge\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAs we look at these distributions, it's important to remember that teams will come in all different sizes and makeups, and some teams that fit into one of these common distributions might be really high performing, happy, and engaged.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt's also very likely that teams will more accurately reflect a combination of these distributions. This model is meant as a guide to help you create a holistic view of your teams makeup according to their experience level and the work available for the team. \u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"top-distribution-of-challenge\" href=\"#top-distribution-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Top Distribution of Challenge\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELet's start with the most common distribution of challenge, the top distribution. If a team has too many senior members, it suffers from a challenge gap at the bottom of the pyramid.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--lOsazakU--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy7x4fwjl7dftabx56ra7.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--lOsazakU--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy7x4fwjl7dftabx56ra7.png\" alt='illustration titled \"Top Distribution of Challenge\" that shows many people bunched together at the top of a triangle with none at the bottom, representing a gap in challenge being filled.' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ESenior developers are forced to do the less complex and more frequent tasks even though it's not challenging, essentially leaving them toiling. These teams could suffer from overly complex software, inability to reach consensus, and high turnover as team members leave to seek new challenges.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"bottom-distribution-of-challenge\" href=\"#bottom-distribution-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Bottom Distribution of Challenge\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAnother makeup we see often is bottom-distributed teams or a team without enough seniorty or leadership. These teams suffer from a challenge gap at the top of the pyramid.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--RuP61hX3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Frsiydgy2sr0w2zerzilh.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--RuP61hX3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Frsiydgy2sr0w2zerzilh.png\" alt='illustration titled \"Bottom Distribution of Challenge\" that shows many people bunched together at the bottom of a triangle with none at the top, representing a gap in challenges covered.' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese teams face a situation where they are overchallenged by not having the skills\u002Fexperience needed to meet their responsibilities. Team members are likely to suffer from burnout and software could be brittle without proper guidance from more experienced developers.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"opposing-distribution-of-challenge\" href=\"#opposing-distribution-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Opposing Distribution of Challenge\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAnother makeup you might see is the opposing distribution of challenges. These teams tend to have one or two very senior people and then more junior developers.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese teams face a challenge gap at the center of the pyramid.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JpDdFPHd--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fkpszyqvb64wlpm8spirr.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JpDdFPHd--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fkpszyqvb64wlpm8spirr.png\" alt='illustration titled \"Opposing Distribution of Challenge\" that shows people at the top and bottom of the pyramid with no one in the middle, representing a gap in challenges covered.' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith an opposing distribution of challenges, senior developers will be forced to work on all non-challenging tasks that more junior developers aren't capable of handling yet, while also tyring to mentoring them.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis will greatly impact their ability to handle their own responsibilities while other responsibilities get dropped or mishandled.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe less experienced developers won't get the support they need and will often be tasked with work outside their current skillset.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"centered-distribution-of-challenge\" href=\"#centered-distribution-of-challenge\"\u003E\n  \u003C\u002Fa\u003E\n  Centered Distribution of Challenge\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ELastly, we have a centered distribution of challenges. In this scenario, teams consist of mid-level developers but lack any really senior or more junior developers creating a challenge gap at each end of the pyramid.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--tZy2EF7f--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F7ku46nvikkf4tqy54czp.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--tZy2EF7f--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F7ku46nvikkf4tqy54czp.png\" alt='illustration titled \"Centered Distribution of Challenge\" that shows people gathered in the middle of the pyramid with no one at the top or bottom, representing a gap in challenges covered.' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETeams with this makeup are susceptible to infighting around responsibilities looking for work that will fit within their comfort zone. Some of the work could be too complex causing fragility in the solutions.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt's also possible for teams of this makeup to be very process heavy as team members look for ways to contribute. Some team members may try to step up and take on responsibilities that are too challenging to fill gaps and burnout.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"a-framework-for-growth\" href=\"#a-framework-for-growth\"\u003E\n  \u003C\u002Fa\u003E\n  A Framework for Growth\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAnother significant benefit I've found from using this model is that it creates a system that makes it easier to scale a team or teams as you take on more responsibility because the pyramid can be applied to any level of challenge.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_bShHA6F--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fftgm3zesspy43n4soqxw.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_bShHA6F--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fftgm3zesspy43n4soqxw.png\" alt='an illustration titled \"Scaling the Distribution of Challenge\" that shows a triangle with three labels, at the top is \"CTO\" the middle label says \"Tech Leads\" and the lower label says \"Individual Contributors\". inside the triangle are people icons with them distributed with the most at the bottom, some in the middle, and only one at the top, some of the people icons are dotted lines indicating they are spots to fill on the team, some of the people icons also have arrows by them pointing up to the next row of people indicating moving up in responsibility' loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"caveats-amp-conclusion\" href=\"#caveats-amp-conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Caveats &amp; Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhen it comes to humans we're better served by communication than models.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhile this model might help you identify potential gaps in challenge, it's more important to constantly check in with your team and make sure they are in fact happy, engaged, and challenged appropriately.\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: \"Distributing Challenge: On Building Highly Engaged Teams\"\ndescription: How many developers do you know who have left their job because either 1) the work is no longer challenging \u002F there is no career growth, or 2) the work is too challenging, and they have no support? Challenge plays an essential role in our happiness. \npublished: true\ntags: management, teambuilding, leadership\n\u002F\u002F cover_image: https:\u002F\u002Fdirect_url_to_image.jpg\ncanonical_url: https:\u002F\u002Ftheworst.dev\u002Fpyramid-of-challenge\n---\n\nI've been thinking a lot over the last few years about how vital the distribution of challenge is to a team's success.\n\nIn fact, it's one of the primary considerations I have when managing.\n\nHow many developers do you know who have left their job because either 1) the work is no longer challenging \u002F there is no career growth, or 2) the work is too challenging, and they have no support?\n\nChallenge plays an essential role in our happiness.\n\nHowever, making sure that everyone on a team, in an org, or in a company is adequately challenged is a complicated task.\n\nIn response, I've developed a model called the `Pyramid of Challenge` that I use whenever I am managing others.\n\n## The Pryamid of Challenge\n\nThe model is composed of a triangle which represents a group's entire workload. The `x axis` represents the amount of work available and the `y axis` represents the complexity of the work available. Together they represent that as work increases in complexity, it decreases in availablity.\n\n![an illustration titled \"Pyramid of Challenge\" shows a triangle to the left with a label at the top that says \"architectural and systems development challenges\" another label half way up the triangle that says \"application development challenges\" and a label near the bottom of the triangle that says \"feature development challenges\"](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Foossjx96rc28e64x0mm4.png)\n\nEnsuring everyone is challenged is about ensuring everyone on the team has the correct workload.\n\n## Balancing the Distribution of Challenge\n\nIn order to have a balanced distribution of challenge, you need a team makeup that doesn't leave any gaps in the pyramid or put too many people into one part of the pyramid, creating a `challenge gap`.\n\n\u003E A challenge gap is an area of responsibility for a team that either doesn't have anyone challenged by that work, or the work is too challenging for anyone on the team.\n\n![an illustration titled \"Balanced Distribution of Challenge\" that shows a triangle with three labels, at the top is \"staff \u002F principle engineers\" the middle label says \"sr \u002F mid developers\" and the lower label says \"mid \u002F jr developers\". inside the triangle are people icons with them distributed with the most at the bottom, some in the middle, and only one at the top](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Ftgfur95qalt376awgcsp.png)\n\nWhen you compare that previous illustration to most teams today, it's starkly different. So is this a practical model?\n\nIf we apply the model to the responsibilities of a team tasked with building an application, you can see that it holds up. As the work decreases in complexity it increases in availability.\n\n![an illustration titled \"Frontend Team Pyramid of Challenge\" that has a triangle to the left and three labels on the right. The top label reads: \"Chooses technologies, organizes the project, documents best practices and expected workflows. Manages project infrastructure.\" the middle label reads: \"Builds out the application based on the building blocks provided. Creates higher level abstractions to improve DX for other developers on the team. Manages project health.\" and the bottom label reads \"Builds the atomic pieces of the application and brings them together into features.\"](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi72wyi45iy7kg3pkzdfm.png)\n\n\u003E You only need 1 or 2 people to architect an application, but you'll need many more to build it.\n\n**So why is this important?**\n\nIt's important because if we don't provide people with the right level of responsibilities so that they are properly challenged it could grind your team's productivity to a halt.\n\nWith a model to work from, let's look at some of the most common team makeups you'll come across and discuss some of the challenge gaps they face.\n\n\u003E A challenge gap is an area of responsibility for a team that either doesn't have anyone challenged by that work, or the work is too challenging for anyone on the team.\n\n## Analyzing Common Distributions of Challenge\n\nAs we look at these distributions, it's important to remember that teams will come in all different sizes and makeups, and some teams that fit into one of these common distributions might be really high performing, happy, and engaged.\n\nIt's also very likely that teams will more accurately reflect a combination of these distributions. This model is meant as a guide to help you create a holistic view of your teams makeup according to their experience level and the work available for the team. \n\n### Top Distribution of Challenge\n\nLet's start with the most common distribution of challenge, the top distribution. If a team has too many senior members, it suffers from a challenge gap at the bottom of the pyramid.\n\n![illustration titled \"Top Distribution of Challenge\" that shows many people bunched together at the top of a triangle with none at the bottom, representing a gap in challenge being filled.](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fy7x4fwjl7dftabx56ra7.png)\n\nSenior developers are forced to do the less complex and more frequent tasks even though it's not challenging, essentially leaving them toiling. These teams could suffer from overly complex software, inability to reach consensus, and high turnover as team members leave to seek new challenges.\n\n### Bottom Distribution of Challenge\n\nAnother makeup we see often is bottom-distributed teams or a team without enough seniorty or leadership. These teams suffer from a challenge gap at the top of the pyramid.\n\n![illustration titled \"Bottom Distribution of Challenge\" that shows many people bunched together at the bottom of a triangle with none at the top, representing a gap in challenges covered.](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Frsiydgy2sr0w2zerzilh.png)\n\nThese teams face a situation where they are overchallenged by not having the skills\u002Fexperience needed to meet their responsibilities. Team members are likely to suffer from burnout and software could be brittle without proper guidance from more experienced developers.\n\n### Opposing Distribution of Challenge\n\nAnother makeup you might see is the opposing distribution of challenges. These teams tend to have one or two very senior people and then more junior developers.\n\nThese teams face a challenge gap at the center of the pyramid.\n\n![illustration titled \"Opposing Distribution of Challenge\" that shows people at the top and bottom of the pyramid with no one in the middle, representing a gap in challenges covered.](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fkpszyqvb64wlpm8spirr.png)\n\nWith an opposing distribution of challenges, senior developers will be forced to work on all non-challenging tasks that more junior developers aren't capable of handling yet, while also tyring to mentoring them.\n\nThis will greatly impact their ability to handle their own responsibilities while other responsibilities get dropped or mishandled.\n\nThe less experienced developers won't get the support they need and will often be tasked with work outside their current skillset.\n\n### Centered Distribution of Challenge\n\nLastly, we have a centered distribution of challenges. In this scenario, teams consist of mid-level developers but lack any really senior or more junior developers creating a challenge gap at each end of the pyramid.\n\n![illustration titled \"Centered Distribution of Challenge\" that shows people gathered in the middle of the pyramid with no one at the top or bottom, representing a gap in challenges covered.](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F7ku46nvikkf4tqy54czp.png)\n\nTeams with this makeup are susceptible to infighting around responsibilities looking for work that will fit within their comfort zone. Some of the work could be too complex causing fragility in the solutions.\n\nIt's also possible for teams of this makeup to be very process heavy as team members look for ways to contribute. Some team members may try to step up and take on responsibilities that are too challenging to fill gaps and burnout.\n\n## A Framework for Growth\n\nAnother significant benefit I've found from using this model is that it creates a system that makes it easier to scale a team or teams as you take on more responsibility because the pyramid can be applied to any level of challenge.\n\n![an illustration titled \"Scaling the Distribution of Challenge\" that shows a triangle with three labels, at the top is \"CTO\" the middle label says \"Tech Leads\" and the lower label says \"Individual Contributors\". inside the triangle are people icons with them distributed with the most at the bottom, some in the middle, and only one at the top, some of the people icons are dotted lines indicating they are spots to fill on the team, some of the people icons also have arrows by them pointing up to the next row of people indicating moving up in responsibility](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fftgm3zesspy43n4soqxw.png)\n\n## Caveats & Conclusion\n\nWhen it comes to humans we're better served by communication than models.\n\nWhile this model might help you identify potential gaps in challenge, it's more important to constantly check in with your team and make sure they are in fact happy, engaged, and challenged appropriately.\n\n",user:{name:"Kurt Kemple",username:d,twitter_username:d,github_username:"kkemple",website_url:"https:\u002F\u002Ftheworst.dev",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3TNXXADT--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F59436\u002Fe2ebdd84-f763-4874-9384-3c487d854058.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Asf2RGv---\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F59436\u002Fe2ebdd84-f763-4874-9384-3c487d854058.jpg"}}},serverRendered:true,routePath:"\u002Farticles\u002Ftheworstdev\u002F851647",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,70,"2021-10-05T01:53:21Z","theworstdev"));