window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:843771,title:"WCAG: How to establish an a11y-adaptive strategy ",description:"set up a strategy to facelift all users' experience across applications",readable_publish_date:"Oct 13",slug:"wcag-how-to-establish-an-a11y-adaptive-strategy-44am",path:"\u002Fyinon\u002Fwcag-how-to-establish-an-a11y-adaptive-strategy-44am",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--XwxtWp1z--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fsource.unsplash.com\u002FRLw-UC03Gwc",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--t1MgRPNi--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fsource.unsplash.com\u002FRLw-UC03Gwc",canonical_url:c,created_at:"2021-09-28T09:57:41Z",edited_at:"2021-10-13T17:28:38Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:7,tag_list:"a11y, wcag, organization, vivid",tags:["a11y","wcag","organization","vivid"],body_html:"\u003Cp\u003EWhat does it take to maintain an accessible user interface? What difficulties prevent most teams from achieving that goal? How can these problems be solved for interfaces to enable \u003Cstrong\u003EALL\u003C\u002Fstrong\u003E-users' experience?\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EMany organizations dodge the accessibility-related dues during development, especially if never practiced before, and are still unfamiliar with its craftsmanship. It might also seem inconsequential to the design pattern we typically practice or even extraneous to users we assume are non-disabled. We commonly perceive such duties as enriching rather than a necessity, which results in \u003Cstrong\u003Eweb content accessibility guidelines\u003C\u002Fstrong\u003E (WCAG) remaining overlooked until they fade off in the backlog.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--0ePAZeGm--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fzv4jthkat90zwnyjphf6.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--0ePAZeGm--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fzv4jthkat90zwnyjphf6.png\" alt=\"image\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo overcome apparent violations, organizations can educate teams, recruit in-house experts, and even get 3rd party services to support repair processes. However, the latter won't stick unless carried out forever, as proper compliance to WCAG requires ongoing care and is not a one-time refurbishment.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFailing to apply WCAG and not meet its success criteria will likely result in broken interfaces for \u003Cstrong\u003Esome\u003C\u002Fstrong\u003E users. In addition to blocking target audience from using services and consequently, damaging revenue increases, failing to comply with the standard is a human rights violation that exposes an organization to lawsuits.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHence, we need a strategy to instill a set of mind, focus on the joint actions teams need to take, set up workflows, and plan gradual steps to become accessible.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"suggested-strategies\" href=\"#suggested-strategies\"\u003E\n  \u003C\u002Fa\u003E\n  Suggested strategies\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EConsider a11y practices as an integral part of development. Put it right next to design, code, testing, security vulnerabilities, business logic, and more.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet's spread out what we found as quick and most effective workflows.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"separation-of-concerns\" href=\"#separation-of-concerns\"\u003E\n  \u003C\u002Fa\u003E\n  Separation of concerns\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAt Vonage, we strategically maintain a tailor-maid library (Vivid) where organization-wide engineers can enjoy the benefits of UI-based components built from the ground up also to meet WCAG success criteria.\u003Cbr\u003E\nBenefits:\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"ltag-github-readme-tag\"\u003E\n  \u003Cdiv class=\"readme-overview\"\u003E\n    \u003Ch2\u003E\n      \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--i3JOwpme--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev.to\u002Fassets\u002Fgithub-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg\" alt=\"GitHub logo\" loading=\"lazy\"\u003E\n      \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FVonage\"\u003E\n        Vonage\n      \u003C\u002Fa\u003E \u002F \u003Ca style=\"font-weight: 600;\" href=\"https:\u002F\u002Fgithub.com\u002FVonage\u002Fvivid\"\u003E\n        vivid\n      \u003C\u002Fa\u003E\n    \u003C\u002Fh2\u003E\n    \u003Ch3\u003E\n      Vonage's web UI 🎨 toolbelt\n    \u003C\u002Fh3\u003E\n  \u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Col\u003E\n\u003Cli\u003E\u003Cp\u003EBattery charged\u003Cbr\u003E\nIntegrating the library across Vonage products makes it easy to handle violations in a single codebase and continuously improve it to fit required standards.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EFlexibility\u003Cbr\u003E\nComponents can be easily adjusted and enhanced to an even more compelling user experience by the consuming authors (devs). Plus, on its own, a11y related API may help authors better understand how to craft a11y practices.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"in-practice\" href=\"#in-practice\"\u003E\n  \u003C\u002Fa\u003E\n  In practice\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003ELet say, for example, we default a banner component \u003Ccode\u003Erole\u003C\u002Fcode\u003E to '\u003Cem\u003Estatus\u003C\u002Fem\u003E' with a redundant \u003Ccode\u003Earia-live\u003C\u002Fcode\u003E attribute set to polite (To maximize compatibility when using this \u003Ccode\u003Erole\u003C\u002Fcode\u003E). This indicates that the screen reader should wait until the user is idle before presenting updates to the user.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHowever, we can modify the above attributes (\u003Ccode\u003Erole\u003C\u002Fcode\u003E and \u003Ccode\u003Earia-live\u003C\u002Fcode\u003E) to fit contextually. So if the information is critical, we could still alter the banner's \u003Ccode\u003Erole\u003C\u002Fcode\u003E to '\u003Cem\u003Ealert\u003C\u002Fem\u003E', telling assistive technologies to interrupt other processes and provide users with immediate notification.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs a result, Consuming authors can seamlessly concentrate on their products' progress rather than deep dive into a11y practices, as we separate the concern of eligible a11y from the other development concerns by \"outsourcing\" them.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESome organizations practice an even more isolated codebase dedicated to a11y; see adobe's react-aria.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"readymade\" href=\"#readymade\"\u003E\n  \u003C\u002Fa\u003E\n  Ready-made\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIf setting up a dedicated team isn't a reasonable choice in your organization, a practical alternative would be to adopt a reliable 3rd party OSS that satisfies the required criteria. The Vivid team also gained a significant head-start by partially subclassing the material web components library under its hood.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"prioritize\" href=\"#prioritize\"\u003E\n  \u003C\u002Fa\u003E\n  Prioritize\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EChoosing how we handle defects in-house is bound to business needs. Priorities can alter, but here's a suggestion to start -\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EIssues picked up by free crawlers and found using automated tools are often easy to handle and fix to protect the organization from lawsuits and improve sites' ranking\u003C\u002Fli\u003E\n\u003Cli\u003ELegal implications pages (e.g., privacy policy, nutritional information, GDRP pages)\u003C\u002Fli\u003E\n\u003Cli\u003EHigh traffic pages (e.g., homepage, landing\u002Flogin\u002Fcampaign pages)\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EAs for a gradual increase, WCAG defines three levels of conformance (A, AA, AAA) an organization may adopt. Most countries' laws require UX to comply with at least the first level (A). Nonetheless, we can cherry-pick on specific features, go the extra mile, and opt-in to higher levels.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"level-1\" href=\"#level-1\"\u003E\n  \u003C\u002Fa\u003E\n  Level 1\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EEssential tasks with high user impact, normally with the least investment. Completing these tasks addresses many of the top concerns of people with disabilities.\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"level-2\" href=\"#level-2\"\u003E\n  \u003C\u002Fa\u003E\n  Level 2\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EYou should complete these tasks in addition to the first level to address the next-most important issues that may keep certain users from fully using your product.\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"level-3\" href=\"#level-3\"\u003E\n  \u003C\u002Fa\u003E\n  Level 3\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ECompleting all three levels achieves compliance with the A and AA criteria of the Web Content Accessibility Guidelines (WCAG).\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fwww.ibm.com\u002Fable\u002Ftoolkit\u002Fplan\u002F#pace-of-completion\"\u003EIBM's pace of completion\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EProduct teams should include \u003Ca href=\"https:\u002F\u002Fwww.ibm.com\u002Fable\u002Ftoolkit\u002Fplan\u002Frelease#establishing-the-accessibility-scope-for-the-release\"\u003Eaccessibility targets\u003C\u002Fa\u003E in each release. As they do, each team member takes on specific tasks to ensure they set up the product for success. This process set regularly will outcome in improved, sustainable accessibility.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ERemember\u003C\u002Fstrong\u003E, every feature you make more accessible improves the experience for \u003Cstrong\u003Esome\u003C\u002Fstrong\u003E users. You don’t have to solve it all at once to improve.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"tooling\" href=\"#tooling\"\u003E\n  \u003C\u002Fa\u003E\n  Tooling\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EA reasonable starting point is to have automated tools, such as tests, linters, browser addons, and IDE plugins to first aid with reporting identified violations and help get up and ready to brief in on \u003Cem\u003Egood-first-issues\u003C\u002Fem\u003E.\u003Cbr\u003E\nHere are a few of the standard tools out there -\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.deque.com\u002Faxe\"\u003EDeque's Axe\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Faccessibilityinsights.io\"\u003EMicrosoft accessibility insights\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwave.webaim.org\"\u003EWave\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"https:\u002F\u002Fsiteimprove.com\"\u003ESite improve\u003C\u002Fa\u003E (big pile of services)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fpope.tech\"\u003EPope.tech\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"https:\u002F\u002Fassistivlabs.com\"\u003EAssistive labs\u003C\u002Fa\u003E (Like BrowserStack for screen readers)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ENote\u003C\u002Fstrong\u003E that \"off the shelf\" automated tools pick up \u003Cstrong\u003E&lt; 40%\u003C\u002Fstrong\u003E of the errors and are \u003Cstrong\u003Esuperficial\u003C\u002Fstrong\u003E (e.g., color contrast, inputs associated with labels, and more). Furthermore, compliance does not equal a genuinely accessible site. We must manually test and review.\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"services\" href=\"#services\"\u003E\n  \u003C\u002Fa\u003E\n  Services\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIf feasible and resources apply, get 3rd party services to review applications by actual users, some even with relevant disabilities, which will provide actual \"field\" data on UX failures.\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.deque.com\"\u003EDeque\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.audioeye.com\"\u003EAudioeye\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.visionaustralia.org\u002Fservices\u002Fdigital-access\"\u003EVision Australia Digital Access\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"http:\u002F\u002Fdigitalaccessibilitycentre.org\"\u003EDigital Accessibility Centre (DAC)\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThere are dozen paid services to choose from, but the ones that seem most genuine to me are those with real disabled users.\u003Cbr\u003E\nDisclosure: I ran into DAC reference following \u003Ca href=\"https:\u002F\u002Faccessibility.blog.gov.uk\u002F2018\u002F05\u002F15\u002Fwhat-we-learned-from-getting-our-autocomplete-tested-for-accessibility\u002F\"\u003Egov. uk's insightful success story\u003C\u002Fa\u003E about getting an accessibility audit.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E...We had our autocomplete tested by the Digital Accessibility Centre (DAC). They are one of several companies who specialise in accessibility testing and auditing. The majority of DAC's testers have access needs.They are expert users but they depend on services being accessible in their day-to-day lives.\u003Cbr\u003E\nDAC invited us to their offices in Neath to watch them put the autocomplete through its paces...\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"communicate\" href=\"#communicate\"\u003E\n  \u003C\u002Fa\u003E\n  Communicate\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EProvide an accessibility statement to:\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cul\u003E\n\u003Cli\u003EShow your users that you care about accessibility and about them\u003C\u002Fli\u003E\n\u003Cli\u003EProvide them with information about the accessibility of your content\u003C\u002Fli\u003E\n\u003Cli\u003EDemonstrate commitment to accessibility, and to social responsibility\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\"\u003Cem\u003Ew3c - web accessibility initiative\u003C\u002Fem\u003E\"\u003C\u002Fp\u003E\n\n\u003Cp\u003EStart with\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fminimal-example\"\u003EMinimal accessibility statement\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fcomplete-example\"\u003EComplete accessibility statement\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOr generate with\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fgenerator\u002F#create\"\u003Ehttps:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fgenerator\u002F#create\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fwww.accessibilitystatementgenerator.com\"\u003Ehttps:\u002F\u002Fwww.accessibilitystatementgenerator.com\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EKeep an open channel for users' feedback - a wide range of disability types and assistive tools may fail in play with the applications' UI. The \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fkarkranikhil\u002Fweb-accessibility-by-making-your-site-accessible-you-automatically-increase-the-target-audience-d8d#web-accessibility-statistics\"\u003Efollowing article section\u003C\u002Fa\u003E hints at how diverse it gets.\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"ltag__link\"\u003E\n  \u003Ca href=\"\u002Fkarkranikhil\" class=\"ltag__link__link\"\u003E\n    \u003Cdiv class=\"ltag__link__pic\"\u003E\n      \u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3Fvim8FP--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--TLXbHheO--\u002Fc_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F72253\u002F24082bce-8a37-465e-a138-d168559f80af.jpg\" alt=\"karkranikhil\" loading=\"lazy\"\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"\u002Fkarkranikhil\u002Fweb-accessibility-by-making-your-site-accessible-you-automatically-increase-the-target-audience-d8d\" class=\"ltag__link__link\"\u003E\n    \u003Cdiv class=\"ltag__link__content\"\u003E\n      \u003Ch2\u003EWeb Accessibility: By making your website accessible, you automatically increase the target audience.\u003C\u002Fh2\u003E\n      \u003Ch3\u003ENikhil karkra ・ Nov 19 '19 ・ 8 min read\u003C\u002Fh3\u003E\n      \u003Cdiv class=\"ltag__link__taglist\"\u003E\n        \u003Cspan class=\"ltag__link__tag\"\u003E#productivity\u003C\u002Fspan\u003E\n        \u003Cspan class=\"ltag__link__tag\"\u003E#ui\u003C\u002Fspan\u003E\n        \u003Cspan class=\"ltag__link__tag\"\u003E#javascript\u003C\u002Fspan\u003E\n        \u003Cspan class=\"ltag__link__tag\"\u003E#a11y\u003C\u002Fspan\u003E\n      \u003C\u002Fdiv\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"summary\" href=\"#summary\"\u003E\n  \u003C\u002Fa\u003E\n  Summary\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003ETo serve all users, we need to continuously operate on a full spectrum of disabilities UX flaws.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EApplying and maintaining a11y in your app(s) is a practice much like tests and security. You need to not only apply a11y but also set up the mechanisms that will allow you to maintain it.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EHead start with an a11y-ready UI library. If resources apply, establish a dedicated team solely operating on UI, semantics, and accessible components.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EIn our experience, you will soon find out there’s no “one-fits-all” and you’ll need to start handling feedback - either from customers or from the business side. This is when you’ll need to prioritize.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EFeedbacks are like feature requests or bugs.  They need to be maintained and tested to ensure they don’t break (regression is bad for business). Here automated tests come into play - either 3rd party tools or tools you build that are dedicated to your UI (using tools like Cypress).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EEventually, when you do the best you can do on your own and feel you need another push to get to a new level - get the help of experts.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EJust like any other task, you’ll need to set the gradual steps to comply with web content accessibility guidelines. It will be a joint effort of teams involved in UI development with set up workflows and a roadmap plan (also known as Epic on Jira).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003ERemember, every feature you make more accessible improves the experience for \u003Cstrong\u003Esome\u003C\u002Fstrong\u003E users. You don't have to solve it all at once to improve.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EI encourage everyone who are starting to learn about the topic to initiate action in your organizational environment.\u003C\u002Fp\u003E\n\n\u003Cp\u003EPlease raise any questions, arguments, concerns in the comments. I would love to hear back.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThank you for reading 🤍\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnd special thanks to \u003Ca href=\"https:\u002F\u002Fyonatankra.com\u002F\"\u003EYonatan Kra\u003C\u002Fa\u003E for his helpful, thorough review.\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: WCAG: How to establish an a11y-adaptive strategy \npublished: true\ndescription: set up a strategy to facelift all users' experience across applications\ntags: a11y, wcag, organization, vivid\ncover_image: https:\u002F\u002Fsource.unsplash.com\u002FRLw-UC03Gwc\n---\n\nWhat does it take to maintain an accessible user interface? What difficulties prevent most teams from achieving that goal? How can these problems be solved for interfaces to enable **ALL**-users' experience?\n\n\u003E Many organizations dodge the accessibility-related dues during development, especially if never practiced before, and are still unfamiliar with its craftsmanship. It might also seem inconsequential to the design pattern we typically practice or even extraneous to users we assume are non-disabled. We commonly perceive such duties as enriching rather than a necessity, which results in **web content accessibility guidelines** (WCAG) remaining overlooked until they fade off in the backlog.\n\n![image](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fzv4jthkat90zwnyjphf6.png)\n\nTo overcome apparent violations, organizations can educate teams, recruit in-house experts, and even get 3rd party services to support repair processes. However, the latter won't stick unless carried out forever, as proper compliance to WCAG requires ongoing care and is not a one-time refurbishment.\n\nFailing to apply WCAG and not meet its success criteria will likely result in broken interfaces for **some** users. In addition to blocking target audience from using services and consequently, damaging revenue increases, failing to comply with the standard is a human rights violation that exposes an organization to lawsuits.\n\nHence, we need a strategy to instill a set of mind, focus on the joint actions teams need to take, set up workflows, and plan gradual steps to become accessible.\n\n## Suggested strategies\n\nConsider a11y practices as an integral part of development. Put it right next to design, code, testing, security vulnerabilities, business logic, and more.\n\nLet's spread out what we found as quick and most effective workflows.\n\n### Separation of concerns\n\nAt Vonage, we strategically maintain a tailor-maid library (Vivid) where organization-wide engineers can enjoy the benefits of UI-based components built from the ground up also to meet WCAG success criteria.\nBenefits:\n\n{% github vonage\u002Fvivid no-readme %}\n\n1. Battery charged\nIntegrating the library across Vonage products makes it easy to handle violations in a single codebase and continuously improve it to fit required standards.\n\n1. Flexibility\nComponents can be easily adjusted and enhanced to an even more compelling user experience by the consuming authors (devs). Plus, on its own, a11y related API may help authors better understand how to craft a11y practices.\n\n#### In practice\n\nLet say, for example, we default a banner component `role` to '*status*' with a redundant `aria-live` attribute set to polite (To maximize compatibility when using this `role`). This indicates that the screen reader should wait until the user is idle before presenting updates to the user.\n\nHowever, we can modify the above attributes (`role` and `aria-live`) to fit contextually. So if the information is critical, we could still alter the banner's `role` to '*alert*', telling assistive technologies to interrupt other processes and provide users with immediate notification.\n\nAs a result, Consuming authors can seamlessly concentrate on their products' progress rather than deep dive into a11y practices, as we separate the concern of eligible a11y from the other development concerns by \"outsourcing\" them.\n\nSome organizations practice an even more isolated codebase dedicated to a11y; see adobe's react-aria.\n\n### Ready-made\n\nIf setting up a dedicated team isn't a reasonable choice in your organization, a practical alternative would be to adopt a reliable 3rd party OSS that satisfies the required criteria. The Vivid team also gained a significant head-start by partially subclassing the material web components library under its hood.\n\n### Prioritize\n\nChoosing how we handle defects in-house is bound to business needs. Priorities can alter, but here's a suggestion to start -\n\n1. Issues picked up by free crawlers and found using automated tools are often easy to handle and fix to protect the organization from lawsuits and improve sites' ranking\n2. Legal implications pages (e.g., privacy policy, nutritional information, GDRP pages)\n3. High traffic pages (e.g., homepage, landing\u002Flogin\u002Fcampaign pages)\n\nAs for a gradual increase, WCAG defines three levels of conformance (A, AA, AAA) an organization may adopt. Most countries' laws require UX to comply with at least the first level (A). Nonetheless, we can cherry-pick on specific features, go the extra mile, and opt-in to higher levels.\n\n\u003E ### Level 1\n\u003E\n\u003E Essential tasks with high user impact, normally with the least investment. Completing these tasks addresses many of the top concerns of people with disabilities.\n\u003E\n\u003E ### Level 2\n\u003E\n\u003E You should complete these tasks in addition to the first level to address the next-most important issues that may keep certain users from fully using your product.\n\u003E\n\u003E ### Level 3\n\u003E\n\u003E Completing all three levels achieves compliance with the A and AA criteria of the Web Content Accessibility Guidelines (WCAG).\n\n_[IBM's pace of completion](https:\u002F\u002Fwww.ibm.com\u002Fable\u002Ftoolkit\u002Fplan\u002F#pace-of-completion)_\n\nProduct teams should include [accessibility targets](https:\u002F\u002Fwww.ibm.com\u002Fable\u002Ftoolkit\u002Fplan\u002Frelease#establishing-the-accessibility-scope-for-the-release) in each release. As they do, each team member takes on specific tasks to ensure they set up the product for success. This process set regularly will outcome in improved, sustainable accessibility.\n\n**Remember**, every feature you make more accessible improves the experience for **some** users. You don’t have to solve it all at once to improve.\n\n### Tooling\n\nA reasonable starting point is to have automated tools, such as tests, linters, browser addons, and IDE plugins to first aid with reporting identified violations and help get up and ready to brief in on *good-first-issues*.\nHere are a few of the standard tools out there -\n\n- [Deque's Axe](https:\u002F\u002Fwww.deque.com\u002Faxe)\n- [Microsoft accessibility insights](http:\u002F\u002Faccessibilityinsights.io)\n- [Wave](https:\u002F\u002Fwave.webaim.org)\n- [Site improve](https:\u002F\u002Fsiteimprove.com) (big pile of services)\n- [Pope.tech](https:\u002F\u002Fpope.tech)\n- [Assistive labs](https:\u002F\u002Fassistivlabs.com) (Like BrowserStack for screen readers)\n\n**Note** that \"off the shelf\" automated tools pick up **\u003C 40%** of the errors and are **superficial** (e.g., color contrast, inputs associated with labels, and more). Furthermore, compliance does not equal a genuinely accessible site. We must manually test and review.\n\n### Services\n\nIf feasible and resources apply, get 3rd party services to review applications by actual users, some even with relevant disabilities, which will provide actual \"field\" data on UX failures.\n\n- [Deque](https:\u002F\u002Fwww.deque.com)\n- [Audioeye](https:\u002F\u002Fwww.audioeye.com)\n- [Vision Australia Digital Access](https:\u002F\u002Fwww.visionaustralia.org\u002Fservices\u002Fdigital-access)\n- [Digital Accessibility Centre (DAC)](http:\u002F\u002Fdigitalaccessibilitycentre.org)\n\nThere are dozen paid services to choose from, but the ones that seem most genuine to me are those with real disabled users.\nDisclosure: I ran into DAC reference following [gov. uk's insightful success story](https:\u002F\u002Faccessibility.blog.gov.uk\u002F2018\u002F05\u002F15\u002Fwhat-we-learned-from-getting-our-autocomplete-tested-for-accessibility\u002F) about getting an accessibility audit.\n\n\u003E ...We had our autocomplete tested by the Digital Accessibility Centre (DAC). They are one of several companies who specialise in accessibility testing and auditing. The majority of DAC's testers have access needs.They are expert users but they depend on services being accessible in their day-to-day lives.\n\u003E DAC invited us to their offices in Neath to watch them put the autocomplete through its paces...\n\n### Communicate\n\nProvide an accessibility statement to:\n\n\u003E - Show your users that you care about accessibility and about them\n\u003E - Provide them with information about the accessibility of your content\n\u003E - Demonstrate commitment to accessibility, and to social responsibility\n\n\"_w3c - web accessibility initiative_\"\n\nStart with\n[Minimal accessibility statement](https:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fminimal-example)\n[Complete accessibility statement](https:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fcomplete-example)\n\nOr generate with\nhttps:\u002F\u002Fwww.w3.org\u002FWAI\u002Fplanning\u002Fstatements\u002Fgenerator\u002F#create\nhttps:\u002F\u002Fwww.accessibilitystatementgenerator.com\n\nKeep an open channel for users' feedback - a wide range of disability types and assistive tools may fail in play with the applications' UI. The [following article section](https:\u002F\u002Fdev.to\u002Fkarkranikhil\u002Fweb-accessibility-by-making-your-site-accessible-you-automatically-increase-the-target-audience-d8d#web-accessibility-statistics) hints at how diverse it gets.\n\n{% link karkranikhil\u002Fweb-accessibility-by-making-your-site-accessible-you-automatically-increase-the-target-audience-d8d#web-accessibility-statistics %}\n\n### Summary\n\n- To serve all users, we need to continuously operate on a full spectrum of disabilities UX flaws.\n\n- Applying and maintaining a11y in your app(s) is a practice much like tests and security. You need to not only apply a11y but also set up the mechanisms that will allow you to maintain it.\n\n- Head start with an a11y-ready UI library. If resources apply, establish a dedicated team solely operating on UI, semantics, and accessible components.\n\n- In our experience, you will soon find out there’s no “one-fits-all” and you’ll need to start handling feedback - either from customers or from the business side. This is when you’ll need to prioritize.\n\n- Feedbacks are like feature requests or bugs.  They need to be maintained and tested to ensure they don’t break (regression is bad for business). Here automated tests come into play - either 3rd party tools or tools you build that are dedicated to your UI (using tools like Cypress).\n\n- Eventually, when you do the best you can do on your own and feel you need another push to get to a new level - get the help of experts.\n\n- Just like any other task, you’ll need to set the gradual steps to comply with web content accessibility guidelines. It will be a joint effort of teams involved in UI development with set up workflows and a roadmap plan (also known as Epic on Jira).\n\n- Remember, every feature you make more accessible improves the experience for **some** users. You don't have to solve it all at once to improve.\n\nI encourage everyone who are starting to learn about the topic to initiate action in your organizational environment.\n\nPlease raise any questions, arguments, concerns in the comments. I would love to hear back.\n\nThank you for reading 🤍\n\nAnd special thanks to [Yonatan Kra](https:\u002F\u002Fyonatankra.com\u002F) for his helpful, thorough review.\n",user:{name:"Yinon Oved",username:"yinon",twitter_username:"yinon_",github_username:"yinonov",website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---CqLOT1r--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F150937\u002Fbcdbfe69-6f15-4f71-9d06-b1ce2de00b34.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--r6YOiFcT--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F150937\u002Fbcdbfe69-6f15-4f71-9d06-b1ce2de00b34.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fyinon\u002F843771",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-10-13T11:34:56Z","https:\u002F\u002Fdev.to\u002Fyinon\u002Fwcag-how-to-establish-an-a11y-adaptive-strategy-44am",4));