window.__NUXT__=(function(a,b,c,d,e,f){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:641503,title:"AWS CDK - Fullstack Polyglot with Asset Bundling",description:"This is my third article that deals with asset bundling in AWS CDK. For more context, you may also be...",readable_publish_date:"Mar 24",slug:"aws-cdk-fullstack-polyglot-with-asset-bundling-318h",path:"\u002Faws-builders\u002Faws-cdk-fullstack-polyglot-with-asset-bundling-318h",url:b,comments_count:1,public_reactions_count:c,collection_id:a,published_timestamp:d,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--B-dJu4O2--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F2qdz5j7zorq3nv9sua7n.jpg",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--wp7jUCwz--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F2qdz5j7zorq3nv9sua7n.jpg",canonical_url:b,created_at:"2021-03-21T19:26:12Z",edited_at:a,crossposted_at:a,published_at:d,last_comment_at:"2021-04-01T04:27:04Z",reading_time_minutes:12,tag_list:"aws, cdk, go, typescript",tags:["aws","cdk","go","typescript"],body_html:"\u003Cp\u003EThis is my third article that deals with \u003Ca href=\"https:\u002F\u002Fdocs.aws.amazon.com\u002Fcdk\u002Flatest\u002Fguide\u002Fassets.html\"\u003Easset bundling\u003C\u002Fa\u003E in \u003Ca href=\"https:\u002F\u002Faws.amazon.com\u002Fcdk\u002F\"\u003EAWS CDK\u003C\u002Fa\u003E. For more context, you may also be interested in:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdev.to\u002Felthrasher\u002Faws-cdk-aws-lambda-nodejs-module-9ic\"\u003ELambda NodeJS\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Faws-cdk-one-step-s3-websites-with-esbuild-2e3h\"\u003ES3 Websites\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EAsset management is one of the better features of CDK. We provide a path on the local filesystem and CDK will automatically stage the files in S3 and produce valid CloudFormation to use the files in Lambda, an S3 website, or any other use I may have for assets. The ability to bundle application code with infrastructure and push them together is a superpower and beats the heck out of anything that requires an s3 sync as an extra step.\u003C\u002Fp\u003E\n\n\u003Cp\u003EEven better is when we let CDK handle the bundling internally. Not only does this make for easy one-step builds, but we can also set rules for managing change. We can tell CDK how to diff our output, thereby ensuring updates are only made when necessary. This will save enormous amounts of time on larger stacks.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI've covered use cases for TypeScript applications in Lambda and S3 websites in the articles linked above. In this article I'll explore how to add a function written in Go to a TypeScript CDK stack and gain all the same benefits we enjoy using a high-level construct like \u003Ca href=\"https:\u002F\u002Fdocs.aws.amazon.com\u002Fcdk\u002Fapi\u002Flatest\u002Fdocs\u002Faws-lambda-nodejs-readme.html\"\u003Eaws-lambda-nodejs\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"table-of-contents\" href=\"#table-of-contents\"\u003E\n  \u003C\u002Fa\u003E\n  Table of Contents\n\u003C\u002Fh2\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#whygo\"\u003EWhy Go?\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#asset-hash\"\u003EAsset Hash\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#local-bundling\"\u003ELocal Bundling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#docker-bundling\"\u003EDocker Bundling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#byo-dockerfile\"\u003EBYO Dockerfile\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"why-go\" href=\"#why-go\"\u003E\n  \u003C\u002Fa\u003E\n  Why Go?\u003Ca name=\"whygo\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI'm going to focus on running a build for a Lambda function written in Go in this post, but many of the same techniques could be leveraged for any kind of asset bundling. Go is a language that compiles to a binary while TypeScript compiles to JavaScript, so we're dipping our toes in very different worlds here. I've only recently begun to properly learn Go  (thanks \u003Ca href=\"https:\u002F\u002Fcloudacademy.com\u002F\"\u003ECloud Academy\u003C\u002Fa\u003E), so I've got a mix of googled hacks and assumed best practices. That's good enough to bundle into a CDK project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI used Go for a recent exploration of \u003Ca href=\"\"\u003EOpen Policy Agent\u003C\u002Fa\u003E in my \u003Ca href=\"https:\u002F\u002Frego.fyi\"\u003Erego.fyi\u003C\u002Fa\u003E website. I'm going to show snippets from that app. \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Felthrasher\u002Frego.fyi\"\u003EThe full repo can be found here\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"asset-hash\" href=\"#asset-hash\"\u003E\n  \u003C\u002Fa\u003E\n  Asset Hash\u003Ca name=\"asset-hash\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ELet's start with the best part first. The \u003Ccode\u003EAssetOptions\u003C\u002Fcode\u003E interface has three optional properties: \u003Ccode\u003EassetHash\u003C\u002Fcode\u003E, \u003Ccode\u003EassetHashType\u003C\u002Fcode\u003E and \u003Ccode\u003Ebundling\u003C\u002Fcode\u003E. In fact, giving the asset options is optional. We can simply write:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E\u002Fpath\u002Fto\u002Fmy\u002Fstuff\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis will add the specified path as an asset. It isn't modified at all and the input path will be used to detect changes. The above code can be part of a Lambda function. Example:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003EFunction\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Faws-lambda\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EmyFn\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ecode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eruntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ENODEJS_14_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eindex.handler\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003Eor it could just be an asset you want uploaded to S3:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAsset\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Faws-s3-assets\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EMyAsset\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emyfile.txt\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThere's obviously a difference here. \u003Ccode\u003ECode.fromAsset\u003C\u002Fcode\u003E takes the path as the first arg, then has an optional \u003Ccode\u003EAssetOptions\u003C\u002Fcode\u003E argument while \u003Ccode\u003Enew Asset\u003C\u002Fcode\u003E is declared as a standalone construct that requires a scope and an id. The \u003Ccode\u003EAsset\u003C\u002Fcode\u003E construct takes a required third argument of \u003Ccode\u003EAssetProps\u003C\u002Fcode\u003E which extends \u003Ccode\u003EAssetOptions\u003C\u002Fcode\u003E but adds the required \u003Ccode\u003Epath\u003C\u002Fcode\u003E property.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBut wait there's more! You might be bundling for an S3 website.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EBucketDeployment\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ESource\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Faws-s3-deployment\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EBucketDeployment\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EDeployWebsite\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003EdestinationBucket\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EBucket\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EWebsiteBucket\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EautoDeleteObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EpublicReadAccess\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EremovalPolicy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERemovalPolicy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EDESTROY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EwebsiteIndexDocument\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eindex.html\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}),\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Edistribution\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003EdistributionPaths\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E\u002F*\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Esources\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ESource\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Easset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u002Fpath\u002Fto\u002Fasset\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))],\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOr maybe you're building a Docker image?\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImageAsset\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Faws-ecr-assets\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImageAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EMyBuildImage\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Edirectory\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emy-image\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESeems confusing? It's actually not that bad. We have a common interface used for building Lambda functions, miscellaneous assets, S3 websites, Docker images and anything else you may wish to transform in a build pipeline. Now that that's clear, let's dig into that \u003Ccode\u003EAssetOptions\u003C\u002Fcode\u003E interface.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Ccode\u003EassetHash\u003C\u002Fcode\u003E property would be appropriate if you wanted to generate your own hash instead of letting CDK manage that for you. Most of the time you won't want to use this, but it's good it's there if you need it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI'm more interested in \u003Ccode\u003EassetHashType\u003C\u002Fcode\u003E. We get a couple of options to consider: \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E and \u003Ccode\u003ESOURCE\u003C\u002Fcode\u003E. There is also \u003Ccode\u003EBUNDLE\u003C\u002Fcode\u003E, deprecated by \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E, and \u003Ccode\u003ECUSTOM\u003C\u002Fcode\u003E, which just means \u003Ccode\u003EassetHash\u003C\u002Fcode\u003E is provided. Between \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E and \u003Ccode\u003ESOURCE\u003C\u002Fcode\u003E, \u003Ccode\u003ESOURCE\u003C\u002Fcode\u003E is the default, but I think I prefer \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E. If my inputs change (perhaps a library bump) but my output doesn't (that library bump had no impact on the bundled code), then do I really want to deploy new code?\u003C\u002Fp\u003E\n\n\u003Cp\u003EI'll go into another reason for preferring \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E later in the article. The takeaway here is we have a lot of flexibility to hash the input, output or provide our own hash. That's great because controlling this feature will make deployments faster. We'll spend less time staring at \u003Ca href=\"http:\u002F\u002Fprogressquest.com\u002F\"\u003Eprogress bars\u003C\u002Fa\u003E and we'll also be able to respond more quickly to operational issues. This will speed up our dev cycle as well. It's a great feeling running a stack with 11 Lambda Functions, making a change to just one of them and then having a very quick deployment as CDK identifies the one that changed and deploys an update only for that one.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"local-bundling\" href=\"#local-bundling\"\u003E\n  \u003C\u002Fa\u003E\n  Local Bundling\u003Ca name=\"local-bundling\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ELet's move onto the final optional property of \u003Ccode\u003EAssetOptions\u003C\u002Fcode\u003E, bundling. We're going to need to use this if we want to run any kind of build or compilation process on our code. We \u003Cem\u003Ecould\u003C\u002Fem\u003E run that as a separate process and then use the output of that process as our asset, but doing it as part of the CDK build is much better.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe default for bundling is to use Docker, even if you aren't aiming to produce an image. This makes sense for some purposes and will cause problems for others. If our build environment runs a different operating system than our production environment and we are compiling binaries, we may need Docker builds. On the other hand, we might be building in an environment that doesn't run Docker. We could even be building in a Docker environment where spawning a new container from the current one (Docker-in-Docker) is not allowed!\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet's start from a place where we do \u003Cstrong\u003Enot\u003C\u002Fstrong\u003E want to use Docker. Unfortunately we can't just leave Docker out entirely. The \u003Ccode\u003Eimage\u003C\u002Fcode\u003E property of \u003Ccode\u003Ebundling\u003C\u002Fcode\u003E is required. Instead let's just let the user know that we aren't supporting a Docker build.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EMyFn\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ecode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EmyPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003EassetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAssetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EOUTPUT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ebundling\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Ecommand\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esh\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E-c\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eecho \"Docker build not supported. Please install go.\"\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromRegistry\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ealpine\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eruntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIf local bundling fails, now we at least have a meaningful error message to the user. Of course the above code will fail every build, so we have more work to do. Let's add local bundling. The \u003Ccode\u003Elocal\u003C\u002Fcode\u003E property of \u003Ccode\u003Ebundling\u003C\u002Fcode\u003E must implement \u003Ccode\u003EILocalBundling\u003C\u002Fcode\u003E, an object with one method, \u003Ccode\u003EtryBundle\u003C\u002Fcode\u003E that receives the \u003Ccode\u003EoutputDir\u003C\u002Fcode\u003E as an argument and must return a boolean type. If \u003Ccode\u003EtryBundle\u003C\u002Fcode\u003E returns true and some code artifact is found in \u003Ccode\u003EoutputDir\u003C\u002Fcode\u003E, then CDK will see the build as successful and skip the Docker build. \u003Ccode\u003EtryBundle\u003C\u002Fcode\u003E is synchronous and will not resolve promises so we need a strategy for running the build synchronously and accurately reporting whether or not it was successful.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo synchronously run our build, we'll use \u003Ccode\u003EexecSync\u003C\u002Fcode\u003E from the nodejs \u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fdist\u002Flatest-v14.x\u002Fdocs\u002Fapi\u002Fchild_process.html#child_process_child_process_execsync_command_options\"\u003Echild_process\u003C\u002Fa\u003E module. \u003Ccode\u003EtryBundle\u003C\u002Fcode\u003E should implement try\u002Fcatch to ensure it returns a boolean about the state of our build. It's common practice to execute some kind of test to see if the runtime supports our build. We could use \u003Ccode\u003Ego version\u003C\u002Fcode\u003E to see if our runtime can support a build in Go.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003EFunction\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Faws-lambda\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAssetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EStack\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@aws-cdk\u002Fcore\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EExecSyncOptions\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Echild_process\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EExecSyncOptions\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Estdio\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eignore\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eprocess\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estderr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Einherit\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EMyFn\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ecode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003EassetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAssetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EOUTPUT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ebundling\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Ecommand\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esh\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E-c\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eecho \"Docker build not supported. Please install go.\"\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromRegistry\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ealpine\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Elocal\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nx\"\u003EtryBundle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ego version\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E...\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"na\"\u003Ecwd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Efns\u002Fgo\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n          \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eruntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EI've included some options for standard output from \u003Ccode\u003EexecSync\u003C\u002Fcode\u003E that work well for me on my terminal. For this project, I've structured things in such a way that my \u003Ccode\u003Ego.mod\u003C\u002Fcode\u003E and \u003Ccode\u003Ego.sum\u003C\u002Fcode\u003E are in the root of my project and my go source is in \u003Ccode\u003Efns\u002Fgo\u003C\u002Fcode\u003E. Because of that, I need to set the path of the build to the project root, then run the build command in \u003Ccode\u003Efns\u002Fgo\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor the uninitiated, \u003Ccode\u003Ego.mod\u003C\u002Fcode\u003E and \u003Ccode\u003Ego.sum\u003C\u002Fcode\u003E are for dependency management using \u003Ca href=\"https:\u002F\u002Fblog.golang.org\u002Fusing-go-modules\"\u003Ego modules\u003C\u002Fa\u003E. This is not completely unlike \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E and \u003Ccode\u003Epackage-lock.json\u003C\u002Fcode\u003E. I'm not crystal clear on best practices myself, but it does seem like these belong in the root. It is also typical to put a \u003Ccode\u003Emain.go\u003C\u002Fcode\u003E file in the root of a project, but that felt wrong for a polyglot project. By putting my dependency files in the root and my function code in directory parallel to \u003Ccode\u003Efns\u002Fts\u003C\u002Fcode\u003E (for TypeScript), I'm able to run my tests from the root of the project with \u003Ccode\u003Ego test .\u002F...\u003C\u002Fcode\u003E, while organizing my project in a way that makes sense to me.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is why setting \u003Ccode\u003EAssetHashType\u003C\u002Fcode\u003E to \u003Ccode\u003EOUTPUT\u003C\u002Fcode\u003E is so important, because I'm actually setting my source to the root of the project and I do not want to use the entire project as change detection for this one function.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn summation, I've organized my project in a way that makes sense to me and seems efficient. Is it the best practice? You tell me. I spent some time searching for answers and couldn't come up with one.\u003C\u002Fp\u003E\n\n\u003Cp\u003EA couple of other things to mention here about the build. Using local bundling, I very well may be running a build in an environment (MacOS in this case) that is different than my execution environment (Lambda, which is Amazon Linux). If I don't run a build that targets my environment, it's not going to work. Fortunately Go has me covered and by adding the \u003Ccode\u003EGOARCH=amd64 GOOS=linux\u003C\u002Fcode\u003E flags to my build, I'll target the right architecture and OS. As for \u003Ccode\u003Eldflags\u003C\u002Fcode\u003E, I admit that's a copy-paste. I read the docs and I'm still not sure why I'm doing it! Maybe it'll dawn on me some day.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFinally, I do have the option of making \u003Ccode\u003EtryBundle\u003C\u002Fcode\u003E a little more concise. Since \u003Ccode\u003EexecSync\u003C\u002Fcode\u003E will correctly throw an error if my build fails, I could skip \u003Ccode\u003Ego version\u003C\u002Fcode\u003E and just write:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"nx\"\u003EtryBundle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E...\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ecwd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Efns\u002Fgo\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIt's just a matter of taste here. Do you like the go version being output?\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"docker-bundling\" href=\"#docker-bundling\"\u003E\n  \u003C\u002Fa\u003E\n  Docker Bundling\u003Ca name=\"docker-bundling\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EDocker bundling could well be appropriate if we don't want to install Go on the build system. Using Docker builds might allow a polyglot app to be checked out and worked on by developers who don't use every language in the app. It might also work out well for apps written in languages that have many different versions available that could be on contributors' workstations. The Docker build could pin us to specific languages and versions. Let's see how that looks.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe have already provided the \u003Ccode\u003Ecommand\u003C\u002Fcode\u003E and \u003Ccode\u003Eimage\u003C\u002Fcode\u003E arguments to shy users away from Docker. Now we'll flip it around and use those commands to run a Docker build. First we need a base image other than \u003Ccode\u003Ealpine\u003C\u002Fcode\u003E. CDK is able to provide a suggestion here. The \u003Ccode\u003ERuntime\u003C\u002Fcode\u003E constant exposes a \u003Ccode\u003EbundlingDockerImage\u003C\u002Fcode\u003E for each available runtime.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"nx\"\u003Ebundling\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nl\"\u003Ecommand\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esh\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E-c\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eecho \"Need a command\"\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EbundlingDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EFor the NodeJS, Python, Java and some DotNet runtimes, this image will point to \u003Ccode\u003Eamazon\u002Faws-sam-cli-build-image-*\u003C\u002Fcode\u003E images, that are now maintained by the \u003Ca href=\"https:\u002F\u002Faws.amazon.com\u002Fserverless\u002Fsam\u002F\"\u003EAWS SAM\u003C\u002Fa\u003E project. For whatever reason, the Go image still (at the time of this writing) uses \u003Ccode\u003Elambci\u002Flambda:build-go1.x\u003C\u002Fcode\u003E from Michael Hart's \u003Ca href=\"https:\u002F\u002Fwww.lambci.org\u002F\"\u003Elambci\u003C\u002Fa\u003E project that originally inspired SAM. This image is perfectly good for my purposes, but by using a CDK constant, I do run the risk that some day this changes to another image, so I should keep an eye on that.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe way the Docker build works here is CDK will automatically map a volume of my build path (specified as the first argument of \u003Ccode\u003EfromAsset\u003C\u002Fcode\u003E) to \u003Ccode\u003E\u002Fasset-input\u003C\u002Fcode\u003E in the container. My build is expected to produce output to \u003Ccode\u003E\u002Fasset-output\u003C\u002Fcode\u003E in order to be considered successful.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs I noted above, my dependency files (\u003Ccode\u003Ego.mod\u003C\u002Fcode\u003E and \u003Ccode\u003Ego.sum\u003C\u002Fcode\u003E) are in the root of my project, so I need to set the input to the root of my project and the entire project is shared as volume. This is a little inefficient, but still relatively fast. The entire build is taking less than 20 seconds on my MBP.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo make this work, we'll set the \u003Ccode\u003Euser\u003C\u002Fcode\u003E and \u003Ccode\u003EworkingDirectory\u003C\u002Fcode\u003E properties. For \u003Ccode\u003EworkingDirectory\u003C\u002Fcode\u003E, we can map right into the directory with the go files \u003Ccode\u003E\u002Fasset-input\u002Ffns\u002Fgo\u003C\u002Fcode\u003E and save ourselves a clumsy \u003Ccode\u003Ecd\u003C\u002Fcode\u003E in the command. We'll also need to specify the user as \u003Ccode\u003Eroot\u003C\u002Fcode\u003E in order to create the go cache. For those experienced in Docker, this will stick out as a problem, but running a build as root isn't a big deal so long as we aren't running a production workload as root.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFinally we set the command to basically the same thing we had for local bundling and now we have a working build!\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"nx\"\u003Ebundling\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nl\"\u003Ecommand\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esh\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E-c\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EGOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o \u002Fasset-output\u002Fmain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EbundlingDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Euser\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eroot\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003EworkingDirectory\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E\u002Fasset-input\u002Ffns\u002Fgo\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESpecifying the architecture and OS may not be necessary since we should be building in a Lambda-friendly environment, but it also doesn't hurt. Notice the build outputs directly to \u003Ccode\u003E\u002Fasset-output\u002Fmain\u003C\u002Fcode\u003E. From there, CDK picks up the artifact and stages it for upload. You'll be able to see it under \u003Ccode\u003Ecdk.out\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"byo-dockerfile\" href=\"#byo-dockerfile\"\u003E\n  \u003C\u002Fa\u003E\n  BYO Dockerfile\u003Ca name=\"byo-dockerfile\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIf you're at all picky about your Docker builds, you probably want to provide your own Dockerfile. Of course you can! This is most emphatically \u003Cstrong\u003Enot\u003C\u002Fstrong\u003E an article on Docker best practices, but I took at shot at building a Dockerfile that ticks at least most of the boxes.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight docker\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003EFROM\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E lambci\u002Flambda:build-go1.x\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003EENV\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E APP_USER app\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EENV\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E APP_HOME \u002Fusr\u002Fapp\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EENV\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E ASSET_DIR \u002Fasset\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EENV\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E GOPATH $APP_HOME\u002Fgo\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EENV\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E GOARCH=amd64 GOOS=linux \u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003ERUN \u003C\u002Fspan\u003Egroupadd \u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E useradd \u003Cspan class=\"nt\"\u003E-m\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-g\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-l\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003ERUN \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Emkdir\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-p\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_HOME\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Echown\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-R\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E:\u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_HOME\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003ERUN \u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Emkdir\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-p\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$ASSET_DIR\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Echown\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-R\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E:\u003Cspan class=\"nv\"\u003E$APP_USER\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$ASSET_DIR\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EWORKDIR\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E $APP_HOME\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EUSER\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E $APP_USER\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003ECOPY\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E go.mod go.sum .\u002F\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003ERUN \u003C\u002Fspan\u003Ego mod download \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E go mod verify\n\n\u003Cspan class=\"k\"\u003ECOPY\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E \u002Ffns\u002Fgo\u002Fauthorizer.go .\u002F\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003ERUN \u003C\u002Fspan\u003Ego build \u003Cspan class=\"nt\"\u003E-ldflags\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"-s -w\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-o\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E$ASSET_DIR\u003C\u002Fspan\u003E\u002Fmain\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EI'm using a non-root user, caching dependencies and explicitly using \u003Ccode\u003ECOPY\u003C\u002Fcode\u003E instead of sharing the volume. Is that perfect? The point is you can build your own according to whatever practices you follow and CDK isn't going to silently share volumes or try to run as a particular user.\u003C\u002Fp\u003E\n\n\u003Cp\u003EImplementing this Dockerfile is pretty easy too. We can simply do this:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EAuthZFun\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ecode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromDockerBuild\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eruntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOne gotcha here is that you \u003Cstrong\u003Emust\u003C\u002Fstrong\u003E use an absolute path to your Dockerfile. I don't know why this is. It seems like a bug, as Docker can certainly build off a relative path, but when I try it my build fails with \u003Ccode\u003EGlobIgnoreStrategy expects an absolute file path\u003C\u002Fcode\u003E. Just use the full path and you'll be fine.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhat about combining local bundling and a fallback to a Dockerfile? Sure, we can support that!\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELambdaFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estack\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003EAuthZFun\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ecode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECode\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromAsset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EassetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAssetHashType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EOUTPUT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Ebundling\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ecommand\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Esh\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E-c\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ecp \u002Fasset\u002Fmain \u002Fasset-output\u002Fmain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDockerImage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EfromBuild\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003E__dirname\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Elocal\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nx\"\u003EtryBundle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ego version\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"cm\"\u003E\u002F* istanbul ignore next *\u002F\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nx\"\u003EexecSync\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EoutputDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E...\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EexecOptions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"na\"\u003Ecwd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ejoin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgoPath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Efns\u002Fgo\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n          \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003EworkingDirectory\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E\u002Fusr\u002Fapp\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}),\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ehandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eruntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ERuntime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGO_1_X\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EUsing the same Dockerfile, we now need to set our workingDirectory to \u003Ccode\u003E\u002Fusr\u002Fapp\u003C\u002Fcode\u003E, as specified by the Dockerfile. Otherwise, it'll default to \u003Ccode\u003E\u002Fasset-input\u003C\u002Fcode\u003E. Unfortunately this method will still do the (here unneeded and unnecessary) volume share, but we can dead-end that by ignoring the share in our Docker build. Note that we do need this command to copy our build from \u003Ccode\u003E\u002Fasset\u002Fmain\u003C\u002Fcode\u003E to \u003Ccode\u003E\u002Fasset-output\u002Fmain\u003C\u002Fcode\u003E. For one thing, the output dir isn't configurable in this build and for another, because the output is being delivered via another Docker share, just running the build won't do anything, even if the we output to \u003Ccode\u003E\u002Fasset-output\u002Fmain\u003C\u002Fcode\u003E during the Docker build. That's because the volume share doesn't happen until the built image is run with that command.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\u003Ca name=\"conclusion\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAll this said and done, I still prefer local builds and focus on those in my own work, but it's definitely useful to understand the other builds that are available here. I had a tough time figuring out some of the ins and outs of managing Docker builds.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI've said before that I find the API for bundling a little less intuitive than it needs to be, but the output is excellent. I can make a change to my stack, say, modifying the API Gateway \u003Ccode\u003EthrottlingRateLimit\u003C\u002Fcode\u003E. Then when I deploy, I'm treated to something like this:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Eregofyi: creating CloudFormation changeset...\n\u003Cspan class=\"o\"\u003E[\u003C\u002Fspan\u003E··························································] \u003Cspan class=\"o\"\u003E(\u003C\u002Fspan\u003E0\u002F2\u003Cspan class=\"o\"\u003E)\u003C\u002Fspan\u003E\n\n8:43:31 PM | UPDATE_IN_PROGRESS   | AWS::CloudFormation::Stack           | regofyi\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EEven though all my code was re-bundled, CDK correctly determined the build output hadn't changed, so it wasn't included in the changeset and I wound up with a really simple deployment.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fpicryl.com\u002Fmedia\u002Ffrieze-with-sea-monsters-778b2f\"\u003ECOVER IMAGE\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"This is my third article that deals with [asset bundling](https:\u002F\u002Fdocs.aws.amazon.com\u002Fcdk\u002Flatest\u002Fguide\u002Fassets.html) in [AWS CDK](https:\u002F\u002Faws.amazon.com\u002Fcdk\u002F). For more context, you may also be interested in:\n* [Lambda NodeJS]\n(https:\u002F\u002Fdev.to\u002Felthrasher\u002Faws-cdk-aws-lambda-nodejs-module-9ic)\n* [S3 Websites](https:\u002F\u002Fdev.to\u002Faws-builders\u002Faws-cdk-one-step-s3-websites-with-esbuild-2e3h)\n\nAsset management is one of the better features of CDK. We provide a path on the local filesystem and CDK will automatically stage the files in S3 and produce valid CloudFormation to use the files in Lambda, an S3 website, or any other use I may have for assets. The ability to bundle application code with infrastructure and push them together is a superpower and beats the heck out of anything that requires an s3 sync as an extra step.\n\nEven better is when we let CDK handle the bundling internally. Not only does this make for easy one-step builds, but we can also set rules for managing change. We can tell CDK how to diff our output, thereby ensuring updates are only made when necessary. This will save enormous amounts of time on larger stacks.\n\nI've covered use cases for TypeScript applications in Lambda and S3 websites in the articles linked above. In this article I'll explore how to add a function written in Go to a TypeScript CDK stack and gain all the same benefits we enjoy using a high-level construct like [aws-lambda-nodejs](https:\u002F\u002Fdocs.aws.amazon.com\u002Fcdk\u002Fapi\u002Flatest\u002Fdocs\u002Faws-lambda-nodejs-readme.html).\n\n## Table of Contents\n* \u003Ca href=\"#whygo\"\u003EWhy Go?\u003C\u002Fa\u003E\n* \u003Ca href=\"#asset-hash\"\u003EAsset Hash\u003C\u002Fa\u003E\n* \u003Ca href=\"#local-bundling\"\u003ELocal Bundling\u003C\u002Fa\u003E\n* \u003Ca href=\"#docker-bundling\"\u003EDocker Bundling\u003C\u002Fa\u003E\n* \u003Ca href=\"#byo-dockerfile\"\u003EBYO Dockerfile\u003C\u002Fa\u003E\n* \u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\n\n## Why Go?\u003Ca name=\"whygo\"\u003E\u003C\u002Fa\u003E\n\nI'm going to focus on running a build for a Lambda function written in Go in this post, but many of the same techniques could be leveraged for any kind of asset bundling. Go is a language that compiles to a binary while TypeScript compiles to JavaScript, so we're dipping our toes in very different worlds here. I've only recently begun to properly learn Go  (thanks [Cloud Academy](https:\u002F\u002Fcloudacademy.com\u002F)), so I've got a mix of googled hacks and assumed best practices. That's good enough to bundle into a CDK project.\n\nI used Go for a recent exploration of [Open Policy Agent]() in my [rego.fyi](https:\u002F\u002Frego.fyi) website. I'm going to show snippets from that app. [The full repo can be found here](https:\u002F\u002Fgithub.com\u002Felthrasher\u002Frego.fyi).\n \n## Asset Hash\u003Ca name=\"asset-hash\"\u003E\u003C\u002Fa\u003E\n\nLet's start with the best part first. The `AssetOptions` interface has three optional properties: `assetHash`, `assetHashType` and `bundling`. In fact, giving the asset options is optional. We can simply write:\n\n```TypeScript\nCode.fromAsset('\u002Fpath\u002Fto\u002Fmy\u002Fstuff');\n```\n\nThis will add the specified path as an asset. It isn't modified at all and the input path will be used to detect changes. The above code can be part of a Lambda function. Example:\n\n```TypeScript\nimport { Code, Function as LambdaFunction, Runtime } from '@aws-cdk\u002Faws-lambda';\nimport { join } from 'path';\n\nnew LambdaFunction(this, 'myFn', {\n  code: Code.fromAsset(join(__dirname, 'handler')),\n  runtime: Runtime.NODEJS_14_X,\n  handler: 'index.handler'\n});\n```\n\nor it could just be an asset you want uploaded to S3:\n\n```TypeScript\nimport { Asset } from '@aws-cdk\u002Faws-s3-assets';\nimport { join } from 'path';\n\nnew Asset(this, 'MyAsset', {\n  path: join(__dirname, 'myfile.txt')\n});\n```\n\nThere's obviously a difference here. `Code.fromAsset` takes the path as the first arg, then has an optional `AssetOptions` argument while `new Asset` is declared as a standalone construct that requires a scope and an id. The `Asset` construct takes a required third argument of `AssetProps` which extends `AssetOptions` but adds the required `path` property.\n\nBut wait there's more! You might be bundling for an S3 website.\n\n```TypeScript\nimport { BucketDeployment, Source } from '@aws-cdk\u002Faws-s3-deployment';\nimport { join } from 'path';\n\nnew BucketDeployment(stack, 'DeployWebsite', {\n  destinationBucket: new Bucket(stack, 'WebsiteBucket', {\n    autoDeleteObjects: true,\n    publicReadAccess: true,\n    removalPolicy: RemovalPolicy.DESTROY,\n    websiteIndexDocument: 'index.html',\n  }),\n  distribution,\n  distributionPaths: ['\u002F*'],\n  sources: [Source.asset(join(__dirname, '..\u002Fpath\u002Fto\u002Fasset'))],\n});\n```\n\nOr maybe you're building a Docker image?\n\n```TypeScript\nimport { DockerImageAsset } from '@aws-cdk\u002Faws-ecr-assets';\nimport { join } from 'path';\n\nnew DockerImageAsset(this, 'MyBuildImage', {\n  directory: join(__dirname, 'my-image')\n});\n```\n\nSeems confusing? It's actually not that bad. We have a common interface used for building Lambda functions, miscellaneous assets, S3 websites, Docker images and anything else you may wish to transform in a build pipeline. Now that that's clear, let's dig into that `AssetOptions` interface.\n\nThe `assetHash` property would be appropriate if you wanted to generate your own hash instead of letting CDK manage that for you. Most of the time you won't want to use this, but it's good it's there if you need it.\n\nI'm more interested in `assetHashType`. We get a couple of options to consider: `OUTPUT` and `SOURCE`. There is also `BUNDLE`, deprecated by `OUTPUT`, and `CUSTOM`, which just means `assetHash` is provided. Between `OUTPUT` and `SOURCE`, `SOURCE` is the default, but I think I prefer `OUTPUT`. If my inputs change (perhaps a library bump) but my output doesn't (that library bump had no impact on the bundled code), then do I really want to deploy new code?\n\nI'll go into another reason for preferring `OUTPUT` later in the article. The takeaway here is we have a lot of flexibility to hash the input, output or provide our own hash. That's great because controlling this feature will make deployments faster. We'll spend less time staring at [progress bars](http:\u002F\u002Fprogressquest.com\u002F) and we'll also be able to respond more quickly to operational issues. This will speed up our dev cycle as well. It's a great feeling running a stack with 11 Lambda Functions, making a change to just one of them and then having a very quick deployment as CDK identifies the one that changed and deploys an update only for that one.\n\n## Local Bundling\u003Ca name=\"local-bundling\"\u003E\u003C\u002Fa\u003E\n\nLet's move onto the final optional property of `AssetOptions`, bundling. We're going to need to use this if we want to run any kind of build or compilation process on our code. We *could* run that as a separate process and then use the output of that process as our asset, but doing it as part of the CDK build is much better.\n\nThe default for bundling is to use Docker, even if you aren't aiming to produce an image. This makes sense for some purposes and will cause problems for others. If our build environment runs a different operating system than our production environment and we are compiling binaries, we may need Docker builds. On the other hand, we might be building in an environment that doesn't run Docker. We could even be building in a Docker environment where spawning a new container from the current one (Docker-in-Docker) is not allowed!\n\nLet's start from a place where we do **not** want to use Docker. Unfortunately we can't just leave Docker out entirely. The `image` property of `bundling` is required. Instead let's just let the user know that we aren't supporting a Docker build.\n\n```TypeScript\nnew LambdaFunction(stack, 'MyFn', {\n    code: Code.fromAsset(myPath, {\n      assetHashType: AssetHashType.OUTPUT,\n      bundling: {\n        command: ['sh', '-c', 'echo \"Docker build not supported. Please install go.\"'],\n        image: DockerImage.fromRegistry('alpine'),\n      },\n    }),\n    handler: 'main',\n    runtime: Runtime.GO_1_X,\n  });\n```\n\nIf local bundling fails, now we at least have a meaningful error message to the user. Of course the above code will fail every build, so we have more work to do. Let's add local bundling. The `local` property of `bundling` must implement `ILocalBundling`, an object with one method, `tryBundle` that receives the `outputDir` as an argument and must return a boolean type. If `tryBundle` returns true and some code artifact is found in `outputDir`, then CDK will see the build as successful and skip the Docker build. `tryBundle` is synchronous and will not resolve promises so we need a strategy for running the build synchronously and accurately reporting whether or not it was successful.\n\nTo synchronously run our build, we'll use `execSync` from the nodejs [child_process](https:\u002F\u002Fnodejs.org\u002Fdist\u002Flatest-v14.x\u002Fdocs\u002Fapi\u002Fchild_process.html#child_process_child_process_execsync_command_options) module. `tryBundle` should implement try\u002Fcatch to ensure it returns a boolean about the state of our build. It's common practice to execute some kind of test to see if the runtime supports our build. We could use `go version` to see if our runtime can support a build in Go.\n\n```TypeScript\nimport { Code, Function as LambdaFunction, Runtime } from '@aws-cdk\u002Faws-lambda';\nimport { AssetHashType, DockerImage, Stack } from '@aws-cdk\u002Fcore';\nimport { execSync, ExecSyncOptions } from 'child_process';\nimport { join } from 'path';\n\nconst execOptions: ExecSyncOptions = { stdio: ['ignore', process.stderr, 'inherit'] };\nconst goPath = join(__dirname, '..');\n\nnew LambdaFunction(stack, 'MyFn', {\n    code: Code.fromAsset(goPath, {\n      assetHashType: AssetHashType.OUTPUT,\n      bundling: {\n        command: ['sh', '-c', 'echo \"Docker build not supported. Please install go.\"'],\n        image: DockerImage.fromRegistry('alpine'),\n      },\n      local: {\n        tryBundle(outputDir: string) {\n          try {\n            execSync('go version', execOptions);\n          } catch {\n            return false;\n          }\n          execSync(`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o ${join(outputDir, 'main')}`, {\n            ...execOptions,\n            cwd: join(goPath, 'fns\u002Fgo'),\n          });\n          return true;\n        }\n      }\n    }),\n    handler: 'main',\n    runtime: Runtime.GO_1_X,\n  });\n```\n\nI've included some options for standard output from `execSync` that work well for me on my terminal. For this project, I've structured things in such a way that my `go.mod` and `go.sum` are in the root of my project and my go source is in `fns\u002Fgo`. Because of that, I need to set the path of the build to the project root, then run the build command in `fns\u002Fgo`.\n\nFor the uninitiated, `go.mod` and `go.sum` are for dependency management using [go modules](https:\u002F\u002Fblog.golang.org\u002Fusing-go-modules). This is not completely unlike `package.json` and `package-lock.json`. I'm not crystal clear on best practices myself, but it does seem like these belong in the root. It is also typical to put a `main.go` file in the root of a project, but that felt wrong for a polyglot project. By putting my dependency files in the root and my function code in directory parallel to `fns\u002Fts` (for TypeScript), I'm able to run my tests from the root of the project with `go test .\u002F...`, while organizing my project in a way that makes sense to me.\n\nThis is why setting `AssetHashType` to `OUTPUT` is so important, because I'm actually setting my source to the root of the project and I do not want to use the entire project as change detection for this one function.\n\nIn summation, I've organized my project in a way that makes sense to me and seems efficient. Is it the best practice? You tell me. I spent some time searching for answers and couldn't come up with one.\n\nA couple of other things to mention here about the build. Using local bundling, I very well may be running a build in an environment (MacOS in this case) that is different than my execution environment (Lambda, which is Amazon Linux). If I don't run a build that targets my environment, it's not going to work. Fortunately Go has me covered and by adding the `GOARCH=amd64 GOOS=linux` flags to my build, I'll target the right architecture and OS. As for `ldflags`, I admit that's a copy-paste. I read the docs and I'm still not sure why I'm doing it! Maybe it'll dawn on me some day.\n\nFinally, I do have the option of making `tryBundle` a little more concise. Since `execSync` will correctly throw an error if my build fails, I could skip `go version` and just write:\n\n```TypeScript\ntryBundle(outputDir: string) {\n  try {\n    execSync(`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o ${join(outputDir, 'main')}`, {\n      ...execOptions,\n      cwd: join(goPath, 'fns\u002Fgo'),\n    });\n    return true;\n  } catch {\n    return false;\n  }\n},\n```\n\nIt's just a matter of taste here. Do you like the go version being output?\n\n## Docker Bundling\u003Ca name=\"docker-bundling\"\u003E\u003C\u002Fa\u003E\n\nDocker bundling could well be appropriate if we don't want to install Go on the build system. Using Docker builds might allow a polyglot app to be checked out and worked on by developers who don't use every language in the app. It might also work out well for apps written in languages that have many different versions available that could be on contributors' workstations. The Docker build could pin us to specific languages and versions. Let's see how that looks.\n\nWe have already provided the `command` and `image` arguments to shy users away from Docker. Now we'll flip it around and use those commands to run a Docker build. First we need a base image other than `alpine`. CDK is able to provide a suggestion here. The `Runtime` constant exposes a `bundlingDockerImage` for each available runtime.\n\n```TypeScript\nbundling: {\n  command: ['sh', '-c', 'echo \"Need a command\"'],\n  image: Runtime.GO_1_X.bundlingDockerImage,\n}\n```\n\nFor the NodeJS, Python, Java and some DotNet runtimes, this image will point to `amazon\u002Faws-sam-cli-build-image-*` images, that are now maintained by the [AWS SAM](https:\u002F\u002Faws.amazon.com\u002Fserverless\u002Fsam\u002F) project. For whatever reason, the Go image still (at the time of this writing) uses `lambci\u002Flambda:build-go1.x` from Michael Hart's [lambci](https:\u002F\u002Fwww.lambci.org\u002F) project that originally inspired SAM. This image is perfectly good for my purposes, but by using a CDK constant, I do run the risk that some day this changes to another image, so I should keep an eye on that.\n\nThe way the Docker build works here is CDK will automatically map a volume of my build path (specified as the first argument of `fromAsset`) to `\u002Fasset-input` in the container. My build is expected to produce output to `\u002Fasset-output` in order to be considered successful.\n\nAs I noted above, my dependency files (`go.mod` and `go.sum`) are in the root of my project, so I need to set the input to the root of my project and the entire project is shared as volume. This is a little inefficient, but still relatively fast. The entire build is taking less than 20 seconds on my MBP.\n\nTo make this work, we'll set the `user` and `workingDirectory` properties. For `workingDirectory`, we can map right into the directory with the go files `\u002Fasset-input\u002Ffns\u002Fgo` and save ourselves a clumsy `cd` in the command. We'll also need to specify the user as `root` in order to create the go cache. For those experienced in Docker, this will stick out as a problem, but running a build as root isn't a big deal so long as we aren't running a production workload as root.\n\nFinally we set the command to basically the same thing we had for local bundling and now we have a working build!\n\n```TypeScript\nbundling: {\n  command: ['sh', '-c', 'GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o \u002Fasset-output\u002Fmain'],\n  image: Runtime.GO_1_X.bundlingDockerImage,\n  user: 'root',\n  workingDirectory: '\u002Fasset-input\u002Ffns\u002Fgo',\n},\n```\n\nSpecifying the architecture and OS may not be necessary since we should be building in a Lambda-friendly environment, but it also doesn't hurt. Notice the build outputs directly to `\u002Fasset-output\u002Fmain`. From there, CDK picks up the artifact and stages it for upload. You'll be able to see it under `cdk.out`.\n\n## BYO Dockerfile\u003Ca name=\"byo-dockerfile\"\u003E\u003C\u002Fa\u003E\n\nIf you're at all picky about your Docker builds, you probably want to provide your own Dockerfile. Of course you can! This is most emphatically **not** an article on Docker best practices, but I took at shot at building a Dockerfile that ticks at least most of the boxes.\n\n```Dockerfile\nFROM lambci\u002Flambda:build-go1.x\n\nENV APP_USER app\nENV APP_HOME \u002Fusr\u002Fapp\nENV ASSET_DIR \u002Fasset\nENV GOPATH $APP_HOME\u002Fgo\nENV GOARCH=amd64 GOOS=linux \nRUN groupadd $APP_USER && useradd -m -g $APP_USER -l $APP_USER\nRUN mkdir -p $APP_HOME && chown -R $APP_USER:$APP_USER $APP_HOME\nRUN mkdir -p $ASSET_DIR && chown -R $APP_USER:$APP_USER $ASSET_DIR\nWORKDIR $APP_HOME\nUSER $APP_USER\n\nCOPY go.mod go.sum .\u002F\n\nRUN go mod download && go mod verify\n\nCOPY \u002Ffns\u002Fgo\u002Fauthorizer.go .\u002F\n\nRUN go build -ldflags=\"-s -w\" -o $ASSET_DIR\u002Fmain\n```\n\nI'm using a non-root user, caching dependencies and explicitly using `COPY` instead of sharing the volume. Is that perfect? The point is you can build your own according to whatever practices you follow and CDK isn't going to silently share volumes or try to run as a particular user.\n\nImplementing this Dockerfile is pretty easy too. We can simply do this:\n\n```TypeScript\nnew LambdaFunction(stack, 'AuthZFun', {\n  code: Code.fromDockerBuild(join(__dirname, '..')),\n  handler: 'main',\n  runtime: Runtime.GO_1_X,\n});\n```\n\nOne gotcha here is that you **must** use an absolute path to your Dockerfile. I don't know why this is. It seems like a bug, as Docker can certainly build off a relative path, but when I try it my build fails with `GlobIgnoreStrategy expects an absolute file path`. Just use the full path and you'll be fine.\n\nWhat about combining local bundling and a fallback to a Dockerfile? Sure, we can support that!\n\n```TypeScript\nnew LambdaFunction(stack, 'AuthZFun', {\n  code: Code.fromAsset(goPath, {\n    assetHashType: AssetHashType.OUTPUT,\n    bundling: {\n      command: ['sh', '-c', 'cp \u002Fasset\u002Fmain \u002Fasset-output\u002Fmain'],\n      image: DockerImage.fromBuild(join(__dirname, '..')),\n      local: {\n        tryBundle(outputDir: string) {\n          try {\n            execSync('go version', execOptions);\n          } catch \u002F* istanbul ignore next *\u002F {\n            return false;\n          }\n          execSync(`GOARCH=amd64 GOOS=linux go build -ldflags=\"-s -w\" -o ${join(outputDir, 'main')}`, {\n            ...execOptions,\n            cwd: join(goPath, 'fns\u002Fgo'),\n          });\n          return true;\n        },\n      },\n      workingDirectory: '\u002Fusr\u002Fapp',\n    },\n  }),\n  handler: 'main',\n  runtime: Runtime.GO_1_X,\n});\n```\nUsing the same Dockerfile, we now need to set our workingDirectory to `\u002Fusr\u002Fapp`, as specified by the Dockerfile. Otherwise, it'll default to `\u002Fasset-input`. Unfortunately this method will still do the (here unneeded and unnecessary) volume share, but we can dead-end that by ignoring the share in our Docker build. Note that we do need this command to copy our build from `\u002Fasset\u002Fmain` to `\u002Fasset-output\u002Fmain`. For one thing, the output dir isn't configurable in this build and for another, because the output is being delivered via another Docker share, just running the build won't do anything, even if the we output to `\u002Fasset-output\u002Fmain` during the Docker build. That's because the volume share doesn't happen until the built image is run with that command.\n\n## Conclusion\u003Ca name=\"conclusion\"\u003E\u003C\u002Fa\u003E\n\nAll this said and done, I still prefer local builds and focus on those in my own work, but it's definitely useful to understand the other builds that are available here. I had a tough time figuring out some of the ins and outs of managing Docker builds.\n\nI've said before that I find the API for bundling a little less intuitive than it needs to be, but the output is excellent. I can make a change to my stack, say, modifying the API Gateway `throttlingRateLimit`. Then when I deploy, I'm treated to something like this:\n\n```bash\nregofyi: creating CloudFormation changeset...\n[··························································] (0\u002F2)\n\n8:43:31 PM | UPDATE_IN_PROGRESS   | AWS::CloudFormation::Stack           | regofyi\n```\n\nEven though all my code was re-bundled, CDK correctly determined the build output hadn't changed, so it wasn't included in the changeset and I wound up with a really simple deployment.\n\n[COVER IMAGE](https:\u002F\u002Fpicryl.com\u002Fmedia\u002Ffrieze-with-sea-monsters-778b2f)",user:{name:"Matt Morgan",username:e,twitter_username:"NullishCoalesce",github_username:e,website_url:"https:\u002F\u002Fmattmorgan.cloud",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--8UUw_PNP--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F248623\u002F3bc01c08-2153-41ed-8d52-c8845f3a917a.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--rcDDDhWL--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F248623\u002F3bc01c08-2153-41ed-8d52-c8845f3a917a.jpeg"},organization:{name:"AWS Community Builders ",username:f,slug:f,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--zmOZQNzv--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2794\u002F88da75b6-aadd-4ea1-8083-ae2dfca8be94.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--vWmcJ-ty--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2794\u002F88da75b6-aadd-4ea1-8083-ae2dfca8be94.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Felthrasher\u002F641503",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"https:\u002F\u002Fdev.to\u002Faws-builders\u002Faws-cdk-fullstack-polyglot-with-asset-bundling-318h",22,"2021-03-24T11:24:37Z","elthrasher","aws-builders"));