window.__NUXT__=(function(a,b,c,d,e,f){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:706505,title:"#30DaysOfAppwrite : Week#3 Recap",description:"It's a wrap! Week 3 of #30daysOfAppwrite is now officially over! We learnt so much during this week t...",readable_publish_date:"May 23",slug:"30daysofappwrite-week-3-recap-4486",path:"\u002Fappwrite\u002F30daysofappwrite-week-3-recap-4486",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--eM7D83Fv--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F17xdoupa4q0zwebde2o1.jpg",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ji1ek-PI--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F17xdoupa4q0zwebde2o1.jpg",canonical_url:c,created_at:"2021-05-23T16:49:29Z",edited_at:a,crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:3,tag_list:"javascript, webdev, flutter, 30daysofappwrite",tags:["javascript","webdev","flutter","30daysofappwrite"],body_html:"\u003Cp\u003EIt's a wrap! Week 3 of #30daysOfAppwrite is now officially over! We learnt so much during this week that its hard to talk about everything here! So here's a quick summary and links to the original posts if you would like to learn more. Grab some üçø popcorn and read along! But before we start we just want to say that \u003Cstrong\u003Eyou gave us a reason to enjoy this weekend\u003C\u002Fstrong\u003E and we love you for that! You helped us make it to Github Trending again! \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5adIfpuv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fs95g20feekdtmeml18rb.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5adIfpuv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fs95g20feekdtmeml18rb.png\" alt=\"Trending\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"appwrite-database\" href=\"#appwrite-database\"\u003E\n  \u003C\u002Fa\u003E\n  üë©‚Äçüíª Appwrite Database\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn Day 15, we introduced you all to the \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-database-22an\"\u003EAppwrite Database\u003C\u002Fa\u003E. We learnt about the different concepts revolving around the database like documents, collections, rules, permissions, filters, nested documents etc. We taught you how you can create your first collection in Appwrite using a \u003Cstrong\u003EBooks Collection\u003C\u002Fstrong\u003E as an example.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"database-design\" href=\"#database-design\"\u003E\n  \u003C\u002Fa\u003E\n  üßê Database Design\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-database-design-140a\"\u003EDay 16\u003C\u002Fa\u003E we designed the collections required for our blog app. We have two entities in our blog namely Posts and Users. We created collections for each of them using the concepts we learnt on Day 15.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"create-user-profiles\" href=\"#create-user-profiles\"\u003E\n  \u003C\u002Fa\u003E\n  üöÄ Create User Profiles\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-create-user-profiles-1c3m\"\u003EDay 17\u003C\u002Fa\u003E we learnt how to leverage the database and create public profiles for users that sign up. We went back to our blog demo and wrote a lot of markup and JS code to make this possible. \u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"create-blog-posts\" href=\"#create-blog-posts\"\u003E\n  \u003C\u002Fa\u003E\n  ‚úçÔ∏è Create Blog Posts\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-create-blog-posts-31fi\"\u003EDay 18\u003C\u002Fa\u003E we finally added support for you to create and view all your blog posts! We also created a home page to display all your amazing blog articles!\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"appwrite-storage-api\" href=\"#appwrite-storage-api\"\u003E\n  \u003C\u002Fa\u003E\n  üíø Appwrite Storage API\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-storage-api-hgm\"\u003EDay 19\u003C\u002Fa\u003E we learnt how Appwrite manages your files in storage. We learnt about file permissions and how you can use them to restrict access to your users' files. We also explored all the endpoints in the Storage API. We also talked about the ongoing work to integrate storage buckets like S3 opening up a world of possibilities for Appwrite users!\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"file-uploads-and-downloads\" href=\"#file-uploads-and-downloads\"\u003E\n  \u003C\u002Fa\u003E\n  üìÇ File uploads and downloads\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn Day 20 we added \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-file-uploads-and-downloads-1dld\"\u003Efile upload and download\u003C\u002Fa\u003E functionality to our blog app! User's of our blog app can now upload cover images for their articles! Now that's a neat feature to have!\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"appwrite-avatars-api\" href=\"#appwrite-avatars-api\"\u003E\n  \u003C\u002Fa\u003E\n  üë® Appwrite Avatars API\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn Day 21 we explored \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-avatars-api-epi\"\u003EAppwrite's Avatars API\u003C\u002Fa\u003E! It's a really cool and fun little API that allows you to fetch favicons, fetch remote images and serve them securely over TLS, generate avatar images and even generate QR Codes! \u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"appwrite-cli\" href=\"#appwrite-cli\"\u003E\n  \u003C\u002Fa\u003E\n  üíª Appwrite CLI\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOn day 22 we looked at one of Appwrite's favourite tools! Yes you guessed it! \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-cli-2mde\"\u003EThe Appwrite CLI\u003C\u002Fa\u003E. We walked through the steps to install the CLI and learnt the usage of some sample commands!\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--uPcx7xjo--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fa2mwut8co8z3gsnd0oic.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--uPcx7xjo--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fa2mwut8co8z3gsnd0oic.png\" alt=\"CLI\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"%E2%8F%AD-whats-next-\" href=\"#%E2%8F%AD-whats-next-\"\u003E\n  \u003C\u002Fa\u003E\n  ‚è≠ What's next ?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn the last week of #30DaysOfAppwrite, we'll cover Appwrite's most powerful feature, ‚òÅÔ∏è \u003Cstrong\u003ECloud Functions!\u003C\u002Fstrong\u003E The reason Cloud Functions are so cool üòé is that they allow you to implement any kind of custom logic that you would want for your Application! You can integrate with \u003Cstrong\u003E3rd party apps and services\u003C\u002Fstrong\u003E, interact with 3rd party APIs and lots more! The possibilities are endless! We will teach you what it takes to create and deploy your first Cloud Function. \u003C\u002Fp\u003E\n\n\u003Cp\u003EWe will follow up with some interesting examples of cloud functions triggered using \u003Cstrong\u003Eevents and CRON Jobs\u003C\u002Fstrong\u003E. Next up is \u003Cstrong\u003EJWT support\u003C\u002Fstrong\u003E that was introduced in our latest Release \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fappwrite\u002Fannouncing-appwrite-0-8-an-open-source-self-hosted-baas-kda\"\u003EüöÄ Appwrite 0.8\u003C\u002Fa\u003E. Deploying Appwrite in production is our next topic where we teach you the best practices while deploying your own instance of Appwrite on your servers. \u003C\u002Fp\u003E\n\n\u003Cp\u003EIf üê≥ \u003Cstrong\u003EDocker Swarm and Grafana\u003C\u002Fstrong\u003E integration sounds exciting to you, that's exactly what's next! We've saved all the coolest stuff in Appwrite for the last week, so make sure you don't miss out on anything! ü§©\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can follow \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fsearch?q=%2330daysofappwrite\"\u003E#30DaysOfAppwrite\u003C\u002Fa\u003E on Social Media to keep up with all of our posts. The complete event timeline can be found \u003Ca href=\"http:\u002F\u002F30days.appwrite.io\"\u003Ehere\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fappwrite.io\u002Fdiscord\"\u003EDiscord Server\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"https:\u002F\u002Fappwrite.io\u002F\"\u003EAppwrite Homepage\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fappwrite\"\u003EAppwrite's Github\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EFeel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns ü¶Ñ. Stay tuned for tomorrow's article! Until then üëã\u003C\u002Fp\u003E\n\n",body_markdown:"It's a wrap! Week 3 of #30daysOfAppwrite is now officially over! We learnt so much during this week that its hard to talk about everything here! So here's a quick summary and links to the original posts if you would like to learn more. Grab some üçø popcorn and read along! But before we start we just want to say that **you gave us a reason to enjoy this weekend** and we love you for that! You helped us make it to Github Trending again! \n\n![Trending](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fs95g20feekdtmeml18rb.png)\n \n\n### üë©‚Äçüíª Appwrite Database\nOn Day 15, we introduced you all to the [Appwrite Database](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-database-22an). We learnt about the different concepts revolving around the database like documents, collections, rules, permissions, filters, nested documents etc. We taught you how you can create your first collection in Appwrite using a **Books Collection** as an example.\n\n### üßê Database Design \nOn [Day 16](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-database-design-140a) we designed the collections required for our blog app. We have two entities in our blog namely Posts and Users. We created collections for each of them using the concepts we learnt on Day 15.\n\n### üöÄ Create User Profiles\nOn [Day 17](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-create-user-profiles-1c3m) we learnt how to leverage the database and create public profiles for users that sign up. We went back to our blog demo and wrote a lot of markup and JS code to make this possible. \n\n### ‚úçÔ∏è Create Blog Posts\nOn [Day 18](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-create-blog-posts-31fi) we finally added support for you to create and view all your blog posts! We also created a home page to display all your amazing blog articles!\n\n### üíø Appwrite Storage API\nOn [Day 19](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-storage-api-hgm) we learnt how Appwrite manages your files in storage. We learnt about file permissions and how you can use them to restrict access to your users' files. We also explored all the endpoints in the Storage API. We also talked about the ongoing work to integrate storage buckets like S3 opening up a world of possibilities for Appwrite users!\n\n### üìÇ File uploads and downloads\nOn Day 20 we added [file upload and download](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-file-uploads-and-downloads-1dld) functionality to our blog app! User's of our blog app can now upload cover images for their articles! Now that's a neat feature to have!\n\n### üë® Appwrite Avatars API\nOn Day 21 we explored [Appwrite's Avatars API](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-avatars-api-epi)! It's a really cool and fun little API that allows you to fetch favicons, fetch remote images and serve them securely over TLS, generate avatar images and even generate QR Codes! \n\n### üíª Appwrite CLI\nOn day 22 we looked at one of Appwrite's favourite tools! Yes you guessed it! [The Appwrite CLI](https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-appwrite-cli-2mde). We walked through the steps to install the CLI and learnt the usage of some sample commands!\n\n![CLI](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fa2mwut8co8z3gsnd0oic.png)\n \n\n## ‚è≠ What's next ?\nIn the last week of #30DaysOfAppwrite, we'll cover Appwrite's most powerful feature, ‚òÅÔ∏è **Cloud Functions!** The reason Cloud Functions are so cool üòé is that they allow you to implement any kind of custom logic that you would want for your Application! You can integrate with **3rd party apps and services**, interact with 3rd party APIs and lots more! The possibilities are endless! We will teach you what it takes to create and deploy your first Cloud Function. \n\nWe will follow up with some interesting examples of cloud functions triggered using **events and CRON Jobs**. Next up is **JWT support** that was introduced in our latest Release [üöÄ Appwrite 0.8](https:\u002F\u002Fdev.to\u002Fappwrite\u002Fannouncing-appwrite-0-8-an-open-source-self-hosted-baas-kda). Deploying Appwrite in production is our next topic where we teach you the best practices while deploying your own instance of Appwrite on your servers. \n\nIf üê≥ **Docker Swarm and Grafana** integration sounds exciting to you, that's exactly what's next! We've saved all the coolest stuff in Appwrite for the last week, so make sure you don't miss out on anything! ü§©\n\nYou can follow [#30DaysOfAppwrite](https:\u002F\u002Ftwitter.com\u002Fsearch?q=%2330daysofappwrite) on Social Media to keep up with all of our posts. The complete event timeline can be found [here](http:\u002F\u002F30days.appwrite.io)\n\n* [Discord Server](https:\u002F\u002Fappwrite.io\u002Fdiscord)\n* [Appwrite Homepage](https:\u002F\u002Fappwrite.io\u002F)  \n* [Appwrite's Github](https:\u002F\u002Fgithub.com\u002Fappwrite)\n\nFeel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns ü¶Ñ. Stay tuned for tomorrow's article! Until then üëã\n",user:{name:"Christy Jacob",username:e,twitter_username:a,github_username:e,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xsn7j9ry--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F119691\u002F5be2bcad-e1ee-4ef8-928b-d71f4e355af6.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--IX4ROHsY--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F119691\u002F5be2bcad-e1ee-4ef8-928b-d71f4e355af6.png"},organization:{name:"Appwrite",username:f,slug:f,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--MwfZh3wG--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2225\u002Feb541cf9-84f4-4101-987c-c219cd4b34fc.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5xS_iZdD--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2225\u002Feb541cf9-84f4-4101-987c-c219cd4b34fc.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Fchristyjacob4\u002F706505",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-05-23T16:54:40Z","https:\u002F\u002Fdev.to\u002Fappwrite\u002F30daysofappwrite-week-3-recap-4486",13,"christyjacob4","appwrite"));