__NUXT_JSONP__("/articles/sandordargo/618002", (function(a,b,c,d,e,f){c.type_of="article";c.id=618002;c.title="Clean Agile: Back to Basics by Robert C. Martin";c.description="Clean Agile comes from Uncle Bob, one of the founding fathers of Agile, one of the seventeen people w...";c.readable_publish_date="Feb 27";c.slug="clean-agile-back-to-basics-by-robert-c-martin-2ac8";c.path="\u002Fsandordargo\u002Fclean-agile-back-to-basics-by-robert-c-martin-2ac8";c.url="https:\u002F\u002Fdev.to\u002Fsandordargo\u002Fclean-agile-back-to-basics-by-robert-c-martin-2ac8";c.comments_count=0;c.public_reactions_count=d;c.collection_id=a;c.published_timestamp=b;c.positive_reactions_count=d;c.cover_image=a;c.social_image="https:\u002F\u002Fdev.to\u002Fsocial_previews\u002Farticle\u002F618002.png";c.canonical_url="https:\u002F\u002Fwww.sandordargo.com\u002Fblog\u002F2021\u002F02\u002F27\u002Fclean-agile-by-uncle-bob";c.created_at="2021-02-25T12:52:30Z";c.edited_at="2021-03-20T14:09:27Z";c.crossposted_at=a;c.published_at=b;c.last_comment_at=b;c.reading_time_minutes=5;c.tag_list="books, watercooler, agile, projectmanagement";c.tags=["books",e,"agile","projectmanagement"];c.body_html="\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Famzn.to\u002F3qHjlaq\"\u003EClean Agile\u003C\u002Fa\u003E comes from \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Funclebobmartin\"\u003EUncle Bob\u003C\u002Fa\u003E, one of the founding fathers of Agile, one of the seventeen people who authored the \u003Ca href=\"https:\u002F\u002Fagilemanifesto.org\u002F\"\u003EAgile Manifesto\u003C\u002Fa\u003E back in 2001.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI thought he might have some interesting thoughts on the beast they released on the software development industry.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHe taught me even more.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe role of this book was perfectly summarized in the afterword by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmisteregc\"\u003EEric Crichlow\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cem\u003EImagine the significance of having a view into the origins of your religion, an understanding of the events and thoughts that shaped what would become canon for you. When it comes to your professional life, thatâ€™s exactly what you have here.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EAs the author wrote, it's not a book of research. It's rather the opinions of someone who was involved in Agile for about 20 years. I think it's a little bit more. The book reflects the opinion of multiple people. There are two chapters that are at least partly written by others.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThere is a chapter written by the author of \u003Ca href=\"https:\u002F\u002Famzn.to\u002F3klK0Y9\"\u003ESoftware Craftsmanship\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fsandromancuso\"\u003ESandro Mancuso\u003C\u002Fa\u003E on - guess what - software craftsmanship. More on that later.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fsandromancuso\"\u003ETimm Ottinger\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fjlangr\"\u003EJeff Langr\u003C\u002Fa\u003E also contributed to the book with a few sections on Agile Tools.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhat I feel more important to mention that Uncle Bob included a part written by a friend of his \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdamonpoole?lang=en\"\u003EDamon Poole\u003C\u002Fa\u003E on coaching. I feel this important to mention because as he emphasized, they don't agree on so many things. Including agile coaching. Yet he asked Poole to contribute to his book and express his different ideas on his platform.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese days it's so rare to listen to other opinions, not to mention having conversations with people who see certain questions or the world completely different. \u003C\u002Fp\u003E\n\n\u003Cp\u003ELet's see a couple of things I found important in this book.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"what-is-agile-about\" href=\"#what-is-agile-about\"\u003E\n  \u003C\u002Fa\u003E\n  What is agile about?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAgile is about organizing small teams in order to solve small problems.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe question of big teams for big problems is already solved. Telephone networks, highway networks, cars are already built. Those are big problems and big teams solved them rather successfully. And we haven't even mentioned running states... Should we start talking once again about the Roman Empire?\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe could think about big teams for small problems, but those teams shouldn't exist and usually, they don't. The market wouldn't let them survive.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhat about small things for big problems? Writing the control software for the Mercury space capsule is a big task? It seems so. Yet it was done by a small team and they managed to do it with half-day iterations and everything was unit-tested.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI already mentioned once in the last paragraphs the Roman Empire, and those Romans knew something well. They could organize small squads into legions that conquered vast territories from England to the Tiger and Eufrates, from The Atlantic Ocean to the Black Sea.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYet, Agile is for something else. It's about small teams for small \u003Cstrong\u003E\u003Cem\u003Esoftware\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E problems.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHence the author is not really fond of those scaled agile frameworks. They might work, but he hasn't seen a lot - this is kind of the same thing that \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FNicolasChaillan\"\u003ENicolas Chaillan\u003C\u002Fa\u003E Chief Software Officer of the US Air Force said about \u003Ca href=\"https:\u002F\u002Fwww.smharter.com\u002Fblog\u002Fsafe-a-collection-of-comments-from-leading-experts\u002F\"\u003Escaled agile frameworks\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHence, the agile he talks about throughout the book is not the scaled one.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"agile-without-technical-practices-is-not-agile\" href=\"#agile-without-technical-practices-is-not-agile\"\u003E\n  \u003C\u002Fa\u003E\n  Agile without technical practices is not agile\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe agile he talks about is also not the one without technical practices. \"Any attempt to employ Agile practices without the technical practices is doomed to fail.\" As one of the agile coaches I worked with said, people who delivered crap before working in scrum, will deliver the same crap within scrum too... Unless they start using agile technical practices, such as pair programming, refactoring, TDD...\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is definitely something Uncle Bob and David Poole agrees on. Too bad that I've seen too many coaches who didn't promote those technical practices and seemingly they wouldn't even have been able to.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI think it's quite obvious that we cannot simply start delivering better software just by start attending daily standups and by complaining every couple of weeks in retrospectives.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe need to change the way we actually write code, in other words how we develop our products. Extreme programming practices that are the base of agile give us quite a good foundations. I'd highly recommend the book \u003Ca href=\"https:\u002F\u002Famzn.to\u002F3s9NQ96\"\u003EExtreme Programming Explained\u003C\u002Fa\u003E by another author of the Agile Manifesto, \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FKentBeck\"\u003EKent Beck\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf we think this farther, developers are responsible to actually look for the best practices and continuously improve themselves. We should look for improving our professional reputations and work by our professional ethics.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis also means that management or business has no right to micromanage the way we work. They have no right to force us to ruin our professional reputation or to force us to violate our professional ethics.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnyway if things go the bad way, who will be the first ones found and convicted? Hello Volkswagen!\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"are-we-all-the-same\" href=\"#are-we-all-the-same\"\u003E\n  \u003C\u002Fa\u003E\n  Are we all the same?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWe are not. Just like we tend to misunderstand equality and equity, we also tend to misunderstand in agile what \u003Cem\u003Ecollective ownership\u003C\u002Fem\u003E means.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI've heard so often in agile meetings that everybody has to be capable of performing any activity. But \u003Cem\u003E\"as systems grow in complexity, specialization becomes an absolute necessity. There are systems that simply cannot be understood in both entirety and detail.\"\u003C\u002Fem\u003E What is important at the same time is that we spend some of our time out of our specialization.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThere will be parts that you know significantly better than everybody else and there will be other parts that you barely know. It's fine. Being agile doesn't mean that you have to be mediocre at everything. You'll have an average - or a bit worse - knowledge in many areas and ideally, you'll be a master of a few.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"agile-infected\" href=\"#agile-infected\"\u003E\n  \u003C\u002Fa\u003E\n  Agile Infected\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe last chapter of the is written \u003Ca href=\"https:\u002F\u002Famzn.to\u002F3klK0Y9\"\u003ESandro Mancuso\u003C\u002Fa\u003E on Software Craftsmanship. You might ask what Software Craftsmanship has to do with Agile.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe have to go back to 2001 and examine the motivations of the agile manifesto. According to Kent Back, it was about \"healing of the divide between development and business\". It was coming from the developers, but project managers flooded into the  Agile community, and the developers were left behind, we become second class citizens in a community we created. At the same time, many project managers who became Product Owners play a double role. They don't consider themselves as part of the team and they don't share the responsibility when things go wrong.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \"us-versus-them culture\" stayed dominant and the developers made another movement with similar goals to the original Agile, the Software Craftsmanship movement. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Famzn.to\u002F3qHjlaq\"\u003EClean Agile\u003C\u002Fa\u003E is a useful book if you are looking for the original intentions behind Agile, if you want to understand what it was supposed to be about and where it went wrong - according to one person, who is also among the authors of the manifesto.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"connect-deeper\" href=\"#connect-deeper\"\u003E\n  \u003C\u002Fa\u003E\n  Connect deeper\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn case, you are also a bookworm and you're looking for some recommendations, let's connect on \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FSandorDargo\"\u003ETwitter\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002F64b3a32b.sibforms.com\u002Fserve\u002FMUIEAHUOtqTmzdwqwocS8j-v1GBf-LG8L94Zh7CKB89GGoS7Zb13a4faIsQlw9WZWkLQ1LeP4rwnsQLrg2QYp50V5Tb-ZJ1GjDJqSoC0JP4rAcBfy3M8L9QgwA_vWpvFr5F_gKeOUH0cbolRnAIbzp6xt3rqecFIcKmRCzolq4vv27teS-E-UNNZz51IcQc-wk5DsDr27dDmJVzj\"\u003Esign up here\u003C\u002Fa\u003E for the monthly newsletter to get the best books for software developers (not only about software development).\u003C\u002Fp\u003E\n\n";c.body_markdown="[Clean Agile](https:\u002F\u002Famzn.to\u002F3qHjlaq) comes from [Uncle Bob](https:\u002F\u002Ftwitter.com\u002Funclebobmartin), one of the founding fathers of Agile, one of the seventeen people who authored the [Agile Manifesto](https:\u002F\u002Fagilemanifesto.org\u002F) back in 2001.\n\nI thought he might have some interesting thoughts on the beast they released on the software development industry.\n\nHe taught me even more.\n\nThe role of this book was perfectly summarized in the afterword by [Eric Crichlow](https:\u002F\u002Ftwitter.com\u002Fmisteregc):\n\n\u003E *Imagine the significance of having a view into the origins of your religion, an understanding of the events and thoughts that shaped what would become canon for you. When it comes to your professional life, thatâ€™s exactly what you have here.*\n\nAs the author wrote, it's not a book of research. It's rather the opinions of someone who was involved in Agile for about 20 years. I think it's a little bit more. The book reflects the opinion of multiple people. There are two chapters that are at least partly written by others.\n\nThere is a chapter written by the author of [Software Craftsmanship](https:\u002F\u002Famzn.to\u002F3klK0Y9), [Sandro Mancuso](https:\u002F\u002Ftwitter.com\u002Fsandromancuso) on - guess what - software craftsmanship. More on that later.\n\n[Timm Ottinger](https:\u002F\u002Ftwitter.com\u002Fsandromancuso) and [Jeff Langr](https:\u002F\u002Ftwitter.com\u002Fjlangr) also contributed to the book with a few sections on Agile Tools.\n\nWhat I feel more important to mention that Uncle Bob included a part written by a friend of his [Damon Poole](https:\u002F\u002Ftwitter.com\u002Fdamonpoole?lang=en) on coaching. I feel this important to mention because as he emphasized, they don't agree on so many things. Including agile coaching. Yet he asked Poole to contribute to his book and express his different ideas on his platform.\n\nThese days it's so rare to listen to other opinions, not to mention having conversations with people who see certain questions or the world completely different. \n\nLet's see a couple of things I found important in this book.\n\n## What is agile about?\n\nAgile is about organizing small teams in order to solve small problems.\n\nThe question of big teams for big problems is already solved. Telephone networks, highway networks, cars are already built. Those are big problems and big teams solved them rather successfully. And we haven't even mentioned running states... Should we start talking once again about the Roman Empire?\n\nWe could think about big teams for small problems, but those teams shouldn't exist and usually, they don't. The market wouldn't let them survive.\n\nWhat about small things for big problems? Writing the control software for the Mercury space capsule is a big task? It seems so. Yet it was done by a small team and they managed to do it with half-day iterations and everything was unit-tested.\n\nI already mentioned once in the last paragraphs the Roman Empire, and those Romans knew something well. They could organize small squads into legions that conquered vast territories from England to the Tiger and Eufrates, from The Atlantic Ocean to the Black Sea.\n\nYet, Agile is for something else. It's about small teams for small ***software*** problems.\n\nHence the author is not really fond of those scaled agile frameworks. They might work, but he hasn't seen a lot - this is kind of the same thing that [Nicolas Chaillan](https:\u002F\u002Ftwitter.com\u002FNicolasChaillan) Chief Software Officer of the US Air Force said about [scaled agile frameworks](https:\u002F\u002Fwww.smharter.com\u002Fblog\u002Fsafe-a-collection-of-comments-from-leading-experts\u002F).\n\nHence, the agile he talks about throughout the book is not the scaled one.\n\n## Agile without technical practices is not agile\n\nThe agile he talks about is also not the one without technical practices. \"Any attempt to employ Agile practices without the technical practices is doomed to fail.\" As one of the agile coaches I worked with said, people who delivered crap before working in scrum, will deliver the same crap within scrum too... Unless they start using agile technical practices, such as pair programming, refactoring, TDD...\n\nThis is definitely something Uncle Bob and David Poole agrees on. Too bad that I've seen too many coaches who didn't promote those technical practices and seemingly they wouldn't even have been able to.\n\nI think it's quite obvious that we cannot simply start delivering better software just by start attending daily standups and by complaining every couple of weeks in retrospectives.\n\nWe need to change the way we actually write code, in other words how we develop our products. Extreme programming practices that are the base of agile give us quite a good foundations. I'd highly recommend the book [Extreme Programming Explained](https:\u002F\u002Famzn.to\u002F3s9NQ96) by another author of the Agile Manifesto, [Kent Beck](https:\u002F\u002Ftwitter.com\u002FKentBeck).\n\nIf we think this farther, developers are responsible to actually look for the best practices and continuously improve themselves. We should look for improving our professional reputations and work by our professional ethics.\n\nThis also means that management or business has no right to micromanage the way we work. They have no right to force us to ruin our professional reputation or to force us to violate our professional ethics.\n\nAnyway if things go the bad way, who will be the first ones found and convicted? Hello Volkswagen!\n\n## Are we all the same?\n\nWe are not. Just like we tend to misunderstand equality and equity, we also tend to misunderstand in agile what *collective ownership* means.\n\nI've heard so often in agile meetings that everybody has to be capable of performing any activity. But *\"as systems grow in complexity, specialization becomes an absolute necessity. There are systems that simply cannot be understood in both entirety and detail.\"* What is important at the same time is that we spend some of our time out of our specialization.\n\nThere will be parts that you know significantly better than everybody else and there will be other parts that you barely know. It's fine. Being agile doesn't mean that you have to be mediocre at everything. You'll have an average - or a bit worse - knowledge in many areas and ideally, you'll be a master of a few.\n\n## Agile Infected\n\nThe last chapter of the is written [Sandro Mancuso](https:\u002F\u002Famzn.to\u002F3klK0Y9) on Software Craftsmanship. You might ask what Software Craftsmanship has to do with Agile.\n\nWe have to go back to 2001 and examine the motivations of the agile manifesto. According to Kent Back, it was about \"healing of the divide between development and business\". It was coming from the developers, but project managers flooded into the  Agile community, and the developers were left behind, we become second class citizens in a community we created. At the same time, many project managers who became Product Owners play a double role. They don't consider themselves as part of the team and they don't share the responsibility when things go wrong.\n\nThe \"us-versus-them culture\" stayed dominant and the developers made another movement with similar goals to the original Agile, the Software Craftsmanship movement. \n\n## Conclusion\n\n[Clean Agile](https:\u002F\u002Famzn.to\u002F3qHjlaq) is a useful book if you are looking for the original intentions behind Agile, if you want to understand what it was supposed to be about and where it went wrong - according to one person, who is also among the authors of the manifesto.\n\n## Connect deeper\n\nIn case, you are also a bookworm and you're looking for some recommendations, let's connect on [Twitter](https:\u002F\u002Ftwitter.com\u002FSandorDargo) and [sign up here](https:\u002F\u002F64b3a32b.sibforms.com\u002Fserve\u002FMUIEAHUOtqTmzdwqwocS8j-v1GBf-LG8L94Zh7CKB89GGoS7Zb13a4faIsQlw9WZWkLQ1LeP4rwnsQLrg2QYp50V5Tb-ZJ1GjDJqSoC0JP4rAcBfy3M8L9QgwA_vWpvFr5F_gKeOUH0cbolRnAIbzp6xt3rqecFIcKmRCzolq4vv27teS-E-UNNZz51IcQc-wk5DsDr27dDmJVzj) for the monthly newsletter to get the best books for software developers (not only about software development).";c.user={name:"Sandor Dargo",username:f,twitter_username:"SandorDargo",github_username:f,website_url:"https:\u002F\u002Fwww.sandordargo.com\u002F",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--I160Vmcm--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F37458\u002Fadbc8839-4e49-4a14-bb5d-7a70ff635d1f.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--eVMDo0Fu--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F37458\u002Fadbc8839-4e49-4a14-bb5d-7a70ff635d1f.jpg"};c.flare_tag={name:e,bg_color_hex:"#D0ECFF",text_color_hex:"#130074"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:c}},mutations:[["SET_CURRENT_ARTICLE",c]]}}(null,"2021-02-27T19:08:00Z",{},9,"watercooler","sandordargo")));