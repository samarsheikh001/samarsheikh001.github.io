__NUXT_JSONP__("/articles/daviddarnes/576692", (function(a,b,c,d,e,f){a.type_of="article";a.id=576692;a.title="Jekyll alternatives: The benefits to JavaScript static site generators";a.description="Jekyll paved the way for an entire ecosystem of static site generators to flourish, but what...";a.readable_publish_date="Jan 20";a.slug="jekyll-alternatives-the-benefits-to-javascript-static-site-generators-9l9";a.path="\u002Ftakeshape\u002Fjekyll-alternatives-the-benefits-to-javascript-static-site-generators-9l9";a.url="https:\u002F\u002Fdev.to\u002Ftakeshape\u002Fjekyll-alternatives-the-benefits-to-javascript-static-site-generators-9l9";a.comments_count=1;a.public_reactions_count=b;a.collection_id=c;a.published_timestamp=d;a.positive_reactions_count=b;a.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--aQSsKlHd--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ffes9glpykxs71ja31z0f.jpg";a.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--LcZYxr-C--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ffes9glpykxs71ja31z0f.jpg";a.canonical_url="https:\u002F\u002Fwww.takeshape.io\u002Farticles\u002Fjekyll-alternatives-the-benefits-to-javascript-static-site-generators\u002F";a.created_at="2021-01-20T02:46:48Z";a.edited_at="2021-02-15T14:22:58Z";a.crossposted_at=c;a.published_at=d;a.last_comment_at="2021-01-21T15:47:38Z";a.reading_time_minutes=7;a.tag_list="javascript, webdev, gatsby, nextjs";a.tags=["javascript","webdev","gatsby","nextjs"];a.body_html="\u003Ch3\u003E\n  \u003Ca name=\"jekyll-paved-the-way-for-an-entire-ecosystem-of-static-site-generators-to-flourish-but-what-do-these-new-javascript-ssgs-offer-over-jekyll-lets-find-out\" href=\"#jekyll-paved-the-way-for-an-entire-ecosystem-of-static-site-generators-to-flourish-but-what-do-these-new-javascript-ssgs-offer-over-jekyll-lets-find-out\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Jekyll paved the way for an entire ecosystem of static site generators to flourish, but what do these new JavaScript SSGs offer over Jekyll? Let’s find out!\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--p2ECn9WX--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F41mqzg6p0ne8wq9wsnl7.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--p2ECn9WX--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F41mqzg6p0ne8wq9wsnl7.png\" alt=\"Jekyll logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"whats-wrong-with-jekyll\" href=\"#whats-wrong-with-jekyll\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EWhat’s wrong with Jekyll?\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EHey! Whoa there, I’m not about to start hating on \u003Ca href=\"https:\u002F\u002Fjekyllrb.com\u002F\"\u003EJekyll\u003C\u002Fa\u003E, here! I’ve got a real soft spot for that classic SSG - it’s what got me into the \u003Ca href=\"https:\u002F\u002Fjamstack.org\u002Fwhat-is-jamstack\u002F\"\u003EJamstack\u003C\u002Fa\u003E in the first place. However, a lot has happened since that first commit \u003Ca href=\"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FJekyll_(software)\"\u003Eback in October 2008\u003C\u002Fa\u003E, and the landscape has grown plenty enough to find out if there are greener pastures elsewhere for us.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you’re someone with a long-standing Jekyll site somewhere, think of this article as the lightest of toe dips into the land of JavaScript based static site generators. We’re going to take a look at some alternatives and the benefits we can gain from using JavaScript to build our Jamstack.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"variety-in-choice\" href=\"#variety-in-choice\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EVariety in choice\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EComparing Jekyll directly to JavaScript isn’t a good idea, and very much “comparing apples to oranges”. Instead, let’s take a look at some of the wide variety of static site generators that are built on top of JavaScript:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7n49cFAA--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fljrbbicnpgi77lr8b5pc.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7n49cFAA--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fljrbbicnpgi77lr8b5pc.png\" alt=\"Eleventy Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"eleventy\" href=\"#eleventy\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fwww.11ty.dev\u002F\"\u003EEleventy\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EEleventy, or 11ty, is a wonderful SSG that has a lot in common with Jekyll. Liquid templating, Markdown source files, data files and other features are all here with many more for you to utilise. I’ve been using Eleventy a lot and I’m really enjoying it, which I think is due to how similar it feels to Jekyll, while still giving me that vanilla JavaScript power.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Q37nukg_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F3fk6l5p4gjela69fzbo4.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Q37nukg_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F3fk6l5p4gjela69fzbo4.png\" alt=\"Next.js Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"nextjs\" href=\"#nextjs\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fnextjs.org\u002F\"\u003ENext.js\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIf you’ve been tempted by \u003Ca href=\"https:\u002F\u002Freactjs.org\u002F\"\u003EReact\u003C\u002Fa\u003E and want to use it to build out components, then maybe Next.js is more your bag \u003Cdel\u003Efor generating your site\u003C\u002Fdel\u003E. Next.js is an open source project created by the team at Vercel, which is an ideal platform to host your Next.js site.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7e6gNhIL--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fdoro3rixvopgbns1c5ja.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7e6gNhIL--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fdoro3rixvopgbns1c5ja.png\" alt=\"Gatsby Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"gatsbyjs\" href=\"#gatsbyjs\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fwww.gatsbyjs.com\u002F\"\u003EGatsby.js\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EGatsby is another static site generator based on React that has a large ecosystem of plugins and documentation. I’d recommend \u003Ca href=\"https:\u002F\u002Fwww.gatsbyjs.com\u002F\"\u003Echecking out their official site\u003C\u002Fa\u003E to see if the features suit your project.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JJ1FVeL5--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F8qgr3axmys76zywotnb1.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JJ1FVeL5--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F8qgr3axmys76zywotnb1.png\" alt=\"Nuxt Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"nuxtjs\" href=\"#nuxtjs\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002F\"\u003ENuxt.js\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003ENo, that’s not a typo - it’s really called Nuxt.js. For those unfamiliar with the framework landscape, \u003Ca href=\"https:\u002F\u002Fvuejs.org\u002F\"\u003EVue\u003C\u002Fa\u003E is a JavaScript framework that sits in the same space as React. With Nuxt.js, you get all the features you need to create a Jamstack site, but with Vue as the core engine. I’ve used Nuxt.js, and despite my usage being brief, I had a good time writing out components and handling data.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Dzm9HGik--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fbvnrfydm9zxitccubt46.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Dzm9HGik--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fbvnrfydm9zxitccubt46.png\" alt=\"Gridsome Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"gridsome\" href=\"#gridsome\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fgridsome.org\u002F\"\u003EGridsome\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EGridsome is another SSG with Vue at its core, but with an ecosystem more akin to Gatsby. Vue is quite an approachable framework: creating a component has similarities to writing regular HTML. Check out both the \u003Ca href=\"https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002F\"\u003EVue docs\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgridsome.org\u002Fdocs\u002F\"\u003EGridsome docs\u003C\u002Fa\u003E to see if it’s a fit for you.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--HF-y4Vd3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzpqp138vgvjk52riakk.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--HF-y4Vd3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzpqp138vgvjk52riakk.png\" alt=\"Scully logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"scully\" href=\"#scully\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Ca href=\"https:\u002F\u002Fscully.io\u002F\"\u003EScully\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe SSGs listed above are some of the most popular out there, so I thought I’d mention Scully to show something a bit different. Scully is based on \u003Ca href=\"https:\u002F\u002Fangular.io\u002F\"\u003EAngular\u003C\u002Fa\u003E, a long standing JavaScript framework from Google. From what I’ve seen, Angular isn’t as widely used as React or Vue, but if you’ve had some good exposure to it on other projects, Scully might be just what you’re looking for.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"control-over-configuration\" href=\"#control-over-configuration\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EControl over configuration\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIf you’ve used Jekyll as much as I have, you’ll know that it kind of has a strict configuration to it. It’s original focus was blogging, and the method of adding a blog post meant creating files with \u003Ca href=\"https:\u002F\u002Fjekyllrb.com\u002Fdocs\u002Fstructure\u002F\"\u003Eparticular names and putting them in particular folders\u003C\u002Fa\u003E. It was a similar case when adding a config and collections.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--TLhx-ii3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fam5wisx94bsd0r1zetdz.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--TLhx-ii3--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fam5wisx94bsd0r1zetdz.png\" alt=\"Jekyll posts config\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EScreenshot for the official Jekyll documentation, on how you need to name your posts in a particular manner for them to work as expected\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith these new JavaScript-based SSGs, you have much more of an open playing field to create your own structures, and configure them to your particular needs and preferences, for example: in an Eleventy project, you can name and organise your files however you wish, then \u003Ca href=\"https:\u002F\u002Fwww.11ty.dev\u002Fdocs\u002Fcollections\u002F\"\u003Econfigure Eleventy to express those files as a list of blog posts\u003C\u002Fa\u003E. Heck, you don’t even have to use files for your blog posts…more on that later.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"its-javascript\" href=\"#its-javascript\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EIt’s JavaScript\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI’ll admit, early in my career, I found JavaScript a bit daunting. It felt so exotic when comparing it to HTML and CSS syntax, which is probably why I warmed to tools like Jekyll to build out my web projects. However, JavaScript is an extremely ubiquitous language, with a vast array of \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmicromata\u002Fawesome-javascript-learning\"\u003Eresources surrounding it\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith that ubiquity comes a lot of people with pre-existing knowledge. If your team already knows a good amount of JavaScript, it’s going to be a big deciding factor for your next project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can write regular, or vanilla, JavaScript right alongside your framework specific code using any of the SSGs mentioned above, for example: I could be writing React components in a Next.js project and switch to ES6 JavaScript in the same file.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"apis-and-graphql-at-your-fingertips\" href=\"#apis-and-graphql-at-your-fingertips\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EAPIs and GraphQL at your fingertips\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOkay, so this for me is the biggest game changer when going with a JavaScript based SSG over Jekyll. With Jekyll, your content has to be in a markdown file; yes, there are ways around this, but you’re going to have a bumpy ride doing it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EPublishing tools have come a long way and we should be utilising the best tools for the job - the best way to do that is with APIs. Rather than a markdown file, we can use services like \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002Farticles\u002Fbuilding-a-rich-e-commerce-experience-on-the-jamstack-with-takeshape-shopify-and-next-js\u002F\"\u003EShopify\u003C\u002Fa\u003E for store products or \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002F\"\u003ETakeShape\u003C\u002Fa\u003E for our pages and posts, which can then be fed straight into our JavaScript SSG project. We can even use those sources all together, which is what the Jamstack is all about: bringing the best tools together to produce a content rich website.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7Z04f94R--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F0xk244ix8mmtwaorq6sx.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7Z04f94R--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F0xk244ix8mmtwaorq6sx.png\" alt=\"GraphQL Query\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EExample of TakeShape's GraphQL query language\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002F\"\u003ETakeShape\u003C\u002Fa\u003E, not only can you produce \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002Fcontent-editor\u002F\"\u003Eyour own custom CMS with it’s own API\u003C\u002Fa\u003E, but you can bring in multiple API resources to create a single endpoint to access all your data. Shopify, \u003Ca href=\"https:\u002F\u002Fwww.contentful.com\u002F\"\u003EContentful\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fanalytics.google.com\u002Fanalytics\u002Fweb\u002F\"\u003EGoogle Analytics\u003C\u002Fa\u003E and more can be used with \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002Fmesh\u002F\"\u003EMesh\u003C\u002Fa\u003E - a single backend that can be accessed with a single GraphQL API.\u003C\u002Fp\u003E\n\n\u003Cp\u003EGraphQL is a language for interacting with APIs and comes built into TakeShape. It can also be used with any of the static site generators mentioned above. \u003Ca href=\"https:\u002F\u002Fwww.takeshape.io\u002Fmesh\u002F\"\u003ETake a look at the Mesh feature page\u003C\u002Fa\u003E, as well as the official \u003Ca href=\"https:\u002F\u002Fgraphql.org\u002Flearn\u002F\"\u003EGraphQL docs\u003C\u002Fa\u003E for more information.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"build-times\" href=\"#build-times\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EBuild times\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI find it hard to compare build times between SSGs, as they all perform differently with unique levels of complexity and content sizes. From what I’ve seen, my Jekyll projects range from 2 to 10 minutes for a build to complete. If you’re experiencing similar build times, I would consider checking out the alternatives listed higher up in this article and see what might fit your content structure.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--P9sRQ3wK--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ftj4u18vlcsq3ftv2607c.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--P9sRQ3wK--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ftj4u18vlcsq3ftv2607c.png\" alt=\"Build Times\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EScreenshot for from Sean's article, showing graphs they made for the article research\u003C\u002Fp\u003E\n\n\u003Cp\u003ESean C Davies does an excellent job of examining and comparing build times of the most commonly used SSGs in \u003Ca href=\"https:\u002F\u002Fcss-tricks.com\u002Fcomparing-static-site-generator-build-times\u002F\"\u003Ethis research article\u003C\u002Fa\u003E. You’ll see that results show Jekyll does quite well in most cases, but Eleventy beats it for build times with large amounts of content - the other JavaScript SSGs do begin to catch up with the latter as the file count increases.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAgain, it’s best to do a little research into these SSGs to see which will fit the content structure and feature set you’re aiming for. Which brings me nicely onto…\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"use-whats-best-for-the-job\" href=\"#use-whats-best-for-the-job\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003EUse what’s best for the job\u003C\u002Fstrong\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EBet you’re thinking I’ve cop’d out of this one, and pulled out the classic “It depends™️” for the article's conclusion. That’s certainly not the case; everything I’ve mentioned is valid and should be taken into consideration if you’re thinking of switching from Jekyll in an existing project, or if you’re wanting to switch up your typical stack.\u003C\u002Fp\u003E\n\n\u003Cp\u003EJekyll is a great tool, but there are limitations that prevent it from really excelling, especially in client projects. It’s hard to use with an API, its’ configuration is quite specific, and it can be hard to make it flex to different project types.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBut let’s not leave it there! What do you think? Has this article made you consider Eleventy or Next.js more than before, or is Jekyll still pulling at your heartstrings? \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Ftakeshapeio\"\u003ETweet at @TakeShape on Twitter\u003C\u002Fa\u003E - we’d love to hear what you have to say 🐦\u003C\u002Fp\u003E\n\n";a.body_markdown="---\ntitle: Jekyll alternatives: The benefits to JavaScript static site generators\npublished: true\ndescription: \ntags: javascript, webdev, gatsby, nextjs\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ffes9glpykxs71ja31z0f.jpg\ncanonical_url: https:\u002F\u002Fwww.takeshape.io\u002Farticles\u002Fjekyll-alternatives-the-benefits-to-javascript-static-site-generators\u002F\n---\n\n### Jekyll paved the way for an entire ecosystem of static site generators to flourish, but what do these new JavaScript SSGs offer over Jekyll? Let’s find out!\n\n![Jekyll logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F41mqzg6p0ne8wq9wsnl7.png)\n\n## **What’s wrong with Jekyll?**\n\nHey! Whoa there, I’m not about to start hating on [Jekyll](https:\u002F\u002Fjekyllrb.com\u002F), here! I’ve got a real soft spot for that classic SSG - it’s what got me into the [Jamstack](https:\u002F\u002Fjamstack.org\u002Fwhat-is-jamstack\u002F) in the first place. However, a lot has happened since that first commit [back in October 2008](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FJekyll_(software)), and the landscape has grown plenty enough to find out if there are greener pastures elsewhere for us.\n\nIf you’re someone with a long-standing Jekyll site somewhere, think of this article as the lightest of toe dips into the land of JavaScript based static site generators. We’re going to take a look at some alternatives and the benefits we can gain from using JavaScript to build our Jamstack.\n\n## **Variety in choice**\n\nComparing Jekyll directly to JavaScript isn’t a good idea, and very much “comparing apples to oranges”. Instead, let’s take a look at some of the wide variety of static site generators that are built on top of JavaScript:\n\n![Eleventy Logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fljrbbicnpgi77lr8b5pc.png)\n\n### [Eleventy](https:\u002F\u002Fwww.11ty.dev\u002F)\n\nEleventy, or 11ty, is a wonderful SSG that has a lot in common with Jekyll. Liquid templating, Markdown source files, data files and other features are all here with many more for you to utilise. I’ve been using Eleventy a lot and I’m really enjoying it, which I think is due to how similar it feels to Jekyll, while still giving me that vanilla JavaScript power.\n\n![Next.js Logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F3fk6l5p4gjela69fzbo4.png)\n\n### [Next.js](https:\u002F\u002Fnextjs.org\u002F)\n\nIf you’ve been tempted by [React](https:\u002F\u002Freactjs.org\u002F) and want to use it to build out components, then maybe Next.js is more your bag ~~for generating your site~~. Next.js is an open source project created by the team at Vercel, which is an ideal platform to host your Next.js site.\n\n![Gatsby Logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fdoro3rixvopgbns1c5ja.png)\n\n### [Gatsby.js](https:\u002F\u002Fwww.gatsbyjs.com\u002F)\n\nGatsby is another static site generator based on React that has a large ecosystem of plugins and documentation. I’d recommend [checking out their official site](https:\u002F\u002Fwww.gatsbyjs.com\u002F) to see if the features suit your project.\n\n![Nuxt Logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F8qgr3axmys76zywotnb1.png)\n\n### [Nuxt.js](https:\u002F\u002Fnuxtjs.org\u002F)\n\nNo, that’s not a typo - it’s really called Nuxt.js. For those unfamiliar with the framework landscape, [Vue](https:\u002F\u002Fvuejs.org\u002F) is a JavaScript framework that sits in the same space as React. With Nuxt.js, you get all the features you need to create a Jamstack site, but with Vue as the core engine. I’ve used Nuxt.js, and despite my usage being brief, I had a good time writing out components and handling data.\n\n![Gridsome Logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fbvnrfydm9zxitccubt46.png)\n\n### [Gridsome](https:\u002F\u002Fgridsome.org\u002F)\n\nGridsome is another SSG with Vue at its core, but with an ecosystem more akin to Gatsby. Vue is quite an approachable framework: creating a component has similarities to writing regular HTML. Check out both the [Vue docs](https:\u002F\u002Fvuejs.org\u002Fv2\u002Fguide\u002F) and [Gridsome docs](https:\u002F\u002Fgridsome.org\u002Fdocs\u002F) to see if it’s a fit for you.\n\n![Scully logo](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzpqp138vgvjk52riakk.png)\n\n### [Scully](https:\u002F\u002Fscully.io\u002F)\n\nThe SSGs listed above are some of the most popular out there, so I thought I’d mention Scully to show something a bit different. Scully is based on [Angular](https:\u002F\u002Fangular.io\u002F), a long standing JavaScript framework from Google. From what I’ve seen, Angular isn’t as widely used as React or Vue, but if you’ve had some good exposure to it on other projects, Scully might be just what you’re looking for.\n\n## **Control over configuration**\n\nIf you’ve used Jekyll as much as I have, you’ll know that it kind of has a strict configuration to it. It’s original focus was blogging, and the method of adding a blog post meant creating files with [particular names and putting them in particular folders](https:\u002F\u002Fjekyllrb.com\u002Fdocs\u002Fstructure\u002F). It was a similar case when adding a config and collections.\n\n![Jekyll posts config](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fam5wisx94bsd0r1zetdz.png)\n\nScreenshot for the official Jekyll documentation, on how you need to name your posts in a particular manner for them to work as expected\n\nWith these new JavaScript-based SSGs, you have much more of an open playing field to create your own structures, and configure them to your particular needs and preferences, for example: in an Eleventy project, you can name and organise your files however you wish, then [configure Eleventy to express those files as a list of blog posts](https:\u002F\u002Fwww.11ty.dev\u002Fdocs\u002Fcollections\u002F). Heck, you don’t even have to use files for your blog posts…more on that later.\n\n## **It’s JavaScript**\n\nI’ll admit, early in my career, I found JavaScript a bit daunting. It felt so exotic when comparing it to HTML and CSS syntax, which is probably why I warmed to tools like Jekyll to build out my web projects. However, JavaScript is an extremely ubiquitous language, with a vast array of [resources surrounding it](https:\u002F\u002Fgithub.com\u002Fmicromata\u002Fawesome-javascript-learning).\n\nWith that ubiquity comes a lot of people with pre-existing knowledge. If your team already knows a good amount of JavaScript, it’s going to be a big deciding factor for your next project.\n\nYou can write regular, or vanilla, JavaScript right alongside your framework specific code using any of the SSGs mentioned above, for example: I could be writing React components in a Next.js project and switch to ES6 JavaScript in the same file.\n\n## **APIs and GraphQL at your fingertips**\n\nOkay, so this for me is the biggest game changer when going with a JavaScript based SSG over Jekyll. With Jekyll, your content has to be in a markdown file; yes, there are ways around this, but you’re going to have a bumpy ride doing it.\n\nPublishing tools have come a long way and we should be utilising the best tools for the job - the best way to do that is with APIs. Rather than a markdown file, we can use services like [Shopify](https:\u002F\u002Fwww.takeshape.io\u002Farticles\u002Fbuilding-a-rich-e-commerce-experience-on-the-jamstack-with-takeshape-shopify-and-next-js\u002F) for store products or [TakeShape](https:\u002F\u002Fwww.takeshape.io\u002F) for our pages and posts, which can then be fed straight into our JavaScript SSG project. We can even use those sources all together, which is what the Jamstack is all about: bringing the best tools together to produce a content rich website.\n\n![GraphQL Query](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F0xk244ix8mmtwaorq6sx.png)\n\nExample of TakeShape's GraphQL query language\n\nWith [TakeShape](https:\u002F\u002Fwww.takeshape.io\u002F), not only can you produce [your own custom CMS with it’s own API](https:\u002F\u002Fwww.takeshape.io\u002Fcontent-editor\u002F), but you can bring in multiple API resources to create a single endpoint to access all your data. Shopify, [Contentful](https:\u002F\u002Fwww.contentful.com\u002F), [Google Analytics](https:\u002F\u002Fanalytics.google.com\u002Fanalytics\u002Fweb\u002F) and more can be used with [Mesh](https:\u002F\u002Fwww.takeshape.io\u002Fmesh\u002F) - a single backend that can be accessed with a single GraphQL API.\n\nGraphQL is a language for interacting with APIs and comes built into TakeShape. It can also be used with any of the static site generators mentioned above. [Take a look at the Mesh feature page](https:\u002F\u002Fwww.takeshape.io\u002Fmesh\u002F), as well as the official [GraphQL docs](https:\u002F\u002Fgraphql.org\u002Flearn\u002F) for more information.\n\n## **Build times**\n\nI find it hard to compare build times between SSGs, as they all perform differently with unique levels of complexity and content sizes. From what I’ve seen, my Jekyll projects range from 2 to 10 minutes for a build to complete. If you’re experiencing similar build times, I would consider checking out the alternatives listed higher up in this article and see what might fit your content structure.\n\n![Build Times](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Ftj4u18vlcsq3ftv2607c.png)\n\nScreenshot for from Sean's article, showing graphs they made for the article research\n\nSean C Davies does an excellent job of examining and comparing build times of the most commonly used SSGs in [this research article](https:\u002F\u002Fcss-tricks.com\u002Fcomparing-static-site-generator-build-times\u002F). You’ll see that results show Jekyll does quite well in most cases, but Eleventy beats it for build times with large amounts of content - the other JavaScript SSGs do begin to catch up with the latter as the file count increases.\n\nAgain, it’s best to do a little research into these SSGs to see which will fit the content structure and feature set you’re aiming for. Which brings me nicely onto…\n\n## **Use what’s best for the job**\n\nBet you’re thinking I’ve cop’d out of this one, and pulled out the classic “It depends™️” for the article's conclusion. That’s certainly not the case; everything I’ve mentioned is valid and should be taken into consideration if you’re thinking of switching from Jekyll in an existing project, or if you’re wanting to switch up your typical stack.\n\nJekyll is a great tool, but there are limitations that prevent it from really excelling, especially in client projects. It’s hard to use with an API, its’ configuration is quite specific, and it can be hard to make it flex to different project types.\n\nBut let’s not leave it there! What do you think? Has this article made you consider Eleventy or Next.js more than before, or is Jekyll still pulling at your heartstrings? [Tweet at @TakeShape on Twitter](https:\u002F\u002Ftwitter.com\u002Ftakeshapeio) - we’d love to hear what you have to say 🐦\n\n";a.user={name:"Dave 🧱",username:e,twitter_username:"DavidDarnes",github_username:e,website_url:"https:\u002F\u002Fdarn.es",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Va3zXzAN--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F441639\u002Ff71845ca-6e13-4066-b428-ed529d59e403.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--dregSW6p--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F441639\u002Ff71845ca-6e13-4066-b428-ed529d59e403.jpg"};a.organization={name:"TakeShape",username:f,slug:f,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--GUTccJUh--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F222\u002F2adcd550-9340-4f49-a970-e8de26bc2cae.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--YpbUlgVq--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F222\u002F2adcd550-9340-4f49-a970-e8de26bc2cae.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:a}},mutations:[["SET_CURRENT_ARTICLE",a]]}}({},26,null,"2021-01-20T15:53:27Z","daviddarnes","takeshape")));