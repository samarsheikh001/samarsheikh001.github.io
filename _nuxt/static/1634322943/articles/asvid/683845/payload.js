__NUXT_JSONP__("/articles/asvid/683845", (function(a,b,c,d,e){c.type_of="article";c.id=683845;c.title="Ultimate Github Page Deployment";c.description="Mr Hyde   Text you are reading is also available on Jekyll blog hosted on GitHub, with the u...";c.readable_publish_date="Apr 30";c.slug="ultimate-github-page-deployment-1hbi";c.path="\u002Fasvid\u002Fultimate-github-page-deployment-1hbi";c.url="https:\u002F\u002Fdev.to\u002Fasvid\u002Fultimate-github-page-deployment-1hbi";c.comments_count=0;c.public_reactions_count=d;c.collection_id=a;c.published_timestamp=b;c.positive_reactions_count=d;c.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--IyNP_RNq--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F8p1hcpudoft7c6mlenm1.jpg";c.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_vzU95XX--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F8p1hcpudoft7c6mlenm1.jpg";c.canonical_url="https:\u002F\u002Fasvid.github.io\u002Fgithub-page-deployment";c.created_at="2021-04-30T16:18:33Z";c.edited_at="2021-05-20T06:28:24Z";c.crossposted_at=a;c.published_at=b;c.last_comment_at=b;c.reading_time_minutes=4;c.tag_list="githubpages, jekyll, github, webdev";c.tags=["githubpages","jekyll","github","webdev"];c.body_html="\u003Ch2\u003E\n  \u003Ca name=\"mr-hyde\" href=\"#mr-hyde\"\u003E\n  \u003C\u002Fa\u003E\n  Mr Hyde\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EText you are reading is also available on \u003Ca href=\"https:\u002F\u002Fasvid.github.io\u002F\"\u003EJekyll blog\u003C\u002Fa\u003E hosted on GitHub, with the use of free \u003Ca href=\"https:\u002F\u002Fpages.github.com\u002F\"\u003EGithub Pages\u003C\u002Fa\u003E.\u003Cbr\u003E\nLong story short: \u003Ca href=\"https:\u002F\u002Fjekyllrb.com\u002F\"\u003EJekyll\u003C\u002Fa\u003E is a template engine changing \u003Ccode\u003Emarkdown\u003C\u002Fcode\u003E documents on static \u003Ccode\u003EHTML\u003C\u002Fcode\u003E webpages, that you can then host anywyere,\u003Cbr\u003E\nbecause you don't need databases or server that has PHP or Python.\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"usual-process\" href=\"#usual-process\"\u003E\n  \u003C\u002Fa\u003E\n  Usual process\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENormally process of adding new post looks like this:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EI write \u003Ccode\u003Emarkdown\u003C\u002Fcode\u003E document with setting parameters like title, date and tags\u003C\u002Fli\u003E\n\u003Cli\u003Ewhen I'm happy with what I wrote (never), I commit changes and push it to repository on GitHub. Repository name comes from my nick and is also address for blog \u003Ccode\u003Easvid.github.io\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EGithub after pushing to branch \u003Ccode\u003Emaster\u003C\u002Fcode\u003E builds website from sources using Jekyll - probably something like running \u003Ccode\u003Ejekyll build\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Eresult of Jekyll build is not present in a repository, but you see it right now after visiting \u003Ca href=\"https:\u002F\u002Fasvid.github.io\u002Fpl\u002F\"\u003Eblog page\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThe above process works entirely automatically, no need of configuration on repo site or GitHub itself. All you need is having repo name that fallows pattern: \u003Ccode\u003E{user_name}.github.io\u003C\u002Fcode\u003E.\u003Cbr\u003E\nNormally it works. But...\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"i-want-plugins\" href=\"#i-want-plugins\"\u003E\n  \u003C\u002Fa\u003E\n  I want plugins\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ESometimes you want to add something cool to your page. I wanted to have it in few languages, like polish and english. Jekyll is not supporting this natively... but also is not making it impossible ðŸ˜„\u003Cbr\u003E\nSo I've found plugin \u003Ca href=\"https:\u002F\u002Fpolyglot.untra.io\u002F\"\u003EPolyglot\u003C\u002Fa\u003E, that allows adding many languages on same page without need of complete rebuild or restructure.\u003Cbr\u003E\nI used it, after a while it was kinda working. After longer while it was working as I wanted. \u003Cstrong\u003ELocally\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter pushing changes to GitHub page wasn't working properly. I learned that GitHub is not simply building everything you throw at it, but it has a \u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fgithub\u002Fpages-gem\u002Fblob\u002Fmaster\u002Flib\u002Fgithub-pages\u002Fplugins.rb#L20\"\u003Ewhitelist\u003C\u002Fa\u003E (I wonder when they change this name...) of supported plugins.\u003Cbr\u003E\nPolyglot is sadly not on this list, despite its creator tries. Whitelist itself is understandable for security reasons, we don't want to GitHub go down because of some evil plugin or hidden bitcoin miner running on GitHub servers.\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"but-i-really-need-this-plugin\" href=\"#but-i-really-need-this-plugin\"\u003E\n  \u003C\u002Fa\u003E\n  But I really need this plugin\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ELike every problem this one also has a solution. Even few of them. You can build the page locally and push it to the \u003Ccode\u003Emaster\u003C\u002Fcode\u003E branch, and keep source on other branch like \u003Ccode\u003Edevelop\u003C\u002Fcode\u003E.\u003Cbr\u003E\nThere is also \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgh-pages\"\u003ENodeJS package\u003C\u002Fa\u003E, that publishes NodeJS apps as GitHub Pages.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBut I'm lazy and I don't want to build manually and push sources and build result separately, also I don't have NodeJS app, so I use solution number 3.\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"github-actions\" href=\"#github-actions\"\u003E\n  \u003C\u002Fa\u003E\n  GitHub Actions\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ffeatures\u002Factions\"\u003EGitHub Actions\u003C\u002Fa\u003E is a basic CI available for free for every repository.\u003Cbr\u003E\nTo use this CI you need to create \u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E with \u003Ccode\u003Eyaml\u003C\u002Fcode\u003E configuration telling it what and when should happen. There are \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace?type=actions\"\u003Emany available actions\u003C\u002Fa\u003E,\u003Cbr\u003E\nand if something is missing, you can do one yourself or combine few into one workflow.\u003Cbr\u003E\nTo add workflow go to your repository-&gt;actions-&gt;New workflow and then click link to \u003Ccode\u003Eset up a workflow yourself\u003C\u002Fcode\u003E.\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--s71WAUaE--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fworkflow.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--s71WAUaE--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fworkflow.png\" alt=\"new workflow\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--W_FXyC_r--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsetup.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--W_FXyC_r--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsetup.png\" alt=\"setup\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003Cbr\u003E\nThis will add \u003Ccode\u003Eyaml\u003C\u002Fcode\u003E file with config inside repository in directory \u003Ccode\u003E.github\u002Fworkflows\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo publish Jekyll blog with not whitelisted plugins I used \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002Fjekyll-actions\"\u003EJekyll-Actions\u003C\u002Fa\u003E configured inside workflow like this:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight yaml\"\u003E\u003Ccode\u003E\u003Cspan class=\"na\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003EGitHub Pages publication\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"na\"\u003Eon\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"s\"\u003Epush\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"na\"\u003Ejobs\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Ejekyll\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eruns-on\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Eubuntu-16.04\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Euses\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Eactions\u002Fcheckout@v2\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E# Use GitHub Actions' cache to shorten build times and decrease load on servers\u003C\u002Fspan\u003E\n    \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Euses\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Eactions\u002Fcache@v1\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ewith\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Evendor\u002Fbundle\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E${{ runner.os }}-gems-${{ hashFiles('**\u002FGemfile.lock') }}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003Erestore-keys\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"pi\"\u003E|\u003C\u002Fspan\u003E\n          \u003Cspan class=\"s\"\u003E${{ runner.os }}-gems-\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E# Standard usage\u003C\u002Fspan\u003E\n    \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Euses\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E  \u003Cspan class=\"s\"\u003Ehelaili\u002Fjekyll-action@2.0.3\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Eenv\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003EJEKYLL_PAT\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E${{ secrets.JEKYLL_PAT }}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E# Specify the Jekyll source location as a parameter\u003C\u002Fspan\u003E\n    \u003Cspan class=\"pi\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Euses\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003Ehelaili\u002Fjekyll-action@2.0.3\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Eenv\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003EJEKYLL_PAT\u003C\u002Fspan\u003E\u003Cspan class=\"pi\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E${{ secrets.JEKYLL_PAT }}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis action runs inside \u003Ccode\u003Eubuntu-16.04\u003C\u002Fcode\u003E container, and then:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Edownloads repository after each push (on every branch which is causing some issue)\u003C\u002Fli\u003E\n\u003Cli\u003Eis using cache to not download same \u003Ccode\u003EGems\u003C\u002Fcode\u003E each run\u003C\u002Fli\u003E\n\u003Cli\u003Eruns action to build page and publish ot on branch \u003Ccode\u003Emaster\u003C\u002Fcode\u003E, with a push that is possible thanks to \u003Ccode\u003Esecrets.JEKYLL_PAT\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EAnd this publishing on branch \u003Ccode\u003Emaster\u003C\u002Fcode\u003E means that you shouldn't push source changes to this branch.\u003Cbr\u003E\nIf you want to use this action, you need to push changes to \u003Ccode\u003Edevelop\u003C\u002Fcode\u003E and leave \u003Ccode\u003Emaster\u003C\u002Fcode\u003E only for files build and pushed by the script.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"how-to-create-secretjekyllpat\" href=\"#how-to-create-secretjekyllpat\"\u003E\n  \u003C\u002Fa\u003E\n  How to create secret.JEKYLL_PAT\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAction itself works in isolated container and has no write access to your repository. It can read it because its public.\u003Cbr\u003E\nTo allow this, you need to create access token with \u003Ccode\u003Epublic_repo\u003C\u002Fcode\u003E scope, and then add it in repository as a secret with name expected by configuration \u003Ccode\u003Esecret.JEKYLL_PAT\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou generate token from GitHub account settings: Settings-&gt;Developer Settings-&gt;Personal Access Tokens. \u003Cbr\u003E\nAfter clicking on \u003Ccode\u003EGenerate new token\u003C\u002Fcode\u003E fill the name and select checkbox \u003Ccode\u003Epublic_repo\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7Al_PI1E--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Ftoken.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--7Al_PI1E--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Ftoken.png\" alt=\"nowy token\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter clicking button on the bottm \u003Ccode\u003EGenerate token\u003C\u002Fcode\u003E you will have the only chance to copy it, I suggest taking it ðŸ˜„\u003C\u002Fp\u003E\n\n\u003Cp\u003ECopied token needs to be pasted to repository secrets: Settings-&gt;Secrets-&gt;New secret. Name like in config \u003Ccode\u003Esecrets.JEKYLL_PAT\u003C\u002Fcode\u003E and value is copied token.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--CtS-Ga7j--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsecret.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--CtS-Ga7j--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsecret.png\" alt=\"nowy secret\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnd it should work. At least works for me, because you are reading this ðŸ˜„\u003C\u002Fp\u003E\n\n";c.body_markdown="## Mr Hyde\n\nText you are reading is also available on [Jekyll blog](https:\u002F\u002Fasvid.github.io\u002F) hosted on GitHub, with the use of free [Github Pages](https:\u002F\u002Fpages.github.com\u002F).\nLong story short: [Jekyll](https:\u002F\u002Fjekyllrb.com\u002F) is a template engine changing `markdown` documents on static `HTML` webpages, that you can then host anywyere,\nbecause you don't need databases or server that has PHP or Python.\n\n## Usual process\n\nNormally process of adding new post looks like this:\n- I write `markdown` document with setting parameters like title, date and tags\n- when I'm happy with what I wrote (never), I commit changes and push it to repository on GitHub. Repository name comes from my nick and is also address for blog `asvid.github.io`\n- Github after pushing to branch `master` builds website from sources using Jekyll - probably something like running `jekyll build`\n- result of Jekyll build is not present in a repository, but you see it right now after visiting [blog page](https:\u002F\u002Fasvid.github.io\u002Fpl\u002F)\n\nThe above process works entirely automatically, no need of configuration on repo site or GitHub itself. All you need is having repo name that fallows pattern: `{user_name}.github.io`.\nNormally it works. But...\n\n## I want plugins\n\nSometimes you want to add something cool to your page. I wanted to have it in few languages, like polish and english. Jekyll is not supporting this natively... but also is not making it impossible :smile:\nSo I've found plugin [Polyglot](https:\u002F\u002Fpolyglot.untra.io\u002F), that allows adding many languages on same page without need of complete rebuild or restructure.\nI used it, after a while it was kinda working. After longer while it was working as I wanted. **Locally**.\n\nAfter pushing changes to GitHub page wasn't working properly. I learned that GitHub is not simply building everything you throw at it, but it has a \n[whitelist](https:\u002F\u002Fgithub.com\u002Fgithub\u002Fpages-gem\u002Fblob\u002Fmaster\u002Flib\u002Fgithub-pages\u002Fplugins.rb#L20) (I wonder when they change this name...) of supported plugins.\nPolyglot is sadly not on this list, despite its creator tries. Whitelist itself is understandable for security reasons, we don't want to GitHub go down because of some evil plugin or hidden bitcoin miner running on GitHub servers.\n\n## But I really need this plugin\n\nLike every problem this one also has a solution. Even few of them. You can build the page locally and push it to the `master` branch, and keep source on other branch like `develop`.\nThere is also [NodeJS package](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgh-pages), that publishes NodeJS apps as GitHub Pages.\n\nBut I'm lazy and I don't want to build manually and push sources and build result separately, also I don't have NodeJS app, so I use solution number 3.\n\n### GitHub Actions\n\n[GitHub Actions](https:\u002F\u002Fgithub.com\u002Ffeatures\u002Factions) is a basic CI available for free for every repository.\nTo use this CI you need to create `Workflow` with `yaml` configuration telling it what and when should happen. There are [many available actions](https:\u002F\u002Fgithub.com\u002Fmarketplace?type=actions),\nand if something is missing, you can do one yourself or combine few into one workflow.\nTo add workflow go to your repository-\u003Eactions-\u003ENew workflow and then click link to `set up a workflow yourself`.\n![new workflow](https:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fworkflow.png)\n![setup](https:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsetup.png)\nThis will add `yaml` file with config inside repository in directory `.github\u002Fworkflows`\n\nTo publish Jekyll blog with not whitelisted plugins I used [Jekyll-Actions](https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002Fjekyll-actions) configured inside workflow like this:\n```yaml\nname: GitHub Pages publication\n\non:\n  push\n    \njobs:\n  jekyll:\n    runs-on: ubuntu-16.04\n    steps:\n    - uses: actions\u002Fcheckout@v2\n\n    # Use GitHub Actions' cache to shorten build times and decrease load on servers\n    - uses: actions\u002Fcache@v1\n      with:\n        path: vendor\u002Fbundle\n        key: ${{ runner.os }}-gems-${{ hashFiles('**\u002FGemfile.lock') }}\n        restore-keys: |\n          ${{ runner.os }}-gems-\n    # Standard usage\n    - uses:  helaili\u002Fjekyll-action@2.0.3\n      env:\n        JEKYLL_PAT: ${{ secrets.JEKYLL_PAT }}\n    \n    # Specify the Jekyll source location as a parameter\n    - uses: helaili\u002Fjekyll-action@2.0.3\n      env:\n        JEKYLL_PAT: ${{ secrets.JEKYLL_PAT }}\n```\nThis action runs inside `ubuntu-16.04` container, and then:\n- downloads repository after each push (on every branch which is causing some issue)\n- is using cache to not download same `Gems` each run\n- runs action to build page and publish ot on branch `master`, with a push that is possible thanks to `secrets.JEKYLL_PAT`\n\nAnd this publishing on branch `master` means that you shouldn't push source changes to this branch.\nIf you want to use this action, you need to push changes to `develop` and leave `master` only for files build and pushed by the script.\n\n### How to create secret.JEKYLL_PAT\n\nAction itself works in isolated container and has no write access to your repository. It can read it because its public.\nTo allow this, you need to create access token with `public_repo` scope, and then add it in repository as a secret with name expected by configuration `secret.JEKYLL_PAT`.\n\nYou generate token from GitHub account settings: Settings-\u003EDeveloper Settings-\u003EPersonal Access Tokens. \nAfter clicking on `Generate new token` fill the name and select checkbox `public_repo`.\n\n![nowy token](https:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Ftoken.png)\n\nAfter clicking button on the bottm `Generate token` you will have the only chance to copy it, I suggest taking it :smile:\n\nCopied token needs to be pasted to repository secrets: Settings-\u003ESecrets-\u003ENew secret. Name like in config `secrets.JEKYLL_PAT` and value is copied token.\n\n![nowy secret](https:\u002F\u002Fasvid.github.io\u002Fassets\u002Fposts\u002Fghpages\u002Fsecret.png)\n\nAnd it should work. At least works for me, because you are reading this :smile:";c.user={name:"Adam Åšwiderski",username:e,twitter_username:a,github_username:e,website_url:"https:\u002F\u002Fasvid.github.io\u002F",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--KGvy4QZF--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F594857\u002Fb0277b91-576b-4ad6-b3e8-560ab55b3a05.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Ve_VXX6D--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F594857\u002Fb0277b91-576b-4ad6-b3e8-560ab55b3a05.jpeg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:c}},mutations:[["SET_CURRENT_ARTICLE",c]]}}(null,"2021-04-30T16:19:21Z",{},6,"asvid")));