window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:738909,title:"Open-source, self-hosted location tracking with OwnTracks and Grafana",description:"Introduction   If you are using any kinds of Google services on your smartphone, chances are...",readable_publish_date:"Jun 25",slug:"open-source-self-hosted-location-tracking-with-owntracks-and-grafana-3p11",path:"\u002Fn1try\u002Fopen-source-self-hosted-location-tracking-with-owntracks-and-grafana-3p11",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--MYaq6aQu--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--U1G8XEXw--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png",canonical_url:c,created_at:b,edited_at:a,crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:4,tag_list:"selfhosted, monitoring, grafana",tags:["selfhosted","monitoring","grafana"],body_html:"\u003Ch2\u003E\n  \u003Ca name=\"introduction\" href=\"#introduction\"\u003E\n  \u003C\u002Fa\u003E\n  Introduction\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIf you are using any kinds of Google services on your smartphone, chances are high that Google continuously tracks your location and updates your \u003Ca href=\"https:\u002F\u002Fwww.google.com\u002Fmaps\u002Ftimeline\"\u003ETimeline\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ssDpT5N1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:640%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks4.jpg\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ssDpT5N1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:640%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks4.jpg\" alt=\"Google Location Timeline Screenshot\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003Cbr\u003E\n(\u003Ca href=\"https:\u002F\u002Ftechwelkin.com\u002Fwp-content\u002Fuploads\u002F2017\u002F04\u002Fgoogle-timeline-location-history.jpg\"\u003ESource\u003C\u002Fa\u003E)\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is a pretty cool feature and for me it is super interesting to see in retrospect which places I have visited in the past. However, it is also a bit concerning to see how precisely Google tracks your daily life. That is why I turned the location tracking off and decided to go for a rather privacy-focused approach instead.\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"your-own-setup\" href=\"#your-own-setup\"\u003E\n  \u003C\u002Fa\u003E\n  Your Own Setup\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETo build your own, self-hosted location tracking system, you are going to need a bit of technical expertise, a few different open-source software components and a small server to host them.\u003C\u002Fp\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"requirements-components\" href=\"#requirements-components\"\u003E\n  \u003C\u002Fa\u003E\n  Requirements \u002F Components\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EAndroid- or iOS smartphone\u003C\u002Fli\u003E\n\u003Cli\u003EWeb server (Caddy, nginx, Apache 2, ...)\u003C\u002Fli\u003E\n\u003Cli\u003EPHP &gt;= 7.x\u003C\u002Fli\u003E\n\u003Cli\u003EMySQL or MariaDB\u003C\u002Fli\u003E\n\u003Cli\u003EGrafana\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E\n  \u003Ca name=\"owntracks\" href=\"#owntracks\"\u003E\n  \u003C\u002Fa\u003E\n  OwnTracks\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--NW4yVRX_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks1.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--NW4yVRX_--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks1.png\" alt=\"OwnTracks Logo\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe first step to tracking your location is to record it anywhere you go. As most people almost always carry their smartphones with them and as most smartphones have GNSS sensors, the choice is quite obvious. The only thing missing is an appropriate app. This is where \u003Ca href=\"https:\u002F\u002Fowntracks.org\u002F\"\u003EOwnTracks\u003C\u002Fa\u003E comes to play. It is an open-source mobile app that does exactly what we need - record your location and send it to a custom configured MQTT broker or HTTP endpoint. It is available for both Android (written in Kotlin) and iOS (written in Objective-C) and comes with super detailed, developer-focused \u003Ca href=\"https:\u002F\u002Fowntracks.org\u002Fbooklet\u002F\"\u003Edocumentation\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--tcZT3tIe--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fowntracks.org\u002Fbooklet\u002Fguide\u002Fimages\u002Fowntracks-iotconf-http-arch.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--tcZT3tIe--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fowntracks.org\u002Fbooklet\u002Fguide\u002Fimages\u002Fowntracks-iotconf-http-arch.png\" alt=\"OwnTracks Architecture Diagram\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003Cbr\u003E\n(\u003Ca href=\"https:\u002F\u002Fowntracks.org\u002Fbooklet\u002Fguide\u002Fwhathow\u002F#how-owntracks-works\"\u003ESource\u003C\u002Fa\u003E)\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt comes with different tracking \u003Ca href=\"https:\u002F\u002Fowntracks.org\u002Fbooklet\u002Ffeatures\u002Flocation\u002F\"\u003Emodes\u003C\u002Fa\u003E, which essentially specify how often to send your location. Weirdly enough, these modes behave differently on Android an iOS.\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"table-wrapper-paragraph\"\u003E\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003E\u003C\u002Fth\u003E\n\u003Cth\u003E\u003Cstrong\u003ETracking on iOS\u003C\u002Fstrong\u003E\u003C\u002Fth\u003E\n\u003Cth\u003E\u003Cstrong\u003ETracking on Android\u003C\u002Fstrong\u003E\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Cstrong\u003EMove mode\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAfter \u003Ccode\u003Ex\u003C\u002Fcode\u003E meters (default: 100) or \u003Ccode\u003Et\u003C\u002Fcode\u003E seconds (default: 300)\u003C\u002Ftd\u003E\n\u003Ctd\u003EEvery 30 seconds\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Cstrong\u003ESignificant changes mode\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAfter &gt;= 500 meters and &gt;= 5 minutes\u003C\u002Ftd\u003E\n\u003Ctd\u003EAfter &gt;= \u003Ccode\u003Ex\u003C\u002Fcode\u003E meters and &gt;= \u003Ccode\u003Et\u003C\u002Fcode\u003E seconds\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Cstrong\u003EManual mode\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EOn user request\u003C\u002Ftd\u003E\n\u003Ctd\u003EOn user request\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Cstrong\u003EQuiet mode\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ENever\u003C\u002Ftd\u003E\n\u003Ctd\u003ENever\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EIn fact, things are a bit more complex than this, as you will have to distinguish between how often the app \u003Cstrong\u003Erequests\u003C\u002Fstrong\u003E your location from the device's sensors and how often it \u003Cstrong\u003Esends\u003C\u002Fstrong\u003E it. Also, there are different options regarding the desired precision (e.g. GPS is more accurate, but uses more power). Moreover, on iOS, there are \u003Cem\u003Eregion monitoring\u003C\u002Fem\u003E and \u003Cem\u003EiBeacon\u003C\u002Fem\u003E monitoring modes in addition. \u003C\u002Fp\u003E\n\n\u003Cp\u003EI would suggest to read through the docs and decide which modes suits you best, depending on your smartphone's OS. I, however, decided to go for the \u003Cem\u003Esignificant changes\u003C\u002Fem\u003E mode on Android with the following custom config variables.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"locatorDisplacement\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E25\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"locatorInterval\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E60\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"locatorPriority\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis basically tells the app to \u003Cem\u003Erequest my location with block-level accuracy (100 meters) every time I move by more than 25 meters, but at most every 60 seconds\u003C\u002Fem\u003E. These settings work quite well for me and I did not recognize any significant impact on battery consumption. \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---z4v_lSV--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:320%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks2.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---z4v_lSV--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:320%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks2.png\" alt=\"OwnTracks App Screenshot\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"serverside-script\" href=\"#serverside-script\"\u003E\n  \u003C\u002Fa\u003E\n  Server-side script\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAfter setting up the client side, a server-side component to receive the OwnTracks app's requests is still missing. OwnTracks ships with its \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fowntracks\u002Frecorder\"\u003ERecorder\u003C\u002Fa\u003E, which is a small and simple web application written in C. However, I did not like it a lot, as it does not look particularly beautiful and is very limited regarding its functionality. I rather wanted to visualize my data in Grafana. But to get it there, it first needs to be persisted to a database. \u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EUPDATE:\u003C\u002Fstrong\u003E I found \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fowntracks\u002Ffrontend\"\u003E\u003Ccode\u003Eowntracks\u002Ffrontend\u003C\u002Fcode\u003E\u003C\u002Fa\u003E in the meantime, which seems to be a lot more advanced than the recorder's web UI. You may want to use this as an alternative to Grafana, which will make the setup a lot easier.\u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\u003Cp\u003EA heartbeat request's payload looks like this.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"_type\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"location\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"acc\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E13\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"alt\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E163\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"batt\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E91\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"bs\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"conn\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"w\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"created_at\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1624607444\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"lat\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mf\"\u003E48.9995682\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"lon\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mf\"\u003E8.3940805\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"t\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"u\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"tid\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"l3\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"tst\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1624607139\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"vac\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"vel\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EI quickly wrote \u003Ca href=\"https:\u002F\u002Fgist.github.com\u002Fmuety\u002F3dcbb22916a4812cf3ed40ff17f1d9e2\"\u003Ea little PHP script\u003C\u002Fa\u003E to take OwnTracks location heartbeats and write them to a MySQL database. It can live at any web server with PHP support (I am using \u003Ca href=\"https:\u002F\u002Fcaddyserver.com\"\u003ECaddy2\u003C\u002Fa\u003E with \u003Ccode\u003Ephp-fpm\u003C\u002Fcode\u003E). Assuming it is deployed under \u003Ccode\u003Ehttps:\u002F\u002Fmy.server.tld\u002Ftrack.php\u003C\u002Fcode\u003E then that is the URL you need to configure as an HTTP target endpoint in the OwnTracks app. Optionally, you can configure HTTP Basic auth inside your web server's config. OwnTrack's client app has support for that built in.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"grafana-dashboard\" href=\"#grafana-dashboard\"\u003E\n  \u003C\u002Fa\u003E\n  Grafana dashboard\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThe last missing part is to actually visualize your location data. I am a big fan of Grafana, as you can easily build beautiful visualizations with low effort. Grafana integrates with MySQL as a data source, so it can read the location data previously ingested by the above script. Using the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpanodata\u002Fgrafana-map-panel\"\u003Egrafana-map-panel\u003C\u002Fa\u003E plugin, you can visualize geo data in dashboard. In addition, I added another two graphs for plotting my velocity and my phone's battery level over time. This is what it looks like in the end. \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--m7fGDkKH--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:640%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--m7fGDkKH--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs%2Cs:640%3Fimage%3Dhttps:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png\" alt=\"Grafana Dashboard Screenshot\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe geo data panel is generated from this underlying SQL query:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight sql\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003ESELECT\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Etst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003EAS\u003C\u002Fspan\u003E \u003Cspan class=\"nv\"\u003E\"time\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Elat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Elon\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Evel\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EFROM\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Erecordings\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EWHERE\u003C\u002Fspan\u003E\n  \u003Cspan class=\"err\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003E__unixEpochFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etst\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003EAND\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Euser\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'$user'\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003EAND\u003C\u002Fspan\u003E\n  \u003Cspan class=\"n\"\u003Edevice\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E'$device'\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003EORDER\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003EBY\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Etst\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThis is it! You have your own, self-hosted, Google-free location timeline now. Have fun!\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EOriginally published at \u003Ca href=\"https:\u002F\u002Fmuetsch.io\u002Fopen-source-self-hosted-location-tracking-with-owntracks-and-grafana.html\"\u003Emuetsch.io\u003C\u002Fa\u003E.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: Open-source, self-hosted location tracking with OwnTracks and Grafana\npublished: true\ndescription: \ntags: selfhosted, monitoring, grafana\ncover_image: https:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png\n---\n## Introduction\nIf you are using any kinds of Google services on your smartphone, chances are high that Google continuously tracks your location and updates your [Timeline](https:\u002F\u002Fwww.google.com\u002Fmaps\u002Ftimeline).\n\n![Google Location Timeline Screenshot](https:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs,s:640?image=https:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks4.jpg)\n([Source](https:\u002F\u002Ftechwelkin.com\u002Fwp-content\u002Fuploads\u002F2017\u002F04\u002Fgoogle-timeline-location-history.jpg))\n\nThis is a pretty cool feature and for me it is super interesting to see in retrospect which places I have visited in the past. However, it is also a bit concerning to see how precisely Google tracks your daily life. That is why I turned the location tracking off and decided to go for a rather privacy-focused approach instead.\n\n## Your Own Setup\nTo build your own, self-hosted location tracking system, you are going to need a bit of technical expertise, a few different open-source software components and a small server to host them.\n\n### Requirements \u002F Components\n* Android- or iOS smartphone\n* Web server (Caddy, nginx, Apache 2, ...)\n* PHP \u003E= 7.x\n* MySQL or MariaDB\n* Grafana\n\n### OwnTracks\n![OwnTracks Logo](https:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto?image=https:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks1.png)\n\nThe first step to tracking your location is to record it anywhere you go. As most people almost always carry their smartphones with them and as most smartphones have GNSS sensors, the choice is quite obvious. The only thing missing is an appropriate app. This is where [OwnTracks](https:\u002F\u002Fowntracks.org\u002F) comes to play. It is an open-source mobile app that does exactly what we need - record your location and send it to a custom configured MQTT broker or HTTP endpoint. It is available for both Android (written in Kotlin) and iOS (written in Objective-C) and comes with super detailed, developer-focused [documentation](https:\u002F\u002Fowntracks.org\u002Fbooklet\u002F).\n\n![OwnTracks Architecture Diagram](https:\u002F\u002Fowntracks.org\u002Fbooklet\u002Fguide\u002Fimages\u002Fowntracks-iotconf-http-arch.png)\n([Source](https:\u002F\u002Fowntracks.org\u002Fbooklet\u002Fguide\u002Fwhathow\u002F#how-owntracks-works))\n\nIt comes with different tracking [modes](https:\u002F\u002Fowntracks.org\u002Fbooklet\u002Ffeatures\u002Flocation\u002F), which essentially specify how often to send your location. Weirdly enough, these modes behave differently on Android an iOS.\n\n|                          | **Tracking on iOS**                                               | **Tracking on Android**                       |\n|--------------------------|---------------------------------------------------------------|-------------------------------------------|\n| **Move mode**                | After `x` meters (default: 100) or `t` seconds (default: 300) | Every 30 seconds                          |\n| **Significant changes mode** | After \u003E= 500 meters and \u003E= 5 minutes                     | After \u003E= `x` meters and \u003E= `t` seconds |\n| **Manual mode**              | On user request                                               | On user request                           |\n| **Quiet mode**               | Never                                                         | Never                                     |\n\nIn fact, things are a bit more complex than this, as you will have to distinguish between how often the app **requests** your location from the device's sensors and how often it **sends** it. Also, there are different options regarding the desired precision (e.g. GPS is more accurate, but uses more power). Moreover, on iOS, there are _region monitoring_ and _iBeacon_ monitoring modes in addition. \n\nI would suggest to read through the docs and decide which modes suits you best, depending on your smartphone's OS. I, however, decided to go for the _significant changes_ mode on Android with the following custom config variables.\n\n```json\n{\n    \"locatorDisplacement\": 25,\n    \"locatorInterval\": 60,\n    \"locatorPriority\": 2\n}\n```\n\nThis basically tells the app to _request my location with block-level accuracy (100 meters) every time I move by more than 25 meters, but at most every 60 seconds_. These settings work quite well for me and I did not recognize any significant impact on battery consumption. \n\n![OwnTracks App Screenshot](https:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs,s:320?image=https:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks2.png)\n\n### Server-side script\nAfter setting up the client side, a server-side component to receive the OwnTracks app's requests is still missing. OwnTracks ships with its [Recorder](https:\u002F\u002Fgithub.com\u002Fowntracks\u002Frecorder), which is a small and simple web application written in C. However, I did not like it a lot, as it does not look particularly beautiful and is very limited regarding its functionality. I rather wanted to visualize my data in Grafana. But to get it there, it first needs to be persisted to a database. \n\n---\n\n**UPDATE:** I found [`owntracks\u002Ffrontend`](https:\u002F\u002Fgithub.com\u002Fowntracks\u002Ffrontend) in the meantime, which seems to be a lot more advanced than the recorder's web UI. You may want to use this as an alternative to Grafana, which will make the setup a lot easier.\n\n---\n\nA heartbeat request's payload looks like this.\n\n```json\n{\n  \"_type\": \"location\",\n  \"acc\": 13,\n  \"alt\": 163,\n  \"batt\": 91,\n  \"bs\": 1,\n  \"conn\": \"w\",\n  \"created_at\": 1624607444,\n  \"lat\": 48.9995682,\n  \"lon\": 8.3940805,\n  \"t\": \"u\",\n  \"tid\": \"l3\",\n  \"tst\": 1624607139,\n  \"vac\": 3,\n  \"vel\": 0\n}\n```\n\nI quickly wrote [a little PHP script](https:\u002F\u002Fgist.github.com\u002Fmuety\u002F3dcbb22916a4812cf3ed40ff17f1d9e2) to take OwnTracks location heartbeats and write them to a MySQL database. It can live at any web server with PHP support (I am using [Caddy2](https:\u002F\u002Fcaddyserver.com) with `php-fpm`). Assuming it is deployed under `https:\u002F\u002Fmy.server.tld\u002Ftrack.php` then that is the URL you need to configure as an HTTP target endpoint in the OwnTracks app. Optionally, you can configure HTTP Basic auth inside your web server's config. OwnTrack's client app has support for that built in.\n\n### Grafana dashboard\nThe last missing part is to actually visualize your location data. I am a big fan of Grafana, as you can easily build beautiful visualizations with low effort. Grafana integrates with MySQL as a data source, so it can read the location data previously ingested by the above script. Using the [grafana-map-panel](https:\u002F\u002Fgithub.com\u002Fpanodata\u002Fgrafana-map-panel) plugin, you can visualize geo data in dashboard. In addition, I added another two graphs for plotting my velocity and my phone's battery level over time. This is what it looks like in the end. \n\n![Grafana Dashboard Screenshot](https:\u002F\u002Fapps.muetsch.io\u002Fimages\u002Fo:auto\u002Frs,s:640?image=https:\u002F\u002Fmuetsch.io\u002Fimages\u002Fowntracks3.png)\n\nThe geo data panel is generated from this underlying SQL query:\n\n```sql\nSELECT\n  tst AS \"time\",\n  lat,\n  lon,\n  vel\nFROM recordings\nWHERE\n  $__unixEpochFilter(tst) AND\n  user = '$user' AND\n  device = '$device'\nORDER BY tst\n```\n\n## Conclusion\nThis is it! You have your own, self-hosted, Google-free location timeline now. Have fun!\n\n_Originally published at [muetsch.io](https:\u002F\u002Fmuetsch.io\u002Fopen-source-self-hosted-location-tracking-with-owntracks-and-grafana.html)._",user:{name:"Ferdinand Mütsch",username:"n1try",twitter_username:"n2try",github_username:"muety",website_url:"https:\u002F\u002Fmuetsch.io",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jtY-HmNJ--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F1178\u002Fff5aeaea-10eb-427d-b624-f50d55437e43.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--seXhk9D2--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F1178\u002Fff5aeaea-10eb-427d-b624-f50d55437e43.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Fn1try\u002F738909",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-06-25T08:20:27Z","https:\u002F\u002Fdev.to\u002Fn1try\u002Fopen-source-self-hosted-location-tracking-with-owntracks-and-grafana-3p11",6));