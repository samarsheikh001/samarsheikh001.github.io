__NUXT_JSONP__("/articles/agustito37/524398", (function(a,b,c,d,e,f){c.type_of="article";c.id=524398;c.title="How to manage styles in React Native with our useStyles hook";c.description="Does anyone know how to properly manage styles in React Native? I don't.  I have been working with th...";c.readable_publish_date="Nov 25 '20";c.slug="how-to-manage-styles-in-react-native-with-our-usestyles-hook-4fc6";c.path="\u002Frootstrap\u002Fhow-to-manage-styles-in-react-native-with-our-usestyles-hook-4fc6";c.url="https:\u002F\u002Fdev.to\u002Frootstrap\u002Fhow-to-manage-styles-in-react-native-with-our-usestyles-hook-4fc6";c.comments_count=0;c.public_reactions_count=d;c.collection_id=a;c.published_timestamp=b;c.positive_reactions_count=d;c.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--pjc2gJnD--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fsz0hkjfww7h4r8fywwdo.jpg";c.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3AppDZUM--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fsz0hkjfww7h4r8fywwdo.jpg";c.canonical_url="https:\u002F\u002Fwww.rootstrap.com\u002Fblog\u002Fusestyles-react-native-styles-hook\u002F";c.created_at="2020-11-25T02:46:25Z";c.edited_at=a;c.crossposted_at=a;c.published_at=b;c.last_comment_at=b;c.reading_time_minutes=3;c.tag_list="reactnative, react, javascript, styles";c.tags=["reactnative","react","javascript","styles"];c.body_html="\u003Cp\u003EDoes anyone know how to properly manage styles in React Native? I don't.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI have been working with this framework for a couple of years now and couldn't get a concise way of using styles. This last year I've tried some libraries with novel concepts as Styled Components, but I couldn't get used to them. As a result of this dissatisfaction with the current alternatives, useStyles was born.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"what-is-usestyles-and-how-can-it-help-me\" href=\"#what-is-usestyles-and-how-can-it-help-me\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  What is useStyles and how can it help me?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOrganizing styles in React Native can be tricky, a headache if you don't apply good programming practices. useStyles comes with the purpose of â€‹â€‹alleviating this burden by providing the tools so that you can generate applications where the styles have their own place and can reside harmoniously with the components.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf we summarize what useStyles does: it is a hook, which allows you to consume the styles of your application in a simple, clean, and efficient way. So if the idea of â€‹â€‹improving the way you write your styles and generating cleaner applications is appealing, I invite you to visit the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\"\u003Erepository\u003C\u002Fa\u003E and try it out for yourself.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"usage\" href=\"#usage\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Usage\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe following example shows how we would apply styles natively to generate a simple container with text inside.\u003C\u002Fp\u003E\n\n\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002Fagustito37\u002Fcca8292de8f3639972af9d9130dc2784.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003ESeen this way, it doesn't look like bad code, does it? Now, what happens when the component starts to grow.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe component a few weeks later, a few very rough weeks later:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002Fagustito37\u002Fd89db60561fbe5073e340f3b6c6c35b4.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003EAs you can see, our clean component began to be slowly eaten by our ugly styles. While there are many ways to improve this code, since React Native does not have a clear and simple way to handle styles, these bad practices get pretty common.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow let's implement the same but with useStyles:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F2f49201ea6f7a7cfce3318181f6e00c4.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003EExcuse me ðŸ˜¢. My eyes were filled with joy when I saw this organized code. Sniff. Maybe this reminds you a little bit of CSS styles. Although useStyles is inspired by CSS classes, this is a solution created especially for React Native; it has little to do with how CSS works.\u003C\u002Fp\u003E\n\n\u003Cp\u003EGoing back to the previous example, you can see how the useStyles' hook returns a function, which is then used to consume the styles. You may have already noticed some peculiar declarations, like a hook to which dependencies are passed, and some prefixes like \u003Ccode\u003E.\u003C\u002Fcode\u003E,\u003Ccode\u003E&amp;\u003C\u002Fcode\u003E,\u003Ccode\u003E$\u003C\u002Fcode\u003Eand\u003Ccode\u003E:\u003C\u002Fcode\u003E. Next, when we look at the definition of the styles, we'll see what they mean.\u003C\u002Fp\u003E\n\n\u003Cp\u003EuseStyles provides you with the \u003Ccode\u003EGlobalStyles\u003C\u002Fcode\u003E and \u003Ccode\u003EStyles\u003C\u002Fcode\u003E functions to define global and local styles.\u003C\u002Fp\u003E\n\n\u003Cp\u003EGlobal styles:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F7a41cb267e558ede30086575ef922ae6.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003EComponent's styles:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cdiv class=\"ltag_gist-liquid-tag\"\u003E\n  \u003Cscript id=\"gist-ltag\" src=\"https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F2759b5e981d2810ceb77bdfd36a1851a.js\"\u003E\u003C\u002Fscript\u003E\n\u003C\u002Fdiv\u003E\n\n\n\u003Cp\u003EWe are not going to analyze in detail each one of the functionalities, for that, you can consult the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\"\u003Erepository\u003C\u002Fa\u003E. But in summary, they can be explained as follows:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EConstants (\u003Ccode\u003E$\u003C\u002Fcode\u003E): we can reuse them in other styles and components.\u003C\u002Fli\u003E\n\u003Cli\u003EStatic styles (\u003Ccode\u003E.\u003C\u002Fcode\u003E): regular styles that can be reused in other styles and components.\u003C\u002Fli\u003E\n\u003Cli\u003EComputed styles (\u003Ccode\u003E&amp;\u003C\u002Fcode\u003E): styles that depend on certain dependencies passed in the hook. If any dependency changes, these styles are re-computed.\u003C\u002Fli\u003E\n\u003Cli\u003EPaths (\u003Ccode\u003E:\u003C\u002Fcode\u003E): shortcuts to write styles; e.g., to define the property \u003Ccode\u003EbackgroundColor: 'red'\u003C\u002Fcode\u003E you can use the path \u003Ccode\u003Ebg:color:red\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"summary\" href=\"#summary\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Summary\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EuseStyles is a library created with the purpose of solving a recurring problem that developers usually have in React Native: disorganized and invasive styles in our components. With useStyles we use a hook to consume the styles, which gives us a simple, clean, and efficient interface.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou're invited to check the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\"\u003Erepository\u003C\u002Fa\u003E to see what else you can do with useStyles and check that this library will really ease your work as a developer. Of course, any contribution is welcome.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003ERead this article and more content in the Rootstrap blog: \u003Ca href=\"https:\u002F\u002Fwww.rootstrap.com\u002Fblog\"\u003Ehttps:\u002F\u002Fwww.rootstrap.com\u002Fblog\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"references\" href=\"#references\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  References\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E[1] \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\"\u003Ehttps:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E[2] \u003Ca href=\"https:\u002F\u002Fstyled-components.com\u002F\"\u003Ehttps:\u002F\u002Fstyled-components.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n";c.body_markdown="Does anyone know how to properly manage styles in React Native? I don't.\n\nI have been working with this framework for a couple of years now and couldn't get a concise way of using styles. This last year I've tried some libraries with novel concepts as Styled Components, but I couldn't get used to them. As a result of this dissatisfaction with the current alternatives, useStyles was born.\n\n\n## What is useStyles and how can it help me?\n\nOrganizing styles in React Native can be tricky, a headache if you don't apply good programming practices. useStyles comes with the purpose of â€‹â€‹alleviating this burden by providing the tools so that you can generate applications where the styles have their own place and can reside harmoniously with the components.\n\nIf we summarize what useStyles does: it is a hook, which allows you to consume the styles of your application in a simple, clean, and efficient way. So if the idea of â€‹â€‹improving the way you write your styles and generating cleaner applications is appealing, I invite you to visit the [repository](https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles) and try it out for yourself.\n\n\n## Usage\n\nThe following example shows how we would apply styles natively to generate a simple container with text inside.\n\n{% gist https:\u002F\u002Fgist.github.com\u002Fagustito37\u002Fcca8292de8f3639972af9d9130dc2784 %}\n\nSeen this way, it doesn't look like bad code, does it? Now, what happens when the component starts to grow.\n\nThe component a few weeks later, a few very rough weeks later:\n{% gist https:\u002F\u002Fgist.github.com\u002Fagustito37\u002Fd89db60561fbe5073e340f3b6c6c35b4 %}\n\nAs you can see, our clean component began to be slowly eaten by our ugly styles. While there are many ways to improve this code, since React Native does not have a clear and simple way to handle styles, these bad practices get pretty common.\n\nNow let's implement the same but with useStyles:\n{% gist https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F2f49201ea6f7a7cfce3318181f6e00c4 %}\n\nExcuse me :cry:. My eyes were filled with joy when I saw this organized code. Sniff. Maybe this reminds you a little bit of CSS styles. Although useStyles is inspired by CSS classes, this is a solution created especially for React Native; it has little to do with how CSS works.\n\nGoing back to the previous example, you can see how the useStyles' hook returns a function, which is then used to consume the styles. You may have already noticed some peculiar declarations, like a hook to which dependencies are passed, and some prefixes like `.`,`&`,`$`and`:`. Next, when we look at the definition of the styles, we'll see what they mean.\n\nuseStyles provides you with the `GlobalStyles` and `Styles` functions to define global and local styles.\n\nGlobal styles:\n{% gist https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F7a41cb267e558ede30086575ef922ae6 %}\n\nComponent's styles:\n{% gist https:\u002F\u002Fgist.github.com\u002Fagustito37\u002F2759b5e981d2810ceb77bdfd36a1851a %}\n\nWe are not going to analyze in detail each one of the functionalities, for that, you can consult the [repository](https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles). But in summary, they can be explained as follows:\n\n- Constants (`$`): we can reuse them in other styles and components.\n- Static styles (`.`): regular styles that can be reused in other styles and components.\n- Computed styles (`&`): styles that depend on certain dependencies passed in the hook. If any dependency changes, these styles are re-computed.\n- Paths (`:`): shortcuts to write styles; e.g., to define the property `backgroundColor: 'red'` you can use the path `bg:color:red`.\n\n## Summary\n\nuseStyles is a library created with the purpose of solving a recurring problem that developers usually have in React Native: disorganized and invasive styles in our components. With useStyles we use a hook to consume the styles, which gives us a simple, clean, and efficient interface.\n\nYou're invited to check the [repository](https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles) to see what else you can do with useStyles and check that this library will really ease your work as a developer. Of course, any contribution is welcome.\n\n*Read this article and more content in the Rootstrap blog: https:\u002F\u002Fwww.rootstrap.com\u002Fblog*\n\n### References\n\n[1] https:\u002F\u002Fgithub.com\u002Frootstrap\u002Freact-native-use-styles\n\n[2] https:\u002F\u002Fstyled-components.com\u002F\n";c.user={name:"AgustÃ­n",username:e,twitter_username:"NitsugaBackward",github_username:e,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--FV19kmcZ--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F427313\u002F4891b5ac-cdfe-4aa6-ba99-f46fffd666f2.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--stSJzSNZ--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F427313\u002F4891b5ac-cdfe-4aa6-ba99-f46fffd666f2.jpeg"};c.organization={name:"Rootstrap",username:f,slug:f,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--oV07XA3i--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2858\u002Ff617c7ea-4500-42ca-83dd-e42d460bfb05.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--TtvyGYm9--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2858\u002Ff617c7ea-4500-42ca-83dd-e42d460bfb05.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:c}},mutations:[["SET_CURRENT_ARTICLE",c]]}}(null,"2020-11-25T13:48:53Z",{},6,"agustito37","rootstrap")));