window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:815342,title:"Divide and Conquer! An approach to software engineering project management.",description:"what do Software Engineering, Project Management, Political Strategy and Public Speaking have to do in the same article?",readable_publish_date:"Sep 7",slug:"divide-and-conquer-an-approach-to-software-engineering-project-management-2e0n",path:"\u002Fdvddpl\u002Fdivide-and-conquer-an-approach-to-software-engineering-project-management-2e0n",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--becF5zTR--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxe1q4saa4koq6x21ba6l.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---Y2lFGoM--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxe1q4saa4koq6x21ba6l.png",canonical_url:c,created_at:"2021-09-06T16:07:55Z",edited_at:"2021-09-07T04:52:15Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:3,tag_list:"career, publicspeaking, development, projectmanagement",tags:["career","publicspeaking","development","projectmanagement"],body_html:"\u003Ch2\u003E\n  \u003Ca name=\"divide-et-impera\" href=\"#divide-et-impera\"\u003E\n  \u003C\u002Fa\u003E\n  Divide et Impera!\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Cem\u003EDivide and conquer!\u003C\u002Fem\u003E : in politics and sociology, it is \u003Cem\u003Ea strategy of gaining and maintaining power by breaking up larger concentrations of power into pieces that individually have less power than the one implementing the strategy.\u003C\u002Fem\u003E \u003Ca href=\"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDivide_and_rule\"\u003Ewikipedia\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EBasically, split the forces of your enemy into smaller groups or individuals, which are easier to control and defeat.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWait,  what has that to do with project management in software engineering?\u003C\u002Fp\u003E\n\n\u003Cp\u003EDo I mean to \u003Cstrong\u003Eisolate and weaken the individual team members\u003C\u002Fstrong\u003E so that they can be easily \u003Cem\u003Eruled\u003C\u002Fem\u003E, sorry, \u003Cstrong\u003Emanaged\u003C\u002Fstrong\u003E, and that the goals can be achieved without any form of dissent?\u003C\u002Fp\u003E\n\n\u003Cp\u003EOf course, not!\u003C\u002Fp\u003E\n\n\u003Cp\u003EBut how could I achieve the goal that was assigned to the team I was working with - 20 developers, more than 1 million lines of code, more than 15 thousand errors, hundreds of features to be rewritten - if not with  Divide and Conquer!?\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cem\u003ESoftware development is the act of breaking a complex problem down into smaller problems and composing simple solutions to form a complete solution to the complex problem\u003C\u002Fem\u003E.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EThis is actually true for any big task, it helps if you break the task down into smaller, more manageable parts. \u003Cstrong\u003ELittle piece by little piece, the big task is less intimidating.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E“How do you eat an elephant?\"\u003C\u002Fp\u003E\n\n\u003Cp\u003E“Easy — One bite at a time”\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"so-what-did-we-do-in-practice\" href=\"#so-what-did-we-do-in-practice\"\u003E\n  \u003C\u002Fa\u003E\n  So what did we do in practice?\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003Ewe individuated 4 \u003Cstrong\u003Emacro-areas of intervention\u003C\u002Fstrong\u003E within the project\u002Fcodebase.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003Ewe split the team of 20 + people into 4 \u003Cstrong\u003Esquads\u003C\u002Fstrong\u003E who could focus on one of these 4 macro areas independently - almost.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003Ewe run an \u003Cstrong\u003Eanalysis\u003C\u002Fstrong\u003E on features and errors, aggregated them, and then split them into categories that were assigned to the different squads and individual members who were in charge of that category.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003Ewe made iterations more frequent.  instead of monthly deadlines, we were reassessing our status weekly ( at the beginning we did not even have anything “showable” if not that the number of bugs (defects) and errors was decreasing…) and eventually, \u003Cstrong\u003Ere-adjust course\u003C\u002Fstrong\u003E.  \u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ENot everything though could be broken down in smaller bits, nor was it advisable.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"where-did-we-not-divide-instead\" href=\"#where-did-we-not-divide-instead\"\u003E\n  \u003C\u002Fa\u003E\n  Where did we not divide instead?\n\u003C\u002Fh3\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003EDecision making: \u003Cstrong\u003Edevs can be solitary animals\u003C\u002Fstrong\u003E:  but we didn’t want to have a developer working on his task alone, just to realise after days or weeks the solution was wrong or did not fit the big picture.   So,  we had iterative coding design sessions to discuss solutions collectively ( within the small groups though).\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EKnowledge sharing:  weekly present some interesting solutions or learnings to other team members.\u003Cbr\u003E\nWe dismantled \u003Cstrong\u003ESilos\u003C\u002Fstrong\u003E and \u003Cstrong\u003ETowers of Knowledge\u003C\u002Fstrong\u003E: especially with this high churn rate - we could not afford to have someone be the only one responsible for doing things or knowing how to do certain things.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EHelping each other:   \u003Cstrong\u003Edevs are stubborn and like challenges\u003C\u002Fstrong\u003E - but we could not afford people being stuck for hours, or days on a problem - so we enforced “asking for help, or seeking people in need”  30 minutes of struggle → shout it out to the team:  \u003Cstrong\u003Emaybe someone already went through a similar problem and already has a solution\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EIn the end, \u003Cstrong\u003Eby combining an atomic and aggressive approach to the problem with a mutualistic approach to the people\u003C\u002Fstrong\u003E, we were able to reduce the scope and increase productivity.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fthe-biggest-advice-i-could-give-to-another-developer-3jme\"\u003EBy working on a smaller scope\u003C\u002Fa\u003E, we could ignore the rest.\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fyou-have-only-limited-time-and-attention-eliminate-the-noise-4f0b\"\u003EBy avoiding distractions\u003C\u002Fa\u003E we could improve focus \u003Cbr\u003E\nBy having a shorter feedback loop -  \u003Cem\u003E\"Do something, Make sure it is ok, Rework or Move onto the next task\"\u003C\u002Fem\u003E -  we improved our speed\u003Cbr\u003E\nBy sharing the struggles, celebrating the progress, sharing knowledge, and showing help to each other, we \u003Cstrong\u003Efought frustration, insecurity\u003C\u002Fstrong\u003E and a sense of impotence in front of a massive task.\u003Cbr\u003E\nAnd in the end, despite all my predictions, we made it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs Francis of Assisi said: \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EStart by doing what’s necessary; then do what’s possible, and suddenly you are doing the impossible.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\n\u003Chr\u003E\n\n\u003Cp\u003EThis is the transcript of a speech I gave at my local \u003Ca href=\"https:\u002F\u002Fwww.toastmasters.org\u002F\"\u003EToastmasters Club\u003C\u002Fa\u003E (an international organization to practice public speaking and leadership skills) for Level 4 of my \u003Ca href=\"https:\u002F\u002Fwww.toastmasters.org\u002Fpathways-overview\u002Fpathways-innovative-planning-path\"\u003EInnovative Planning Pathways\u003C\u002Fa\u003E where I had to write and present a speech about my experience in a project. \u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can consider it a \u003Cstrong\u003Efictional story\u003C\u002Fstrong\u003E, although a lot of what is described there comes from my \u003Cstrong\u003Edirect experience\u003C\u002Fstrong\u003E.  \u003C\u002Fp\u003E\n\n\u003Cp\u003EI hope you find it interesting and of some help.\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: Divide and Conquer! An approach to software engineering project management.\npublished: true\ndescription: what do Software Engineering, Project Management, Political Strategy and Public Speaking have to do in the same article?\ntags: #career, #publicspeaking, #development, #projectmanagement\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxe1q4saa4koq6x21ba6l.png\n---\n\n\n## Divide et Impera!\n\n_Divide and conquer!_ : in politics and sociology, it is _a strategy of gaining and maintaining power by breaking up larger concentrations of power into pieces that individually have less power than the one implementing the strategy._ [wikipedia](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FDivide_and_rule)\n\nBasically, split the forces of your enemy into smaller groups or individuals, which are easier to control and defeat.\n\nWait,  what has that to do with project management in software engineering?\n\nDo I mean to **isolate and weaken the individual team members** so that they can be easily _ruled_, sorry, **managed**, and that the goals can be achieved without any form of dissent?\n\nOf course, not!\n\nBut how could I achieve the goal that was assigned to the team I was working with - 20 developers, more than 1 million lines of code, more than 15 thousand errors, hundreds of features to be rewritten - if not with  Divide and Conquer!?\n\n\u003E _Software development is the act of breaking a complex problem down into smaller problems and composing simple solutions to form a complete solution to the complex problem_.\n\nThis is actually true for any big task, it helps if you break the task down into smaller, more manageable parts. **Little piece by little piece, the big task is less intimidating.**\n\n\n\u003E “How do you eat an elephant?\"\n\n\u003E“Easy — One bite at a time”\n\n### So what did we do in practice?\n\n- we individuated 4 **macro-areas of intervention** within the project\u002Fcodebase.\n\n- we split the team of 20 + people into 4 **squads** who could focus on one of these 4 macro areas independently - almost.\n \n- we run an **analysis** on features and errors, aggregated them, and then split them into categories that were assigned to the different squads and individual members who were in charge of that category.\n\n- we made iterations more frequent.  instead of monthly deadlines, we were reassessing our status weekly ( at the beginning we did not even have anything “showable” if not that the number of bugs (defects) and errors was decreasing…) and eventually, **re-adjust course**.  \n\n\nNot everything though could be broken down in smaller bits, nor was it advisable.\n\n### Where did we not divide instead?\n\n- Decision making: **devs can be solitary animals**:  but we didn’t want to have a developer working on his task alone, just to realise after days or weeks the solution was wrong or did not fit the big picture.   So,  we had iterative coding design sessions to discuss solutions collectively ( within the small groups though).\n\n- Knowledge sharing:  weekly present some interesting solutions or learnings to other team members.\nWe dismantled **Silos** and **Towers of Knowledge**: especially with this high churn rate - we could not afford to have someone be the only one responsible for doing things or knowing how to do certain things.\n\n- Helping each other:   **devs are stubborn and like challenges** - but we could not afford people being stuck for hours, or days on a problem - so we enforced “asking for help, or seeking people in need”  30 minutes of struggle → shout it out to the team:  **maybe someone already went through a similar problem and already has a solution**.\n\nIn the end, **by combining an atomic and aggressive approach to the problem with a mutualistic approach to the people**, we were able to reduce the scope and increase productivity.\n\n[By working on a smaller scope](https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fthe-biggest-advice-i-could-give-to-another-developer-3jme), we could ignore the rest.\n[By avoiding distractions](https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fyou-have-only-limited-time-and-attention-eliminate-the-noise-4f0b) we could improve focus \nBy having a shorter feedback loop -  _\"Do something, Make sure it is ok, Rework or Move onto the next task\"_ -  we improved our speed\nBy sharing the struggles, celebrating the progress, sharing knowledge, and showing help to each other, we **fought frustration, insecurity** and a sense of impotence in front of a massive task.\nAnd in the end, despite all my predictions, we made it.\n\nAs Francis of Assisi said: \n\n\u003EStart by doing what’s necessary; then do what’s possible, and suddenly you are doing the impossible.\n\n\n-----\n\nThis is the transcript of a speech I gave at my local [Toastmasters Club](https:\u002F\u002Fwww.toastmasters.org\u002F) (an international organization to practice public speaking and leadership skills) for Level 4 of my [Innovative Planning Pathways](https:\u002F\u002Fwww.toastmasters.org\u002Fpathways-overview\u002Fpathways-innovative-planning-path) where I had to write and present a speech about my experience in a project. \n\nYou can consider it a **fictional story**, although a lot of what is described there comes from my **direct experience**.  \n\nI hope you find it interesting and of some help.\n\n\n",user:{name:"Davide de Paolis",username:e,twitter_username:a,github_username:e,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--DFzIGllY--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F132615\u002F9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--QLUGWBLe--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F132615\u002F9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fdvddpl\u002F815342",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-09-07T04:51:05Z","https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fdivide-and-conquer-an-approach-to-software-engineering-project-management-2e0n",12,"dvddpl"));