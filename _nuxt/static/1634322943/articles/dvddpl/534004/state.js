window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:534004,title:"From Engineer to Tech Lead - Doubts and Challenges ",description:"the hard journey into leadership for a senior engineer brings many challenges and lots of doubts. Here are some tips and lessons from my first 18 months into Technical Leadership",readable_publish_date:"Jul 26",slug:"from-engineer-to-tech-lead-doubts-and-challenges-4n9e",path:"\u002Fdvddpl\u002Ffrom-engineer-to-tech-lead-doubts-and-challenges-4n9e",url:b,comments_count:35,public_reactions_count:c,collection_id:a,published_timestamp:d,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--S4Z4-ueK--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Feakjakvwoizfwa2y8fuj.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ziO4rnRo--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Feakjakvwoizfwa2y8fuj.png",canonical_url:b,created_at:"2020-12-05T16:29:36Z",edited_at:"2021-07-26T06:15:26Z",crossposted_at:a,published_at:d,last_comment_at:"2021-10-04T22:10:10Z",reading_time_minutes:8,tag_list:"leadership, learning, career, motivation",tags:["leadership","learning","career","motivation"],body_html:"\u003Cp\u003E18 months ago I was promoted Technical Lead of the team where I was working as Senior Fullstack Engineer.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo some extent nothing really changed in my daily activities: even before \u003Cem\u003Egetting the title\u003C\u002Fem\u003E, I was already reviewing code, assigning tasks and taking care of supporting and coaching my team mates. \u003Cbr\u003E\nOn the other hand, a lot changed in the perception of my role in the team and in the expectations I had from being a Tech Lead.  \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EI have a strong personality with some \u003Cem\u003Erough edges\u003C\u002Fem\u003E\u003C\u002Fstrong\u003E, I really genuinely love to help and coach, but sometimes I also get quite vocal ( and passionate ) easily.  If it can be acceptable to be a bit too blunt as a peer developer, as a lead you have to be much more careful. \u003Cbr\u003E\nI immediately recognized that I had to work on my people and communication skills. \u003C\u002Fp\u003E\n\n\u003Cp\u003EAlso, being officially in charge of people forced me to reconsider my role of \u003Cstrong\u003EIndividual Contributor\u003C\u002Fstrong\u003E and the expectations I had from other team members.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI am just at the start of my \u003Cem\u003Eleadership\u003C\u002Fem\u003E journey, but the last 18 months were already full of a lot of challenges, doubts and learnings. I am sharing them here, to give some advice in anyone willing to become a Technical Lead and to get some feedbacks and hints from more experienced Leads and Managers.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"output-vs-outcome\" href=\"#output-vs-outcome\"\u003E\n  \u003C\u002Fa\u003E\n  Output vs Outcome\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe main difference between being an Individual Contributor and being a Technical Lead goes down to the difference between Output and Outcome.  This is kinda still hard for me to accept, but \u003Ca href=\"https:\u002F\u002Ftheburningmonk.com\u002F2019\u002F11\u002Fhow-to-break-the-senior-engineer-career-ceiling\u002F\"\u003Ethis post from Yan Cui - The Burning Monk\u003C\u002Fa\u003E really opened my eyes and accompanied me long before and during my leadership journey. \u003C\u002Fp\u003E\n\n\u003Cp\u003EWe might have been ninja coders, \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fwhat-makes-a-10x-developer--1k0f\"\u003E10x developers\u003C\u002Fa\u003E, programming rockstars but the fact is, now that we are technical leaders, we will be coding less, and trust me, we will feel less productive.  But, as the post linked above properly sums it up: \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003Ethe impact you create by helping 10 engineers be 10% better would be an order of magnitude greater than your maximum output as an individual.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"accountability-and-responsibility\" href=\"#accountability-and-responsibility\"\u003E\n  \u003C\u002Fa\u003E\n  Accountability and Responsibility\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI am a strong believer and advocate of \u003Cstrong\u003EExtreme Ownership\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs an engineer, I always committed in meeting the deadlines and respecting the estimates.  Deliver bug free code  and good quality, anticipate problems and propose solutions.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs a Tech Lead I felt I had the \u003Cstrong\u003Eresponsibility\u003C\u002Fstrong\u003E for everything any team member does. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThis does not have to be like that.  \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EEach team member is responsible for what he does, and how he does that.\u003Cbr\u003E\nHe owns the feature he is implementing.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EIf you don't trust your team members and you feel responsible for every line of code they write, you end up \u003Cstrong\u003Emicromanaging\u003C\u002Fstrong\u003E. \u003Cbr\u003E\nThis is not good for you and not good for your team.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor you because \u003Cstrong\u003Eyou are dragged down by details\u003C\u002Fstrong\u003E and can't focus on your objectives and team goals.\u003Cbr\u003E\nFor your team members because \u003Cstrong\u003Eyou are preventing them to really take ownership\u003C\u002Fstrong\u003E, express themselves in their work, learn and grow.\u003C\u002Fp\u003E\n\n\u003Cp\u003EOf course, if something bad happens, you might be held accountable for it (and you should not just waterfall the blame down to your team), but there is a big difference between being \u003Cem\u003Eaccountable\u003C\u002Fem\u003E and being \u003Cem\u003Eresponsible\u003C\u002Fem\u003E for.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"performance-and-team-speed\" href=\"#performance-and-team-speed\"\u003E\n  \u003C\u002Fa\u003E\n  Performance and Team Speed\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe difference between the best performer and the worst performer in a team can be huge.  (check out the Bell curve I mention in \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fwhat-makes-a-10x-developer--1k0f\"\u003Ethis post\u003C\u002Fa\u003E)\u003C\u002Fp\u003E\n\n\u003Cp\u003EBoth because of the output and responsibility issues described above, our tendency could be to try raise the bar and demand that everyone works his ass off, based to \u003Cem\u003Eour\u003C\u002Fem\u003E standards.\u003C\u002Fp\u003E\n\n\u003Cp\u003EEven though raising the bar, aiming high and be demanding can be challenging and motivating for someone, for some other can be draining and have the opposite effect.  \u003C\u002Fp\u003E\n\n\u003Cp\u003EWe must learn and embrace the fact that people have different skills, different learning curves, different drive and motivation, different life goals.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAccept the differences.\u003Cbr\u003E\nAcknowledge everyone's effort.\u003C\u002Fp\u003E\n\n\u003Cp\u003EQuoting again Yan Cui: \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EYou are not there to make everyone become like the top performer (or become like you)\u003C\u002Fstrong\u003E rather, what you can aim is that they become better version of themselves.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EYou can show them how to code better (or properly) , how to learn faster, you can guide them.  You can lead them by example.\u003Cbr\u003E\u003Cbr\u003E\nBut you can't and should not expect everyone embrace the change in the same way and speed as you.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"you-have-to-slow-down-if-you-want-to-go-faster\" href=\"#you-have-to-slow-down-if-you-want-to-go-faster\"\u003E\n  \u003C\u002Fa\u003E\n  You have to slow down if you want to go faster\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThis is true as a contributor. -  if you want to become faster,  you have to learn and practice, and this can bring to you being slower for a while.  But if you stick to it, you will see the benefit and realize how fast you became. \u003Cbr\u003E\nIn just 3 words: \u003Cstrong\u003ESharpen your Axe\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe same is true as a Lead: not only because of course you still need to get used to the new things, new topics, new ways of working and organizing your work and meetings. But in general because you need to count in the time for your team members. \u003C\u002Fp\u003E\n\n\u003Cp\u003EYou need time to talk to people. \u003Cbr\u003E\nYou need to understand their needs. \u003Cbr\u003E\nYou need to respect their pace.\u003C\u002Fp\u003E\n\n\u003Cp\u003EDon't rush in your communication style. Be precise, be patient, let the information sink in, listen.\u003Cbr\u003E\nAnd resist the urge of transferring all your technical knowledge at once, the very next day you are in charge. \u003C\u002Fp\u003E\n\n\u003Cp\u003EI thought that if I throw at people everything I know, in the form of workshops, brown bag sessions, collective code reviews, pair programming and sort, they would learn faster,  they would become faster and better in their coding skills.\u003Cbr\u003E\nBut that is wrong. \u003Cbr\u003E\nAll this could be overwhelming.  Confusion and insecurity can start to spread in the team instead of increased performance, motivation and team spirit.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELike in sports,  you can work out and train a lot, always pushing your limits, but you have also to \u003Cstrong\u003Egive your body a rest day\u003C\u002Fstrong\u003E, respect the regeneration time needed by your muscles.  Otherwise instead of becoming stronger and faster, you just get weaker and more prone to injuries.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELeave time to assimilate the learnings, for people to understand and embrace the changes ( a paradigm, a process), for the progresses to show.\u003C\u002Fp\u003E\n\n\u003Cp\u003EReject the urge of trying to speed things up. Be patient. \u003Cbr\u003E\n\u003Cstrong\u003EThe fruits of your work will come.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003Eand if they don't...   just accept it. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-fruits-of-your-actions\" href=\"#the-fruits-of-your-actions\"\u003E\n  \u003C\u002Fa\u003E\n  The fruit's of your actions\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EOne day I was discussing some of my concerns with my Director of Engineering and at some point he mention the Bhagavad Gita:\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\"You have a right to your actions, but never to your actions´ fruit. Act for the action's sake.\"\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EI did not really get that at first, so after our chat, I researched it a bit. \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E“It's the action, not the fruit of the action, that's important. You have to do the right thing. \u003Cstrong\u003EIt may not be in your power, may not be in your time, that there'll be any fruit. But that doesn't mean you stop doing the right thing.\u003C\u002Fstrong\u003E You may never know what results come from your action. But if you do nothing, there will be no result.”\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EI must say I am not 100% satisfied with this quote, applied to leading (or teaching) people.  Because in my opinion with \"fruits of your actions\" it refers more to the rewards than the effects, but I absolutely agree the we should do the right thing, irregardless of the results.\u003Cbr\u003E\u003Cbr\u003E\nAnd, the point I guess my Director wanted to make is, \u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003Efocus on what you can control\u003C\u002Fstrong\u003E - which is the input. Let the output figure itself out.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EDo whatever you can do. Give people your guidance, your knowledge, your support. You can't blame yourself too much if they don't pick it up.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBe impatient on the quantity and quality of your actions, but patient on the return of those. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThis brings us to the next , and as much philosophical, point,\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"change-comes-from-within\" href=\"#change-comes-from-within\"\u003E\n  \u003C\u002Fa\u003E\n  Change comes from within\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EYou can't force change onto people.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ESure you might have some authority and power in your team, but recurring to that rarely helps. \u003Cbr\u003E\nSure, you could somehow, under some circumstances resolve to disciplinary actions - reprimands or even firing someone...  but that is hardly the way a good lead\u002Fmanagers deals with challenges or conflicts.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAgain, the key aspect here is \u003Cstrong\u003ESharing your Vision\u003C\u002Fstrong\u003E and \u003Cstrong\u003ELeading by Example\u003C\u002Fstrong\u003E. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"leading-by-example\" href=\"#leading-by-example\"\u003E\n  \u003C\u002Fa\u003E\n  Leading by example\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EEspecially in Leadership positions where the technical aspect is still strong, we must be an example of \u003Cstrong\u003EBest Practices, Motivation, Attitude.\u003C\u002Fstrong\u003E \u003Cbr\u003E\nWe should share our knowledge, and show how things are ( or must be) done.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EShow the way, don't bring them there by the hand (even less, push them or drag them! )\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EMentor, support, enable, make decisions, guide people, listen to them and most of all, be patient if they need time to pick up everything I pass to them.\u003Cbr\u003E\nThis sounds a lot of work!\u003C\u002Fp\u003E\n\n\u003Cp\u003EAbsolutely!\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is why, one of the most important thing is also, \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"learning-to-delegate\" href=\"#learning-to-delegate\"\u003E\n  \u003C\u002Fa\u003E\n  Learning to delegate\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThis may vary from company to company or even from team to team, but as a tech lead you are very likely still coding a lot or at least taking care of code architecture or implementation design and code reviews.\u003Cbr\u003E\nWhen some feature turn out to be very critical, or there are nasty bugs in production, it is normal for you to jump in the trench.  Very often though, there might be \u003Cstrong\u003Emultiple things that have the highest priority\u003C\u002Fstrong\u003E.  \u003C\u002Fp\u003E\n\n\u003Cp\u003EAs the most experienced person in the team, you feel you have to take care of all of them.\u003Cbr\u003E\nBut \u003Cstrong\u003Emultitasking is never good\u003C\u002Fstrong\u003E, learn to delegate.\u003Cbr\u003E\nAssign those high-prio tasks to your team members,  guide them and provide advice but don't directly do all the things all by yourself.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EResist the urge to take over the task\u003C\u002Fstrong\u003E.  yes, you probably would be faster, and it could even be better coded,  but you are stealing the people in your team the opportunity to learn, improve, become more independent and increase their sense of ownership.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnd here it comes, probably one of the hardest things that is requested to us experienced senior engineers moving to a technical leadership position is, as mentioned in \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=jMpCF0Z623s\"\u003Ethis amazing and inspiring talk\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EAllow team members freedom to do a worse job than you would\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--HGFD9DGF--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F2vbda5jisp03h4pb9mo3.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--HGFD9DGF--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F2vbda5jisp03h4pb9mo3.png\" alt=\"allow worse job\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EI know, it's hard, it's terrible ( and a bit arrogant), but it is true.  \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---F8nBuW8--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002F8Pjjbv5wnXUSlVd8fa\u002Fgiphy.gif%3Fcid%3D6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de%26rid%3Dgiphy.gif%26ct%3Dg%26cid%3D6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de%26rid%3Dgiphy.gif%26ct%3Dg\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---F8nBuW8--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002F8Pjjbv5wnXUSlVd8fa\u002Fgiphy.gif%3Fcid%3D6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de%26rid%3Dgiphy.gif%26ct%3Dg%26cid%3D6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de%26rid%3Dgiphy.gif%26ct%3Dg\" alt=\"shocked\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis does not mean \u003Cem\u003Elower your guard\u003C\u002Fem\u003E and give up quality, just accept the fact that for a greater good, for the sake of the project, to keep motivation high and maintain your mental health, you have to accept that other experienced or less experience developer can do a \u003Cem\u003Egood enough\u003C\u002Fem\u003E work.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESimple recap with bullet points ( that I constantly still read out loud to myself every now and then when things get rough...)\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Eyou are accountable, they are responsible\u003C\u002Fli\u003E\n\u003Cli\u003Elisten\u003C\u002Fli\u003E\n\u003Cli\u003Ebe patient\u003C\u002Fli\u003E\n\u003Cli\u003Etake your time\u003C\u002Fli\u003E\n\u003Cli\u003Eenable people\u003C\u002Fli\u003E\n\u003Cli\u003Edelegate\u003C\u002Fli\u003E\n\u003Cli\u003Elead by example\u003C\u002Fli\u003E\n\u003Cli\u003Elet them learn at their own pace\u003C\u002Fli\u003E\n\u003Cli\u003Elet them make mistakes\u003C\u002Fli\u003E\n\u003Cli\u003Ebe patient\u003C\u002Fli\u003E\n\u003Cli\u003Efocus on the impact you have on the team, not on the output of the single task\u003C\u002Fli\u003E\n\u003Cli\u003Erespect differences\u003C\u002Fli\u003E\n\u003Cli\u003Elet them do a worse job than you do\u003C\u002Fli\u003E\n\u003Cli\u003Eyou are not entitled to the fruits of your action. \u003C\u002Fli\u003E\n\u003Cli\u003Ebe patient\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003Chr\u003E\n\n\u003Cp\u003EPhoto by \u003Ca href=\"https:\u002F\u002Funsplash.com\u002F@musickid98?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\"\u003EAlfred  Aloushy\u003C\u002Fa\u003E on \u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Fleadership?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\"\u003EUnsplash\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle:From Engineer to Tech Lead - Doubts and Challenges \npublished: true\ndescription: the hard journey into leadership for a senior engineer brings many challenges and lots of doubts. Here are some tips and lessons from my first 18 months into Technical Leadership\ntags: #leadership, #learning, #career, #motivation\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Feakjakvwoizfwa2y8fuj.png\n---\n\n18 months ago I was promoted Technical Lead of the team where I was working as Senior Fullstack Engineer.\n\nTo some extent nothing really changed in my daily activities: even before _getting the title_, I was already reviewing code, assigning tasks and taking care of supporting and coaching my team mates. \nOn the other hand, a lot changed in the perception of my role in the team and in the expectations I had from being a Tech Lead.  \n\n**I have a strong personality with some _rough edges_**, I really genuinely love to help and coach, but sometimes I also get quite vocal ( and passionate ) easily.  If it can be acceptable to be a bit too blunt as a peer developer, as a lead you have to be much more careful. \nI immediately recognized that I had to work on my people and communication skills. \n\nAlso, being officially in charge of people forced me to reconsider my role of **Individual Contributor** and the expectations I had from other team members.\n\nI am just at the start of my _leadership_ journey, but the last 18 months were already full of a lot of challenges, doubts and learnings. I am sharing them here, to give some advice in anyone willing to become a Technical Lead and to get some feedbacks and hints from more experienced Leads and Managers.\n\n##Output vs Outcome \n\nThe main difference between being an Individual Contributor and being a Technical Lead goes down to the difference between Output and Outcome.  This is kinda still hard for me to accept, but [this post from Yan Cui - The Burning Monk](https:\u002F\u002Ftheburningmonk.com\u002F2019\u002F11\u002Fhow-to-break-the-senior-engineer-career-ceiling\u002F) really opened my eyes and accompanied me long before and during my leadership journey. \n\nWe might have been ninja coders, [10x developers](https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fwhat-makes-a-10x-developer--1k0f), programming rockstars but the fact is, now that we are technical leaders, we will be coding less, and trust me, we will feel less productive.  But, as the post linked above properly sums it up: \n\u003E the impact you create by helping 10 engineers be 10% better would be an order of magnitude greater than your maximum output as an individual.\n\n##Accountability and Responsibility\n\nI am a strong believer and advocate of **Extreme Ownership**.\n\nAs an engineer, I always committed in meeting the deadlines and respecting the estimates.  Deliver bug free code  and good quality, anticipate problems and propose solutions.\n\nAs a Tech Lead I felt I had the **responsibility** for everything any team member does. \n\nThis does not have to be like that.  \n\n\u003E Each team member is responsible for what he does, and how he does that.\nHe owns the feature he is implementing.\n\nIf you don't trust your team members and you feel responsible for every line of code they write, you end up **micromanaging**. \nThis is not good for you and not good for your team.\n\nFor you because **you are dragged down by details** and can't focus on your objectives and team goals.\nFor your team members because **you are preventing them to really take ownership**, express themselves in their work, learn and grow.\n\nOf course, if something bad happens, you might be held accountable for it (and you should not just waterfall the blame down to your team), but there is a big difference between being _accountable_ and being _responsible_ for.\n\n##Performance and Team Speed\n\nThe difference between the best performer and the worst performer in a team can be huge.  (check out the Bell curve I mention in [this post](https:\u002F\u002Fdev.to\u002Fdvddpl\u002Fwhat-makes-a-10x-developer--1k0f))\n\nBoth because of the output and responsibility issues described above, our tendency could be to try raise the bar and demand that everyone works his ass off, based to _our_ standards.\n\nEven though raising the bar, aiming high and be demanding can be challenging and motivating for someone, for some other can be draining and have the opposite effect.  \n\nWe must learn and embrace the fact that people have different skills, different learning curves, different drive and motivation, different life goals.\n\nAccept the differences.\nAcknowledge everyone's effort.\n\nQuoting again Yan Cui: \n\n\u003E **You are not there to make everyone become like the top performer (or become like you)** rather, what you can aim is that they become better version of themselves.\n\nYou can show them how to code better (or properly) , how to learn faster, you can guide them.  You can lead them by example.  \nBut you can't and should not expect everyone embrace the change in the same way and speed as you.\n\n##You have to slow down if you want to go faster\n\nThis is true as a contributor. -  if you want to become faster,  you have to learn and practice, and this can bring to you being slower for a while.  But if you stick to it, you will see the benefit and realize how fast you became. \nIn just 3 words: **Sharpen your Axe**\n\nThe same is true as a Lead: not only because of course you still need to get used to the new things, new topics, new ways of working and organizing your work and meetings. But in general because you need to count in the time for your team members. \n\nYou need time to talk to people. \nYou need to understand their needs. \nYou need to respect their pace.\n\nDon't rush in your communication style. Be precise, be patient, let the information sink in, listen.\nAnd resist the urge of transferring all your technical knowledge at once, the very next day you are in charge. \n\nI thought that if I throw at people everything I know, in the form of workshops, brown bag sessions, collective code reviews, pair programming and sort, they would learn faster,  they would become faster and better in their coding skills.\nBut that is wrong. \nAll this could be overwhelming.  Confusion and insecurity can start to spread in the team instead of increased performance, motivation and team spirit.\n\nLike in sports,  you can work out and train a lot, always pushing your limits, but you have also to **give your body a rest day**, respect the regeneration time needed by your muscles.  Otherwise instead of becoming stronger and faster, you just get weaker and more prone to injuries.\n\nLeave time to assimilate the learnings, for people to understand and embrace the changes ( a paradigm, a process), for the progresses to show.\n\nReject the urge of trying to speed things up. Be patient. \n**The fruits of your work will come.**\n\nand if they don't...   just accept it. \n\n##The fruit's of your actions\n\nOne day I was discussing some of my concerns with my Director of Engineering and at some point he mention the Bhagavad Gita:\n\n\u003E\"You have a right to your actions, but never to your actions´ fruit. Act for the action's sake.\"\n\nI did not really get that at first, so after our chat, I researched it a bit. \n\n\u003E “It's the action, not the fruit of the action, that's important. You have to do the right thing. **It may not be in your power, may not be in your time, that there'll be any fruit. But that doesn't mean you stop doing the right thing.** You may never know what results come from your action. But if you do nothing, there will be no result.”\n\nI must say I am not 100% satisfied with this quote, applied to leading (or teaching) people.  Because in my opinion with \"fruits of your actions\" it refers more to the rewards than the effects, but I absolutely agree the we should do the right thing, irregardless of the results.  \nAnd, the point I guess my Director wanted to make is, \n\n\u003E**focus on what you can control** - which is the input. Let the output figure itself out.\n\nDo whatever you can do. Give people your guidance, your knowledge, your support. You can't blame yourself too much if they don't pick it up.\n\nBe impatient on the quantity and quality of your actions, but patient on the return of those. \n\nThis brings us to the next , and as much philosophical, point,\n\n##Change comes from within\n\n**You can't force change onto people.**\n\nSure you might have some authority and power in your team, but recurring to that rarely helps. \nSure, you could somehow, under some circumstances resolve to disciplinary actions - reprimands or even firing someone...  but that is hardly the way a good lead\u002Fmanagers deals with challenges or conflicts.\n\nAgain, the key aspect here is **Sharing your Vision** and **Leading by Example**. \n\n##Leading by example\nEspecially in Leadership positions where the technical aspect is still strong, we must be an example of **Best Practices, Motivation, Attitude.** \nWe should share our knowledge, and show how things are ( or must be) done.\n\n\u003E Show the way, don't bring them there by the hand (even less, push them or drag them! )\n\nMentor, support, enable, make decisions, guide people, listen to them and most of all, be patient if they need time to pick up everything I pass to them.\nThis sounds a lot of work!\n\nAbsolutely!\n\nThis is why, one of the most important thing is also, \n\n##Learning to delegate\n\nThis may vary from company to company or even from team to team, but as a tech lead you are very likely still coding a lot or at least taking care of code architecture or implementation design and code reviews.\nWhen some feature turn out to be very critical, or there are nasty bugs in production, it is normal for you to jump in the trench.  Very often though, there might be **multiple things that have the highest priority**.  \n\nAs the most experienced person in the team, you feel you have to take care of all of them.\nBut **multitasking is never good**, learn to delegate.\nAssign those high-prio tasks to your team members,  guide them and provide advice but don't directly do all the things all by yourself.\n \n**Resist the urge to take over the task**.  yes, you probably would be faster, and it could even be better coded,  but you are stealing the people in your team the opportunity to learn, improve, become more independent and increase their sense of ownership.\n\nAnd here it comes, probably one of the hardest things that is requested to us experienced senior engineers moving to a technical leadership position is, as mentioned in [this amazing and inspiring talk](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=jMpCF0Z623s):\n\n\u003E Allow team members freedom to do a worse job than you would\n\n![allow worse job](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002F2vbda5jisp03h4pb9mo3.png)\n\nI know, it's hard, it's terrible ( and a bit arrogant), but it is true.  \n\n![shocked](https:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002F8Pjjbv5wnXUSlVd8fa\u002Fgiphy.gif?cid=6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de&rid=giphy.gif&ct=g&cid=6104955e2a0c7c9864afcc4a5b3f8f34a428e1be97c328de&rid=giphy.gif&ct=g)\n\nThis does not mean _lower your guard_ and give up quality, just accept the fact that for a greater good, for the sake of the project, to keep motivation high and maintain your mental health, you have to accept that other experienced or less experience developer can do a _good enough_ work.\n\nSimple recap with bullet points ( that I constantly still read out loud to myself every now and then when things get rough...)\n\n- you are accountable, they are responsible\n- listen\n- be patient\n- take your time\n- enable people\n- delegate\n- lead by example\n- let them learn at their own pace\n- let them make mistakes\n- be patient\n- focus on the impact you have on the team, not on the output of the single task\n- respect differences\n- let them do a worse job than you do\n- you are not entitled to the fruits of your action. \n- be patient\n\n---\nPhoto by \u003Ca href=\"https:\u002F\u002Funsplash.com\u002F@musickid98?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\u003EAlfred  Aloushy\u003C\u002Fa\u003E on \u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Fleadership?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\u003EUnsplash\u003C\u002Fa\u003E\n  ",user:{name:"Davide de Paolis",username:e,twitter_username:a,github_username:e,website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--DFzIGllY--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F132615\u002F9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--QLUGWBLe--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F132615\u002F9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fdvddpl\u002F534004",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"https:\u002F\u002Fdev.to\u002Fdvddpl\u002Ffrom-engineer-to-tech-lead-doubts-and-challenges-4n9e",1044,"2021-07-26T06:06:09Z","dvddpl"));