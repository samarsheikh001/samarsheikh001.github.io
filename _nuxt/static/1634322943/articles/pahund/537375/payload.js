__NUXT_JSONP__("/articles/pahund/537375", (function(a,b,c,d,e,f){b.type_of="article";b.id=537375;b.title="Local State Management with Apollo Client";b.description="I'm building a social media network and collaboration tool based on mind maps, documenting my work in this series of blog posts";b.readable_publish_date="Dec 9 '20";b.slug="local-state-management-with-apollo-client-14lf";b.path="\u002Fpahund\u002Flocal-state-management-with-apollo-client-14lf";b.url=c;b.comments_count=0;b.public_reactions_count=d;b.collection_id=10073;b.published_timestamp=a;b.positive_reactions_count=d;b.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--N6TgyGqO--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fvrb4re0xt7w83qngym92.png";b.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---mCuYRw2--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fvrb4re0xt7w83qngym92.png";b.canonical_url=c;b.created_at="2020-12-09T10:16:40Z";b.edited_at="2020-12-12T10:13:24Z";b.crossposted_at=e;b.published_at=a;b.last_comment_at=a;b.reading_time_minutes=7;b.tag_list="javascript, graphql, apollo, react";b.tags=["javascript","graphql","apollo","react"];b.body_html="\u003Cp\u003E\u003Cem\u003EI'm building a social media network and collaboration tool based on mind maps, documenting my work in this series of blog posts. Follow me if you're interested in what I've learned along the way about building web apps with React, Tailwind CSS, Firebase, Apollo\u002FGraphQL, three.js and TypeScript.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"todays-goal\" href=\"#todays-goal\"\u003E\n  \u003C\u002Fa\u003E\n  Today's Goal\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EIn my \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fpahund\u002Fthe-nuffshell-coding-diary-6ij\"\u003Eprevious posts\u003C\u002Fa\u003E, I've built a 3D mind map, using React and three.js. \u003C\u002Fp\u003E\n\n\u003Cp\u003EFor this project, I've used \u003Ca href=\"%5D(https:\u002F\u002Fdev.to\u002Fpahund\u002Fthe-nuffshell-coding-diary-6ij)\"\u003ECodeSandbox\u003C\u002Fa\u003E exclusisvely for coding and I just love it! It works just like VS Code, but runs completely in the browser and lets me share my code easily in my blog posts.\u003C\u002Fp\u003E\n\n\u003Cp\u003EJust one thing that bothered me as I worked on my mind map: Performance issues. The nature of rendering an interactive 3D model involves having a loop that continuously updates, running 60 times per second. CodeSandbox seems to have problems with this when my demo is running in the preview window, writing code slows down and becomes a pain.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo fix this, I'm going to add a “pause” button to my mind map demo that I can use to start\u002Fstop the rendering loop.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ifTtXPFW--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fu25t6hpb7r2ytd60eyo5.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ifTtXPFW--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fu25t6hpb7r2ytd60eyo5.gif\" alt=\"Pause button\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"picking-a-state-management-library\" href=\"#picking-a-state-management-library\"\u003E\n  \u003C\u002Fa\u003E\n  Picking a State Management Library\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EI know I'm going to have to add some way of managing application state to my React app at some point. My plan is to ultimately have a web app where users log in to collaborate on mind maps with others. \u003C\u002Fp\u003E\n\n\u003Cp\u003EMy “pause” button is the first use case that actually requires an application state, so it's time to think about state management.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI've been using \u003Ca href=\"https:\u002F\u002Fredux.js.org\"\u003ERedux\u003C\u002Fa\u003E in my day job for five years now. Some people think it's overly complicated. I disagree, especially with the latest version of \u003Ca href=\"https:\u002F\u002Fredux-toolkit.js.org\"\u003ERedux Toolkit\u003C\u002Fa\u003E, it's become a lot easier to adopt and use.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor small projects, I also like \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fpmndrs\u002Fzustand\"\u003EZustand\u003C\u002Fa\u003E a lot – much more light-weight than Redux. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThen \u003Ca href=\"https:\u002F\u002Frecoiljs.org\"\u003ERecoil\u003C\u002Fa\u003E popped up this year and looks really promising, especially considering it is backed by Facebook, the company behind React.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHowever, for my collaborative mind mapping project, I've decided to go with \u003Ca href=\"https:\u002F\u002Fwww.apollographql.com\u002Fapollo-client\"\u003EApollo Client\u003C\u002Fa\u003E. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is much more than just a state management library. Apollo is a framework for storing and fetching data with \u003Ca href=\"https:\u002F\u002Fgraphql.org\"\u003EGraphQL\u003C\u002Fa\u003E, an API query language.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI will need to store my users' mind map data in a database. GraphQL is a great way to access this stored data that I've been wanting to try out for a long time now.\u003C\u002Fp\u003E\n\n\u003Cp\u003EToggling my 3D animation loop on and off can, of course, be achieved much, much easier with far less overhead. Sooner or later, though, it is going to pay off to have one framework for managing my local application state and remote data storage. \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Ngv-h2Fy--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F7i1rj3lcu4no3rtjx2ur.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Ngv-h2Fy--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F7i1rj3lcu4no3rtjx2ur.gif\" alt=\"Cracking a nut with a sledgehammer\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ESo let's play \u003Ca href=\"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRube_Goldberg\"\u003ERube Goldberg\u003C\u002Fa\u003E and crack a nut with a sledgehammer – let's toggle a single boolean value with Apollo Client!\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"recommended-reading\" href=\"#recommended-reading\"\u003E\n  \u003C\u002Fa\u003E\n  Recommended Reading\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EI'm not going to detail out every single step in today's blog post, I don't want to bore you to death. That being said, if you want to use Appollo Client for local state managment in your own app, I highly recommend this article:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fwww.apollographql.com\u002Fblog\u002Flocal-state-management-with-reactive-variables\u002F\"\u003ELocal State Management with Reactive Variables\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThis was published by the makers of Apollo and is the most up-to-date and comprehensive tutorial I've found. \u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen you google “apollo local state management”, you'll come across quite a few more – I found that they were almost all outdated. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThere is a library \u003Ca href=\"https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Flink\u002Flinks\u002Fstate\u002F\"\u003Eapollo-link-state\u003C\u002Fa\u003E that is deprecated now, because Apollo Client now supports managing local state out of the box.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"the-code\" href=\"#the-code\"\u003E\n  \u003C\u002Fa\u003E\n  The Code\n\u003C\u002Fh1\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"apolloprovider\" href=\"#apolloprovider\"\u003E\n  \u003C\u002Fa\u003E\n  ApolloProvider\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAfter adding the npm packages \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@apollo\u002Fclient\"\u003E@apollo\u002Fclient\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgraphql\"\u003Egraphql\u003C\u002Fa\u003E to my project, the first step is to initialize the client and add an ApolloProvider component:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Findex.js\"\u003Eindex.js\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EReact\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ereact\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EReactDOM\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ereact-dom\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EApolloClient\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EApolloProvider\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@apollo\u002Fclient\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecache\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002Fstorage\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EApp\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FApp\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eclient\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EApolloClient\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Ecache\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ErootElement\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Edocument\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgetElementById\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eroot\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"nx\"\u003EReactDOM\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Erender\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EReact\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EStrictMode\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EApolloProvider\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eclient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eclient\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EApp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002FApolloProvider\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E&gt;\n\u003C\u002Fspan\u003E  \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002FReact.StrictMode&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E,\n\u003C\u002Fspan\u003E  \u003Cspan class=\"nx\"\u003ErootElement\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"cache\" href=\"#cache\"\u003E\n  \u003C\u002Fa\u003E\n  Cache\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENotice how the client in the code example above is initialized with a cache. The cache, in Apollo Client, is the central module for managing data:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002Fcache.ts\"\u003Ecache.ts\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EInMemoryCache\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@apollo\u002Fclient\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecache\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EInMemoryCache\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EInMemoryCache\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003EtypePolicies\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EQuery\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Efields\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"na\"\u003EappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nx\"\u003Eread\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n          \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecache\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENote how the cache module is written in TypeScript. So far, I've been using JavaScript for my project. The tutorial I'm following along is written in TypeScript. I was planning to convert to TypeScript at some point, anyway, so I decide to use TypeScript for the Apollo modules in my project.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"reactive-variables\" href=\"#reactive-variables\"\u003E\n  \u003C\u002Fa\u003E\n  Reactive Variables\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe \u003Ccode\u003EappConfigVar\u003C\u002Fcode\u003E in my cache is a \u003Ca href=\"https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Freact\u002Flocal-state\u002Freactive-variables\u002F\"\u003Ereactive variable\u003C\u002Fa\u003E. This is where the magic happens – the idea is to create reactive variables for everything that is stored locally, i.e. not through a GraphQL API.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FappConfigVar.ts\"\u003EappConfigVar.ts\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EmakeVar\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@apollo\u002Fclient\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EinitialAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FinitialAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EmakeVar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EinitialAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"appconfig-interface\" href=\"#appconfig-interface\"\u003E\n  \u003C\u002Fa\u003E\n  AppConfig Interface\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn TypeScript, we define types or interfaces to help the compiler check if everything is typed correctly.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FAppConfig.ts\"\u003EAppConfig.ts\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"kr\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nl\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eboolean\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see, I'm using \u003Ccode\u003EAppConfig\u003C\u002Fcode\u003E objects to store the state of my application. So far, this contains only one boolean value, \u003Ccode\u003EisPaused\u003C\u002Fcode\u003E. The nut I'm cracking with my sledgehammer.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"initial-app-config\" href=\"#initial-app-config\"\u003E\n  \u003C\u002Fa\u003E\n  Initial App Config\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn \u003Cem\u003EappConfigVar.ts\u003C\u002Fem\u003E, I'm using \u003Cem\u003EinitalAppConfig\u003C\u002Fem\u003E to set up my reactive variable.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FinitialAppConfig.ts\"\u003EinitialAppConfig\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EinitialAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EJSON\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eparse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nb\"\u003Ewindow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ElocalStorage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EgetItem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Enuffshell.appConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EinitialAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EI want my app state to be persistent, even when I reload the page in the browser. To achieve that, I'm storing it in the browser's \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FWindow\u002FlocalStorage\"\u003ElocalStorage\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen the app config reactive var is initialized, I'm checking the local storage for a previously saved app config. If there is one, I'm using this, otherwise, I use a default one, with \u003Ccode\u003EisPaused: false\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"query-to-get-the-app-config\" href=\"#query-to-get-the-app-config\"\u003E\n  \u003C\u002Fa\u003E\n  Query to Get the App Config\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETo get the app config, I define a GraphQL query:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FGetAppConfig.ts\"\u003EGetAppConfig.ts\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Egql\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@apollo\u002Fclient\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EGetAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Egql\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E`\n  query GetAppConfig {\n    appConfig @client {\n      isPaused\n    }\n  }\n`\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EGetAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENotice the \u003Ccode\u003E@client\u003C\u002Fcode\u003E part in the query definition – this tells Apollo Client that the app config comes from a local state, i.e. it does not have to be fetched through the GraphQL API.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"custom-hook\" href=\"#custom-hook\"\u003E\n  \u003C\u002Fa\u003E\n  Custom Hook\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI've decided to write a custom hook to wrap up all that Apollo goodness and to be able to conveniently use it from my React components:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FuseAppConfig.ts\"\u003EuseAppConfig.ts\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseQuery\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@apollo\u002Fclient\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EGetAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FGetAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EsaveAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FsaveAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfig\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseQuery\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EGetAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003EtogglePause\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E...\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nx\"\u003EsaveAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see, I'm using the \u003Ca href=\"https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Freact\u002Fapi\u002Freact\u002Fhooks\u002F#usequery\"\u003EuseQuery\u003C\u002Fa\u003E hook from the Apollo Client to get the current value of the app config by passing my \u003Ccode\u003EGetAppConfig\u003C\u002Fcode\u003E query.\u003C\u002Fp\u003E\n\n\u003Cp\u003EMy hook returns an object that allows React components to get the current state (is the app paused?) and toggle the pause on\u002Foff.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"persisting-the-config-in-local-storage\" href=\"#persisting-the-config-in-local-storage\"\u003E\n  \u003C\u002Fa\u003E\n  Persisting the Config in Local Storage\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn my custom hook, I'm calling this function \u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FsaveAppConfig.ts\"\u003EsaveAppConfig\u003C\u002Fa\u003E to store my config in the browser's local storage:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight typescript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EsaveAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nb\"\u003Ewindow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ElocalStorage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EsetItem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Enuffshell.appConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003EJSON\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estringify\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"toggle-button-component\" href=\"#toggle-button-component\"\u003E\n  \u003C\u002Fa\u003E\n  Toggle Button Component\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EHere's the \u003Ccode\u003EuseAppConfig\u003C\u002Fcode\u003E in action, in the \u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Ffeatures\u002FpauseButton\u002FPauseButton.js\"\u003EPauseButton\u003C\u002Fa\u003E component:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EReact\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ereact\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseAppConfig\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E..\u002F..\u002Fstorage\u002FappConfig\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Estyles\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FPauseButton.module.css\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPauseButton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EtogglePause\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseAppConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ebutton\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EclassName\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Estyles\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EPauseButton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EonClick\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtogglePause\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Eunpause\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Epause\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002Fbutton\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E&gt;\n\u003C\u002Fspan\u003E  \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"adding-the-button\" href=\"#adding-the-button\"\u003E\n  \u003C\u002Fa\u003E\n  Adding the Button\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI'm adding this button component to my \u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002FApp.js\"\u003EApp\u003C\u002Fa\u003E component:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EReact\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EcreateRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EuseEffect\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ereact\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPauseButton\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002Ffeatures\u002FpauseButton\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ErenderMindMap\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002FrenderMindMap\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EApp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EdivRef\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EcreateRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003EuseEffect\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ErenderMindMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EdivRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ecurrent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EdivRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&lt;&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EPauseButton\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eref\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EdivRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"sr\"\u003E\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E&gt;\n\u003C\u002Fspan\u003E    \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"sr\"\u003E\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"err\"\u003E&gt;\n\u003C\u002Fspan\u003E  \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"pausing-the-3d-rendering\" href=\"#pausing-the-3d-rendering\"\u003E\n  \u003C\u002Fa\u003E\n  Pausing the 3D Rendering\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EFinally, inside the loop that runs 60 times per second to re-render my 3D model, I can get the current state, asking: Is the app paused?\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003E\u003Ca href=\"https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002FrenderMindMap.js\"\u003ErenderMindMap.js\u003C\u002Fa\u003E\u003C\u002Fem\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight javascript\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eanimate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EappConfigVar\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EisPaused\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Egraph\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EtickFrame\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Econtrols\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eupdate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Erenderer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Erender\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Escene\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecamera\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003ErequestAnimationFrame\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eanimate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E})();\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn this case, I'm not using the \u003Ccode\u003EuseAppConfig\u003C\u002Fcode\u003E hook, because this is not a React component. I can simply get the app config by calling my reactive variable \u003Ccode\u003EappConfigVar\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"the-result\" href=\"#the-result\"\u003E\n  \u003C\u002Fa\u003E\n  The Result\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EWow, what a wild ride – so much code for such a little thing to achieve! Even old-school Redux is simpler. I hope it will be worth it in the long run, when I fetch and write user data through a GraphQL API and can then handle everything through Apollo.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ciframe src=\"https:\u002F\u002Fcodesandbox.io\u002Fembed\u002F181dt\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" loading=\"lazy\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\u003E\n\u003C\u002Fiframe\u003E\n\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"to-be-continued\" href=\"#to-be-continued\"\u003E\n  \u003C\u002Fa\u003E\n  To Be Continued…\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EI'm planning to turn my mind map into a social media network and collaboration tool and will continue to blog about my progress in follow-up articles. Stay tuned!\u003C\u002Fp\u003E\n\n";b.body_markdown="---\ntitle: Local State Management with Apollo Client\npublished: true\ndescription: I'm building a social media network and collaboration tool based on mind maps, documenting my work in this series of blog posts\ntags: javascript,graphql,apollo,react\ncover_image: https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fvrb4re0xt7w83qngym92.png\nseries: Nuffshell Coding Diary\n---\n\n*I'm building a social media network and collaboration tool based on mind maps, documenting my work in this series of blog posts. Follow me if you're interested in what I've learned along the way about building web apps with React, Tailwind CSS, Firebase, Apollo\u002FGraphQL, three.js and TypeScript.*\n\n# Today's Goal\n\nIn my [previous posts](https:\u002F\u002Fdev.to\u002Fpahund\u002Fthe-nuffshell-coding-diary-6ij), I've built a 3D mind map, using React and three.js. \n\nFor this project, I've used [CodeSandbox](](https:\u002F\u002Fdev.to\u002Fpahund\u002Fthe-nuffshell-coding-diary-6ij)) exclusisvely for coding and I just love it! It works just like VS Code, but runs completely in the browser and lets me share my code easily in my blog posts.\n\nJust one thing that bothered me as I worked on my mind map: Performance issues. The nature of rendering an interactive 3D model involves having a loop that continuously updates, running 60 times per second. CodeSandbox seems to have problems with this when my demo is running in the preview window, writing code slows down and becomes a pain.\n\nTo fix this, I'm going to add a “pause” button to my mind map demo that I can use to start\u002Fstop the rendering loop.\n\n![Pause button](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fu25t6hpb7r2ytd60eyo5.gif)\n\n# Picking a State Management Library\n\nI know I'm going to have to add some way of managing application state to my React app at some point. My plan is to ultimately have a web app where users log in to collaborate on mind maps with others. \n\nMy “pause” button is the first use case that actually requires an application state, so it's time to think about state management.\n\nI've been using [Redux](https:\u002F\u002Fredux.js.org) in my day job for five years now. Some people think it's overly complicated. I disagree, especially with the latest version of [Redux Toolkit](https:\u002F\u002Fredux-toolkit.js.org), it's become a lot easier to adopt and use.\n\nFor small projects, I also like [Zustand](https:\u002F\u002Fgithub.com\u002Fpmndrs\u002Fzustand) a lot – much more light-weight than Redux. \n\nThen [Recoil](https:\u002F\u002Frecoiljs.org) popped up this year and looks really promising, especially considering it is backed by Facebook, the company behind React.\n\nHowever, for my collaborative mind mapping project, I've decided to go with [Apollo Client](https:\u002F\u002Fwww.apollographql.com\u002Fapollo-client). \n\nThis is much more than just a state management library. Apollo is a framework for storing and fetching data with [GraphQL](https:\u002F\u002Fgraphql.org), an API query language.\n\nI will need to store my users' mind map data in a database. GraphQL is a great way to access this stored data that I've been wanting to try out for a long time now.\n\nToggling my 3D animation loop on and off can, of course, be achieved much, much easier with far less overhead. Sooner or later, though, it is going to pay off to have one framework for managing my local application state and remote data storage. \n\n![Cracking a nut with a sledgehammer](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002F7i1rj3lcu4no3rtjx2ur.gif)\n\nSo let's play [Rube Goldberg](https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FRube_Goldberg) and crack a nut with a sledgehammer – let's toggle a single boolean value with Apollo Client!\n\n# Recommended Reading\n\nI'm not going to detail out every single step in today's blog post, I don't want to bore you to death. That being said, if you want to use Appollo Client for local state managment in your own app, I highly recommend this article:\n\n* [Local State Management with Reactive Variables](https:\u002F\u002Fwww.apollographql.com\u002Fblog\u002Flocal-state-management-with-reactive-variables\u002F)\n\nThis was published by the makers of Apollo and is the most up-to-date and comprehensive tutorial I've found. \n\nWhen you google “apollo local state management”, you'll come across quite a few more – I found that they were almost all outdated. \n\nThere is a library [apollo-link-state](https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Flink\u002Flinks\u002Fstate\u002F) that is deprecated now, because Apollo Client now supports managing local state out of the box.\n\n# The Code\n\n## ApolloProvider\n\nAfter adding the npm packages [@apollo\u002Fclient](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@apollo\u002Fclient) and [graphql](https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fgraphql) to my project, the first step is to initialize the client and add an ApolloProvider component:\n\n*[index.js](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Findex.js)*\n\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient, ApolloProvider } from '@apollo\u002Fclient';\nimport { cache } from '.\u002Fstorage';\nimport App from '.\u002FApp';\n\nconst client = new ApolloClient({\n  cache\n});\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  \u003CReact.StrictMode\u003E\n    \u003CApolloProvider client={client}\u003E\n      \u003CApp \u002F\u003E\n    \u003C\u002FApolloProvider\u003E\n  \u003C\u002FReact.StrictMode\u003E,\n  rootElement\n);\n```\n\n## Cache\n\nNotice how the client in the code example above is initialized with a cache. The cache, in Apollo Client, is the central module for managing data:\n\n*[cache.ts](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002Fcache.ts)*\n\n```typescript\nimport { InMemoryCache } from '@apollo\u002Fclient';\nimport { appConfigVar } from '.\u002FappConfig';\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        appConfig: {\n          read() {\n            return appConfigVar();\n          }\n        }\n      }\n    }\n  }\n});\n\nexport default cache;\n```\n\nNote how the cache module is written in TypeScript. So far, I've been using JavaScript for my project. The tutorial I'm following along is written in TypeScript. I was planning to convert to TypeScript at some point, anyway, so I decide to use TypeScript for the Apollo modules in my project.\n\n## Reactive Variables\n\nThe `appConfigVar` in my cache is a [reactive variable](https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Freact\u002Flocal-state\u002Freactive-variables\u002F). This is where the magic happens – the idea is to create reactive variables for everything that is stored locally, i.e. not through a GraphQL API.\n\n*[appConfigVar.ts](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FappConfigVar.ts)*\n\n```typescript\nimport { makeVar } from '@apollo\u002Fclient';\nimport AppConfig from '.\u002FAppConfig';\nimport initialAppConfig from '.\u002FinitialAppConfig';\n\nconst appConfigVar = makeVar\u003CAppConfig\u003E(initialAppConfig);\n\nexport default appConfigVar;\n```\n\n## AppConfig Interface\n\nIn TypeScript, we define types or interfaces to help the compiler check if everything is typed correctly.\n\n*[AppConfig.ts](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FAppConfig.ts)*\n\n```typescript\ninterface AppConfig {\n  isPaused: boolean;\n}\n\nexport default AppConfig;\n```\n\nAs you can see, I'm using `AppConfig` objects to store the state of my application. So far, this contains only one boolean value, `isPaused`. The nut I'm cracking with my sledgehammer.\n\n## Initial App Config\n\nIn *appConfigVar.ts*, I'm using *initalAppConfig* to set up my reactive variable.\n\n*[initialAppConfig](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FinitialAppConfig.ts)*\n\n```typescript\nimport AppConfig from '.\u002FAppConfig';\n\nconst initialAppConfig: AppConfig = JSON.parse(\n  window.localStorage.getItem('nuffshell.appConfig')\n) || {\n  isPaused: false\n};\n\nexport default initialAppConfig;\n```\n\nI want my app state to be persistent, even when I reload the page in the browser. To achieve that, I'm storing it in the browser's [localStorage](https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FWindow\u002FlocalStorage).\n\nWhen the app config reactive var is initialized, I'm checking the local storage for a previously saved app config. If there is one, I'm using this, otherwise, I use a default one, with `isPaused: false`.\n\n## Query to Get the App Config\n\nTo get the app config, I define a GraphQL query:\n\n*[GetAppConfig.ts](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FGetAppConfig.ts)*\n\n```typescript\nimport { gql } from '@apollo\u002Fclient';\n\nconst GetAppConfig = gql`\n  query GetAppConfig {\n    appConfig @client {\n      isPaused\n    }\n  }\n`;\n\nexport default GetAppConfig;\n```\n\nNotice the `@client` part in the query definition – this tells Apollo Client that the app config comes from a local state, i.e. it does not have to be fetched through the GraphQL API.\n\n## Custom Hook\n\nI've decided to write a custom hook to wrap up all that Apollo goodness and to be able to conveniently use it from my React components:\n\n*[useAppConfig.ts](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FuseAppConfig.ts)*\n\n```typescript\nimport { useQuery } from '@apollo\u002Fclient';\nimport appConfigVar from '.\u002FappConfigVar';\nimport GetAppConfig from '.\u002FGetAppConfig';\nimport saveAppConfig from '.\u002FsaveAppConfig';\n\nexport default function useAppConfig() {\n  const {\n    data: { appConfig }\n  } = useQuery(GetAppConfig);\n\n  return {\n    isPaused: appConfig.isPaused,\n    togglePause() {\n      appConfigVar({ ...appConfig, isPaused: !appConfig.isPaused });\n      saveAppConfig();\n    }\n  };\n}\n```\n\nAs you can see, I'm using the [useQuery](https:\u002F\u002Fwww.apollographql.com\u002Fdocs\u002Freact\u002Fapi\u002Freact\u002Fhooks\u002F#usequery) hook from the Apollo Client to get the current value of the app config by passing my `GetAppConfig` query.\n\nMy hook returns an object that allows React components to get the current state (is the app paused?) and toggle the pause on\u002Foff.\n\n## Persisting the Config in Local Storage\n\nIn my custom hook, I'm calling this function [saveAppConfig](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Fstorage\u002FappConfig\u002FsaveAppConfig.ts) to store my config in the browser's local storage:\n\n```typescript\nimport appConfigVar from '.\u002FappConfigVar';\n\nexport default function saveAppConfig() {\n  window.localStorage.setItem(\n    'nuffshell.appConfig',\n    JSON.stringify(appConfigVar())\n  );\n}\n```\n\n## Toggle Button Component\n\nHere's the `useAppConfig` in action, in the [PauseButton](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002Ffeatures\u002FpauseButton\u002FPauseButton.js) component:\n\n```javascript\nimport React from 'react';\nimport { useAppConfig } from '..\u002F..\u002Fstorage\u002FappConfig';\nimport styles from '.\u002FPauseButton.module.css';\n\nexport default function PauseButton() {\n  const { isPaused, togglePause } = useAppConfig();\n\n  return (\n    \u003Cbutton className={styles.PauseButton} onClick={togglePause}\u003E\n      {isPaused ? 'unpause' : 'pause'}\n    \u003C\u002Fbutton\u003E\n  );\n}\n```\n\n## Adding the Button\n\nI'm adding this button component to my [App](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002FApp.js) component:\n\n```javascript\nimport React, { createRef, useEffect } from 'react';\nimport { PauseButton } from '.\u002Ffeatures\u002FpauseButton';\nimport renderMindMap from '.\u002FrenderMindMap';\n\nexport default function App() {\n  const divRef = createRef();\n  useEffect(() =\u003E renderMindMap(divRef.current), [divRef]);\n  return (\n    \u003C\u003E\n      \u003CPauseButton \u002F\u003E\n      \u003Cdiv ref={divRef} \u002F\u003E\n    \u003C\u002F\u003E\n  );\n}\n```\n\n## Pausing the 3D Rendering\n\nFinally, inside the loop that runs 60 times per second to re-render my 3D model, I can get the current state, asking: Is the app paused?\n\n*[renderMindMap.js](https:\u002F\u002Fcodesandbox.io\u002Fs\u002Fstep-21-local-state-with-apollo-part-6-181dt?file=\u002Fsrc\u002FrenderMindMap.js)*\n\n```javascript\n(function animate() {\n  const { isPaused } = appConfigVar();\n  if (!isPaused) {\n    graph.tickFrame();\n    controls.update();\n    renderer.render(scene, camera);\n  }\n  requestAnimationFrame(animate);\n})();\n```\n\nIn this case, I'm not using the `useAppConfig` hook, because this is not a React component. I can simply get the app config by calling my reactive variable `appConfigVar`.\n\n# The Result\n\nWow, what a wild ride – so much code for such a little thing to achieve! Even old-school Redux is simpler. I hope it will be worth it in the long run, when I fetch and write user data through a GraphQL API and can then handle everything through Apollo.\n\n{% codesandbox 181dt %}\n\n# To Be Continued…\n\nI'm planning to turn my mind map into a social media network and collaboration tool and will continue to blog about my progress in follow-up articles. Stay tuned!";b.user={name:"Patrick Hund",username:f,twitter_username:"wiekatz",github_username:f,website_url:e,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--TK4TNi3L--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F53927\u002F26332ddb-09d4-41f8-92d6-8ce603020f3a.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--8lfZ-0Xx--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F53927\u002F26332ddb-09d4-41f8-92d6-8ce603020f3a.png"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:b}},mutations:[["SET_CURRENT_ARTICLE",b]]}}("2020-12-09T12:05:47Z",{},"https:\u002F\u002Fdev.to\u002Fpahund\u002Flocal-state-management-with-apollo-client-14lf",13,null,"pahund")));