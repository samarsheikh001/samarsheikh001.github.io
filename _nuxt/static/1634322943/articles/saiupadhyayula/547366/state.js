window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:547366,title:"Maven Complete Tutorial for Beginners",description:"This post was originally published in programmingtechie.com  If you are a Java Developer, your day to...",readable_publish_date:"Dec 19 '20",slug:"maven-complete-tutorial-for-beginners-1jek",path:"\u002Fsaiupadhyayula\u002Fmaven-complete-tutorial-for-beginners-1jek",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--WqdtvpVH--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMAVEN-COMPLETE-TUTORIAL-1.png%3Fresize%3D1024%252C576%26ssl%3D1",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--vl6ghYzj--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMAVEN-COMPLETE-TUTORIAL-1.png%3Fresize%3D1024%252C576%26ssl%3D1",canonical_url:c,created_at:"2020-12-19T20:41:40Z",edited_at:"2020-12-23T16:11:11Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:36,tag_list:"java, maven, beginners, programming",tags:["java","maven","beginners","programming"],body_html:"\u003Cp\u003E\u003Cstrong\u003EThis post was originally published in \u003Ca href=\"https:\u002F\u002Fprogrammingtechie.com\u002F\"\u003Eprogrammingtechie.com\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you are a Java Developer, your day to day activities while working on Java Projects includes writing code, compiling code, testing, packaging code in the form of an artifact like JAR, WAR or EAR and then deploying this artifact to an Application Server.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EApache Maven\u003C\u002Fstrong\u003E automates all the tasks which are mentioned above by minimizing the manual overhead.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this tutorial, we will understand \u003Cstrong\u003EWhat is Apache Maven?\u003C\u002Fstrong\u003E and will cover all the concepts required for you to start using Maven in your Java Projects\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you are a visual learner like me, check out the below video tutorial:\u003Cbr\u003E\n\u003Ciframe width=\"710\" height=\"399\" src=\"https:\u002F\u002Fwww.youtube.com\u002Fembed\u002FJhSBS2OpGdU\" allowfullscreen loading=\"lazy\"\u003E\n\u003C\u002Fiframe\u003E\n\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"table-of-contents\" href=\"#table-of-contents\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Table of Contents\n\u003C\u002Fh2\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-1\"\u003EWhat is Apache Maven\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-2\"\u003EInstalling Maven\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-3\"\u003EConfigure Maven Installation in IDE\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-4\"\u003ECreate your First Maven Project\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-5\"\u003EExploring Maven Folder Structure\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-6\"\u003EMaven Core Concepts\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-7\"\u003EProject Object Model\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-8\"\u003ESimple POM File\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-9\"\u003ESuper POM File\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-10\"\u003EEffective POM File\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-11\"\u003EDependencies\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-12\"\u003ETransitive Dependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-13\"\u003EExcluding Dependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-14\"\u003ESNAPSHOT and RELEASE dependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-15\"\u003EDependency Scopes\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-16\"\u003ERepositories\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-17\"\u003ESnapshot and Release Version Handling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-18\"\u003EMaven Build Lifecycle\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-19\"\u003EPlugins and Goals\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-20\"\u003EMaven Compile Plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-21\"\u003EMaven Surefire Plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-22\"\u003EMaven Install Plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-23\"\u003EMaven Deploy Plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-24\"\u003EOther Maven Plugins\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ca href=\"#chapter-25\"\u003EMaven Multi Module Projects\u003C\u002Fa\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-26\"\u003ECreating Multi Module Project using IntelliJ\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-27\"\u003EManaging Dependencies inside Maven Multi Module Project\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-28\"\u003EManaging Plugins inside Maven Multi Module Project\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-29\"\u003EUsing Profiles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#chapter-30\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"what-is-apache-maven-\" href=\"#what-is-apache-maven-\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  What is Apache Maven ?\u003Ca name=\"chapter-1\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EApache Maven\u003C\u002Fstrong\u003E is a Project Management Tool used to manage projects which are developed using JVM languages like Java, Scala, Groovy etc.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe major tasks of a Project Management Tool include:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EBuilding the Source Code\u003C\u002Fli\u003E\n\u003Cli\u003ETesting Source Code\u003C\u002Fli\u003E\n\u003Cli\u003EPackaging the Source Code into an Artifact (ZIP, JAR, WAR or EAR)\u003C\u002Fli\u003E\n\u003Cli\u003EHandles Versioning and Releases of the Artifacts\u003C\u002Fli\u003E\n\u003Cli\u003EGenerating JavaDocs from the Source Code\u003C\u002Fli\u003E\n\u003Cli\u003EManaging Project Dependencies\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EMaven is also called as a \u003Cstrong\u003EBuild Tool\u003C\u002Fstrong\u003E or a \u003Cstrong\u003EDependency Management Tool\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"installing-maven\" href=\"#installing-maven\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Installing Maven\u003Ca name=\"chapter-1\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EYou can download Maven from the website \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fdownload.cgi?Preferred=ftp:\u002F\u002Fftp.osuosl.org\u002Fpub\u002Fapache\u002F\"\u003Ehere\u003C\u002Fa\u003E. At the time of writing this tutorial, the latest version of Maven is 3.6.3.\u003C\u002Fp\u003E\n\n\u003Cp\u003EUnder the Files section, you can download Maven by clicking on the link which looks something like \u003Ca href=\"https:\u002F\u002Fmirrors.supportex.net\u002Fapache\u002Fmaven\u002Fmaven-3\u002F3.6.3\u002Fbinaries\u002Fapache-maven-3.6.3-bin.zip\"\u003Eapache-maven-3.6.3-bin.zip\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you have downloaded and unzipped the folder, make sure to add the M2_HOME environment variable and to set the value of this variable to location of the unzipped folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter that make sure to set another environment variable called M2 which contains the value M2_HOME\u002Fbin\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--a3MnaeKJ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variables.png%3Fw%3D626%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--a3MnaeKJ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variables.png%3Fw%3D626%26ssl%3D1\" alt=\"M2 Environment Variable\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter that, make sure to update the Path variable also with the M2 environment variable.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--gu6yxwMe--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variable_Path.png%3Fw%3D527%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--gu6yxwMe--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variable_Path.png%3Fw%3D527%26ssl%3D1\" alt=\"M2 Environment Variable inside Path\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you completed the above steps, open a new terminal window and type \u003Ccode\u003Emvn –version\u003C\u002Fcode\u003E and you should see the output like below:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--oBvII8K6--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Version-Check.png%3Fw%3D1245%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--oBvII8K6--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Version-Check.png%3Fw%3D1245%26ssl%3D1\" alt=\"Maven Version Check\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"configure-maven-installation-in-ide\" href=\"#configure-maven-installation-in-ide\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Configure Maven Installation in IDE\u003Ca name=\"chapter-2\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EThe next step is to configure the maven installation inside your favorite IDE, in this tutorial we are going to use IntelliJ IDEA as the primary IDE.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can download the community edition of this IDE \u003Ca href=\"https:\u002F\u002Fwww.jetbrains.com\u002Fidea\u002Fdownload\u002F#section=windows\"\u003Ehere\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you have installed the IDE, on the Welcome Window click on the \u003Cstrong\u003EConfigure\u003C\u002Fstrong\u003E button and select Settings and inside the Settings Window search for Maven and under the \u003Cstrong\u003EMaven home directory\u003C\u002Fstrong\u003E choose the Maven directory.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--pzFecvMQ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-1.png%3Fw%3D802%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--pzFecvMQ--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-1.png%3Fw%3D802%26ssl%3D1\" alt=\"IntelliJ\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--FMHzNfvv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-2.png%3Fw%3D982%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--FMHzNfvv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-2.png%3Fw%3D982%26ssl%3D1\" alt=\"Configure Maven\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EClick on \u003Cstrong\u003EApply\u003C\u002Fstrong\u003E and then \u003Cstrong\u003EOK\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou configured Maven successfully in your IDE. Now it’s time to create our first Maven Project.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"create-your-first-maven-project\" href=\"#create-your-first-maven-project\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Create your First Maven Project\u003Ca name=\"chapter-3\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EIn IntelliJ, click on \u003Cstrong\u003ENew Project\u003C\u002Fstrong\u003E and in the window, select \u003Cstrong\u003EMaven\u003C\u002Fstrong\u003E to the left side and click on \u003Cstrong\u003ENext\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThen enter your project name and if you expand the section \u003Cstrong\u003EArtifact Coordinates\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou will see the fields \u003Cstrong\u003EGroupId\u003C\u002Fstrong\u003E, \u003Cstrong\u003EArtifactId\u003C\u002Fstrong\u003E and \u003Cstrong\u003EVersion\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EA GroupId is like a identifier for your project which usually follows the Java Package naming convention, so in our example IntelliJ has by default added the value org.example but you can add any value you like.\u003C\u002Fli\u003E\n\u003Cli\u003EAn ArtifactId is the name of the project you are creating\u003C\u002Fli\u003E\n\u003Cli\u003EA Version is a unique number which identifies the version of our project.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--22mWGgs8--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FNew-Project.png%3Fw%3D1204%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--22mWGgs8--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FNew-Project.png%3Fw%3D1204%26ssl%3D1\" alt=\"Artifact Coordinates\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you click on \u003Cstrong\u003EFinish\u003C\u002Fstrong\u003E, IntelliJ should open the project and the folder structure of the project will look something like the picture you see below.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--KEjjp-WI--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Project-Structure.png%3Fw%3D922%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--KEjjp-WI--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Project-Structure.png%3Fw%3D922%26ssl%3D1\" alt=\"Maven Project Structure\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"exploring-maven-folder-structure\" href=\"#exploring-maven-folder-structure\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Exploring Maven Folder Structure\u003Ca name=\"chapter-4\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ELet’s have a look at the Folder Structure of the Maven Project we just created.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003Esrc\u003C\u002Fstrong\u003E folder is the root for our application source code and tests. Then we have the following subfolders:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThe folder \u003Cstrong\u003Esrc\u002Fmain\u002Fjava\u003C\u002Fstrong\u003E contains the java source code, all the production code for our application resides here\u003C\u002Fli\u003E\n\u003Cli\u003EIn the \u003Cstrong\u003Esrc\u002Fmain\u002Fresources\u003C\u002Fstrong\u003E we will store all the files we are going to use in our project (example: Property Files, any files where we need to read in our application like XML, CSV etc.). If you are developing a web-application we will usually place all the static resources inside this folder.\u003C\u002Fli\u003E\n\u003Cli\u003EIn the \u003Cstrong\u003Esrc\u002Ftest\u002Fjava\u003C\u002Fstrong\u003E folder we will store all the test classes in our project.\u003C\u002Fli\u003E\n\u003Cli\u003EThere is another folder called \u003Cstrong\u003Etarget\u003C\u002Fstrong\u003E (currently not visible), which stores the compiled java class files. We will discuss about this in the coming sections\u003C\u002Fli\u003E\n\u003Cli\u003EAnd lastly, we have the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file which contains the metadata of the project dependencies.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"maven-core-concepts\" href=\"#maven-core-concepts\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Core Concepts\u003Ca name=\"chapter-5\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"project-object-model\" href=\"#project-object-model\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Project Object Model\u003Ca name=\"chapter-6\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003EProject Object Model\u003C\u002Fstrong\u003E File(also called as \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E) contains the meta-data of the project and is also responsible to manage dependencies and to configure plugins which helps us in automating many repetitive tasks.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere is how a basic \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file looks like:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;  \n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eproject\u003C\u002Fstrong\u003E is the top level tag of our \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file, which encapsulates all the information related to our Maven Project.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EmodelVersion\u003C\u002Fstrong\u003E represents what version of POM you are using. The modelVersion for Maven 3 is always 4.0. This will never change unless you are using another major version of Maven.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ENow as we know what is a POM file, let’s have a look at different type’s of POM files. We have basically 3 types of POM files:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ESimple POM file\u003C\u002Fli\u003E\n\u003Cli\u003ESuper POM file\u003C\u002Fli\u003E\n\u003Cli\u003EEffective POM file\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"simple-pom-file\" href=\"#simple-pom-file\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Simple POM File\u003Ca name=\"chapter-7\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThis is the same file(\u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E) which was generated in the previous section. It only contains information which is relevant to our current project.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"super-pom-file\" href=\"#super-pom-file\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Super POM File\u003Ca name=\"chapter-8\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EA \u003Cstrong\u003ESuper POM File\u003C\u002Fstrong\u003E is a parent for all the \u003Cstrong\u003ESimple POM files\u003C\u002Fstrong\u003E, it contains a set of default configuration which is shared by all the \u003Cstrong\u003ESimple POM\u003C\u002Fstrong\u003E files.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can find the \u003Cstrong\u003ESuper POM\u003C\u002Fstrong\u003E file inside the Maven installation directory under the path \u003Cstrong\u003EM2_HOME\u002Flib\u003C\u002Fstrong\u003E and inside the JAR file \u003Cstrong\u003Emaven-model-builder-XXX.jar\u003C\u002Fstrong\u003E where XXX represents the version of the maven version you are using.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe can find it under the package name \u003Cstrong\u003Eorg.apache.maven.model\u003C\u002Fstrong\u003E under the file name \u003Cstrong\u003Epom-4.0.0.xml\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003ECAUTION\u003C\u002Fstrong\u003E: You should never try to edit the Super POM as it contains sensible defaults from Maven.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"effective-pom-file\" href=\"#effective-pom-file\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Effective POM File\u003Ca name=\"chapter-9\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EAn \u003Cstrong\u003EEffective POM File\u003C\u002Fstrong\u003E is nothing but a combination of \u003Cstrong\u003ESimple POM\u003C\u002Fstrong\u003E and \u003Cstrong\u003ESuper POM\u003C\u002Fstrong\u003E File’s.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt’s just a way of checking all the information of the pom.xml files in one place.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe will have a look at how this will be helpful in the upcoming sections.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can have a look at the \u003Cstrong\u003EEffective POM\u003C\u002Fstrong\u003E of our \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file by typing the following command\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ccode\u003Emvn help:effective-pom\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn IntelliJ, you can simply right click on the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file, select \u003Cstrong\u003EMaven\u003C\u002Fstrong\u003E -&gt; \u003Cstrong\u003EShow Effective POM\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"dependencies\" href=\"#dependencies\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Dependencies\u003Ca name=\"chapter-10\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIf you are working on any non-trivial Java Project chances are that you are using many third party JAR files in your project to develop the application. These JAR files can be anything like a Framework or a Library. Examples include \u003Cstrong\u003EJunit\u003C\u002Fstrong\u003E, \u003Cstrong\u003ESpring Framework\u003C\u002Fstrong\u003E, \u003Cstrong\u003ESelenium\u003C\u002Fstrong\u003E etc.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese external libraries are called as \u003Cstrong\u003Edependencies\u003C\u002Fstrong\u003E. Maven provides an excellent way to specify and manage dependencies in our \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWithout using Maven, you have to manually download the required JAR files from internet and add them one-by-one to the classpath of our project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EMaven provides a \u003Cstrong\u003Edependencies\u003C\u002Fstrong\u003E section inside the pom.xml where you can specify the information of the JAR you require in your project (\u003Cstrong\u003EgroupId\u003C\u002Fstrong\u003E, \u003Cstrong\u003EartifactId\u003C\u002Fstrong\u003E and \u003Cstrong\u003Eversion\u003C\u002Fstrong\u003E). Once you have specified the required libraries, maven will automatically download these dependencies into our project and adds them to the classpath of our project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EInside the \u003Cstrong\u003Edependencies\u003C\u002Fstrong\u003E section you can define each individual dependency like below inside the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;\u002FartifactId&gt;\n            &lt;version&gt;5.5.2&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n    &lt;\u002Fdependencies&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe have defined \u003Cstrong\u003EJunit5\u003C\u002Fstrong\u003E as a \u003Cstrong\u003Edependency\u003C\u002Fstrong\u003E in our \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENotice that I have mentioned the tags \u003Cstrong\u003EgroupId\u003C\u002Fstrong\u003E, \u003Cstrong\u003EartifactId\u003C\u002Fstrong\u003E and \u003Cstrong\u003Eversion\u003C\u002Fstrong\u003E to uniquely identify a dependency and by providing these values, Maven can automatically download these dependencies to our project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn IntelliJ, make sure to click on the Refresh button under the Maven Tab in the right side, to force IntelliJ to initiate the download of the dependencies. Check the below image:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6qaDJuG0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Dependencies-1.png%3Fresize%3D1536%252C725%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6qaDJuG0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Dependencies-1.png%3Fresize%3D1536%252C725%26ssl%3D1\" alt=\"Intellij Maven Dependencies\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this way, you can provide all the dependencies needed in your project inside the pom.xml and Maven will automatically download them.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"transitive-dependencies\" href=\"#transitive-dependencies\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Transitive Dependencies\u003Ca name=\"chapter-11\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIn the above example, you can observe that the \u003Cstrong\u003Ejunit-jupiter-engine\u003C\u002Fstrong\u003E indeed depends on other JAR files like \u003Cstrong\u003Eapiguardian-api\u003C\u002Fstrong\u003E, \u003Cstrong\u003Ejunit-platform-engine\u003C\u002Fstrong\u003E and \u003Cstrong\u003Ejunit-jupiter-api\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese JAR files are called \u003Cstrong\u003ETransitive Dependencies\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_5sQZUAM--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMavne-Dependencies-1.png%3Fw%3D1229%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_5sQZUAM--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMavne-Dependencies-1.png%3Fw%3D1229%26ssl%3D1\" alt=\"Maven Transitive Dependencies\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"excluding-dependencies\" href=\"#excluding-dependencies\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Excluding Dependencies\u003Ca name=\"chapter-12\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThere are some instances where we will have some conflicts between the project dependencies and the transitive dependencies, at that time we can manually exclude the transitive dependency we don’t need.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor example, if you are developing your application using Spring Boot, there is a dependency called \u003Cstrong\u003Espring-boot-starter-test\u003C\u002Fstrong\u003E which will provide all the dependencies needed to test the Spring Boot applications.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis \u003Cstrong\u003Espring-boot-starter-test\u003C\u002Fstrong\u003E dependency contains \u003Cstrong\u003EJunit 4\u003C\u002Fstrong\u003E as the transitive dependency, as we are already using \u003Cstrong\u003EJunit 5\u003C\u002Fstrong\u003E we can exclude the transitive dependency like below:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;\u002FartifactId&gt;\n            &lt;version&gt;5.5.2&lt;\u002Fversion&gt;\n        &lt;\u002Fdependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;\u002FartifactId&gt;\n            &lt;version&gt;2.1.6.RELEASE&lt;\u002Fversion&gt;\n            &lt;scope&gt;test&lt;\u002Fscope&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;junit&lt;\u002FgroupId&gt;\n                    &lt;artifactId&gt;junit&lt;\u002FartifactId&gt;\n                &lt;\u002Fexclusion&gt;\n            &lt;\u002Fexclusions&gt;\n        &lt;\u002Fdependency&gt;\n    &lt;\u002Fdependencies&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003ENOTE\u003C\u002Fstrong\u003E: The newer Spring Boot versions comes with JUnit 5 dependency, I purposely used the old version \u003Cstrong\u003E2.1.6.RELEASE\u003C\u002Fstrong\u003E as an example.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"snapshot-and-release-dependencies\" href=\"#snapshot-and-release-dependencies\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  SNAPSHOT and RELEASE dependencies\u003Ca name=\"chapter-13\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EA dependency can be categorized into two ways:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ESNAPSHOT\u003C\u002Fli\u003E\n\u003Cli\u003ERELEASE\nA Snapshot Dependency resembles that the project version is under development.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EIf you are working on a Java project in a team, chances are that you are following some kind of iterative process where you go through the phases of development and then release the software at the end of the phase.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen the project is under development we generally use the \u003Cstrong\u003ESNAPSHOT\u003C\u002Fstrong\u003E dependencies, which looks something like \u003Cstrong\u003E1.0-SNAPSHOT\u003C\u002Fstrong\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWhen the software is ready for release, we generally create a RELEASE version which looks like \u003Cstrong\u003E1.0.RELEASE\u003C\u002Fstrong\u003E (ex: \u003Cstrong\u003ESpring Boot Starter Test dependency\u003C\u002Fstrong\u003E)\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-test&lt;\u002FartifactId&gt;\n    &lt;version&gt;2.1.6.RELEASE&lt;\u002Fversion&gt;\n    &lt;scope&gt;test&lt;\u002Fscope&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion&gt;\n            &lt;groupId&gt;junit&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;junit&lt;\u002FartifactId&gt;\n        &lt;\u002Fexclusion&gt;\n    &lt;\u002Fexclusions&gt;\n&lt;\u002Fdependency&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"dependency-scopes\" href=\"#dependency-scopes\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Dependency Scopes\u003Ca name=\"chapter-14\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EEach Maven Dependency can be categorized 6 different scopes.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere are the list of scopes available:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E: This is the default scope if none is specified. Compile time dependencies are available in classpath of the project.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eprovided\u003C\u002Fstrong\u003E: Similar to \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E scope, but indicates that the JDK or the underlying container will provide the dependency at run-time. The dependency will be available at compile time, but not packaged into the artifact.\nAn example of the usage is the \u003Cstrong\u003Ejavax.servlet-api\u003C\u002Fstrong\u003E dependency\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eruntime\u003C\u002Fstrong\u003E: The dependencies defined with this scope will be only available at runtime but not at compile time.\nAn example of the usage:\nImagine if you are using MySQL Driver inside your project, you can add the dependency with scope as runtime, to ensure that the JDBC API abstraction is used instead of MySQL Driver API during implementation.\nIf the source code includes any classes which is part of the MySQL JDBC API, then the code wont compile as the dependency is unavailable at compile time.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Etest\u003C\u002Fstrong\u003E: Dependencies are only available at the time of running the tests, typical examples include Junit and TestNG\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Esystem\u003C\u002Fstrong\u003E: It’s similar to the provided scope, but only difference is we need to explicitly mention where can the dependency be found in the system, using the \u003Cstrong\u003EsystemPath\u003C\u002Fstrong\u003E tag:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003E\u003Ccode\u003E&lt;systemPath&gt;${basedir}\u002Flib\u002Fsome-dependency.jar&lt;\u002FsystemPath&gt;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"repositories\" href=\"#repositories\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Repositories\u003Ca name=\"chapter-15\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn the previous section, we saw how Maven manages and automatically downloads the dependencies.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThese dependencies, are stored inside a special directory called \u003Cstrong\u003ERepository\u003C\u002Fstrong\u003E. There are basically 2 kinds of repositories:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E\nA Local Repository is a directory on the machine where the Maven is running.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThe default location for the Local Repository is \u002F.m2\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn Windows, it looks like:\u003Cbr\u003E\n\u003Cstrong\u003EC:\\Users&lt;user-name&gt;.m2\\repository\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ERemote Repository\u003C\u002Fstrong\u003E\nA Remote Repository is a web-site where we can download Maven Dependencies. This can be a repository provided by Maven (repo.maven.org) or a custom repository setup inside an organization using software like \u003Ca href=\"https:\u002F\u002Fjfrog.com\u002Fartifactory\u002F\"\u003EArtifactory\u003C\u002Fa\u003E or \u003Ca href=\"https:\u002F\u002Fwww.sonatype.com\u002Fnexus\u002Frepository-pro\"\u003ENexus\u003C\u002Fa\u003E.\nNow that we saw different types of repositories, let’s see how Maven Resolves the dependencies.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ENow let’s see how Maven Resolves the dependencies.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--41qRWRi0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FRepositories.png%3Fw%3D631%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--41qRWRi0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FRepositories.png%3Fw%3D631%26ssl%3D1\" alt=\"Maven Dependency Resolution\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EWhen you define a dependency defined inside the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file, Maven first checks whether the dependency is already present in the \u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E or not.\u003C\u002Fli\u003E\n\u003Cli\u003EIf it is not, then it tries to connect to the \u003Cstrong\u003ERemote Repository\u003C\u002Fstrong\u003E, (Ex: \u003Cstrong\u003E\u003Ca href=\"https:\u002F\u002Frepo.maven.org\"\u003Ehttps:\u002F\u002Frepo.maven.org\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E) and tries to download the dependencies, and store them inside the \u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E.\nWe can define the \u003Cstrong\u003ERemote Repository\u003C\u002Fstrong\u003E in our pom.xml like below:\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;repositories&gt;\n  &lt;repository&gt;\n    &lt;id&gt;my-internal-site&lt;\u002Fid&gt;\n    &lt;url&gt;http:\u002F\u002Fmyserver\u002Frepo&lt;\u002Furl&gt;\n  &lt;\u002Frepository&gt;\n&lt;\u002Frepositories&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"snapshot-and-release-version-handling\" href=\"#snapshot-and-release-version-handling\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Snapshot and Release Version Handling\u003Ca name=\"chapter-16\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIn the previous section, we learned that Maven first checks the \u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E before downloading a dependency from \u003Cstrong\u003ERemote Repository\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen dealing with \u003Cstrong\u003ESNAPSHOT\u003C\u002Fstrong\u003E dependencies Maven \u003Cstrong\u003Eperiodically\u003C\u002Fstrong\u003E downloads the dependency from \u003Cstrong\u003ERemote Repository\u003C\u002Fstrong\u003E even though the dependency exists in \u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is because \u003Cstrong\u003ESNAPSHOT\u003C\u002Fstrong\u003E dependencies are under heavy development, and are subjected to change frequently.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can change this behavior by adding a \u003Cstrong\u003E\u003C\u002Fstrong\u003E section inside the \u003Cstrong\u003Erepositories\u003C\u002Fstrong\u003E tag.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;repositories&gt;\n  &lt;repository&gt;\n    &lt;id&gt;my-internal-site&lt;\u002Fid&gt;\n    &lt;url&gt;http:\u002F\u002Fmyserver\u002Frepo&lt;\u002Furl&gt;\n    &lt;snapshots&gt;\n        &lt;enabled&gt;true&lt;\u002Fenabled&gt;\n        &lt;updatePolicy&gt;XXX&lt;\u002FupdatePolicy&gt;\n    &lt;\u002Fsnapshots&gt;\n  &lt;\u002Frepository&gt;\n&lt;\u002Frepositories&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe value XXX inside the \u003Cstrong\u003EupdatePolicy\u003C\u002Fstrong\u003E can be:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Ealways\u003C\u002Fstrong\u003E: Maven always checks for a latest version\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Edaily\u003C\u002Fstrong\u003E: This is the default value, as the name suggests it downloads the version once every day on the first run.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Einterval:XXX\u003C\u002Fstrong\u003E: Checks every XXX minutes\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Enever\u003C\u002Fstrong\u003E: Never checks for the updates.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ERELEASE\u003C\u002Fstrong\u003E versions on the other hand are more stable, and follow the usual dependency resolution.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"maven-build-lifecycle\" href=\"#maven-build-lifecycle\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Build Lifecycle\u003Ca name=\"chapter-17\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ETill now we learned about the Core Concepts of Maven, now it’s time to dive deep and understand how Maven builds our Java Project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EMaven follows a \u003Cstrong\u003EBuild Lifecycle\u003C\u002Fstrong\u003E to well… build our project. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThis Lifecycle is divided into 3 parts:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Edefault\u003C\u002Fli\u003E\n\u003Cli\u003Eclean\u003C\u002Fli\u003E\n\u003Cli\u003Esite\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EEach Lifecycle is independent of each other and they can be executed together.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe default life cycle is divided into different phases like below:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Evalidate\u003C\u002Fstrong\u003E – verifies whether the pom.xml file is valid or not\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E – compiles the source code inside the project\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Etest\u003C\u002Fstrong\u003E – runs unit-tests inside the project\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Epackage\u003C\u002Fstrong\u003E – packages the source code into an artifact (ZIP, JAR, WAR or EAR)\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Eintegration-test\u003C\u002Fstrong\u003E– executes tests marked as Integration Tests\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Everify\u003C\u002Fstrong\u003E – checks whether the created package is valid or not.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Einstall\u003C\u002Fstrong\u003E – installs the created package into our Local Repository\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cstrong\u003Edeploy\u003C\u002Fstrong\u003E – deploys the created package to the Remote Repository\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003Eclean\u003C\u002Fstrong\u003E lifecycle is mainly responsible to clean the .class and meta-data generated by the above build phases.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003Esite\u003C\u002Fstrong\u003E lifecycle phase is responsible to generate Java Documentation.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAll 3 lifecycles also contains some additional phases, which I am not going to cover in this tutorial, if you are interested you can refer to the \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fguides\u002Fintroduction\u002Fintroduction-to-the-lifecycle.html#lifecycle-reference\"\u003EMaven Documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"plugins-and-goals\" href=\"#plugins-and-goals\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Plugins and Goals\u003Ca name=\"chapter-18\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ETo be able to execute these Lifecycle Phases, Maven provides us with \u003Cstrong\u003EPlugins\u003C\u002Fstrong\u003E to perform each task.\u003C\u002Fp\u003E\n\n\u003Cp\u003EEach plugin is associated with a particular \u003Cstrong\u003EGoal\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet’s have a look at different Plugins and the associated Goals:\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"maven-compile-plugin\" href=\"#maven-compile-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Compile Plugin\u003Ca name=\"chapter-19\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe Maven Compile Plugin is responsible to compile our Java files into the .class files. It’s equivalent of running \u003Cstrong\u003Ejavac \u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis plugin enables the \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E phase of the default lifecycle.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can add this plugin to your project by adding the below section to your \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E file under the \u003Cstrong\u003Edependencies\u003C\u002Fstrong\u003E \u003Cbr\u003E\nsection.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;build&gt;\n    &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;maven-compiler-plugin&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.8.1&lt;\u002Fversion&gt;\n        &lt;\u002Fplugin&gt;\n    &lt;\u002Fplugins&gt;\n&lt;\u002Fbuild&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAt the time of writing this tutorial, \u003Cstrong\u003EMaven Compiler Plugin\u003C\u002Fstrong\u003E is at version \u003Cstrong\u003E3.8.1\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAfter adding the plugin to the project, you can activate the \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E phase, by typing the below command:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn compiler:compile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-cli) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.729 s\n[INFO] Finished at: 2020-12-04T20:16:23+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn the above command the \u003Cstrong\u003Ecompiler\u003C\u002Fstrong\u003E is the name of the plugin and \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E is the goal which triggers the lifecycle phase – compile\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can already see the message – \u003Cstrong\u003E“Nothing to compile – all classes are up to date”\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs there are no Java Files in our project, there is nothing to compile, so let’s create a simple \u003Cstrong\u003EHelloWorld.java\u003C\u002Fstrong\u003E file\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Epublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIf you try to compile again, you can see the following output:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn compiler:compile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-cli) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.123 s\n[INFO] Finished at: 2020-12-04T20:14:55+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe can see the generated class files under the target folder which resides just under the project root folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--s9KEPpMN--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder.png%3Fw%3D464%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--s9KEPpMN--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder.png%3Fw%3D464%26ssl%3D1\" alt=\"Maven Compile Folder Structure\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you have some Test files, those are also compiled using the \u003Cstrong\u003ECompiler Plugin\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo demonstrate that let’s create the below Test class under the src\u002Ftest\u002Fjava folder\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Epublic class HelloWorldTest {\n    public static void main(String[] args) {\n        HelloWorld helloWorld = new HelloWorld();\n        System.out.println(helloWorld.say(\"Hi\"));\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAnd here is how you can compile the test classes:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn compiler:testCompile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-cli) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\test-classes\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.319 s\n[INFO] Finished at: 2020-12-04T20:23:59+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see that a change has been detected by the \u003Cstrong\u003EMaven Compiler Plugin\u003C\u002Fstrong\u003E and it has compiled our Test classes to the \u003Cstrong\u003Etarget\u002Ftest-classes\u003C\u002Fstrong\u003E folder\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xOOB9hi---\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder-with-Test-Classes.png%3Fw%3D454%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xOOB9hi---\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder-with-Test-Classes.png%3Fw%3D454%26ssl%3D1\" alt=\"Maven Test Compile\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAs we are using IntelliJ, we can also use it to run the compilation, by clicking on the \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E button under the \u003Cstrong\u003ELifeCycle\u003C\u002Fstrong\u003E dropdown as you see in the below image:\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bGqcvrEv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Compile-Plugin.png%3Fw%3D616%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bGqcvrEv--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Compile-Plugin.png%3Fw%3D616%26ssl%3D1\" alt=\"Maven Intellij Lifecycle phases\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you run the \u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E option you may see the below error:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] Source option 6 is no longer supported. Use 7 or later.\n[ERROR] Target option 6 is no longer supported. Use 7 or later.\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis is because, by default the \u003Cstrong\u003ESource\u003C\u002Fstrong\u003E and \u003Cstrong\u003ETarget\u003C\u002Fstrong\u003E Compiler Version is set to 1.5 in IntelliJ Configuration. You can add the below \u003Cstrong\u003Econfiguration\u003C\u002Fstrong\u003E to the compiler plugin to override this settings:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;build&gt;\n    &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;maven-compiler-plugin&lt;\u002FartifactId&gt;\n            &lt;version&gt;3.8.1&lt;\u002Fversion&gt;\n            &lt;configuration&gt;\n                &lt;source&gt;15&lt;\u002Fsource&gt;\n                &lt;target&gt;15&lt;\u002Ftarget&gt;\n            &lt;\u002Fconfiguration&gt;\n        &lt;\u002Fplugin&gt;\n    &lt;\u002Fplugins&gt;\n&lt;\u002Fbuild&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can pass many customized option to the Maven Compiler Plugin based on your needs, you can find the examples of the configuration in the \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-compiler-plugin\u002Findex.html\"\u003EApache Maven Compiler Plugin\u003C\u002Fa\u003E website\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"maven-surefire-plugin\" href=\"#maven-surefire-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Surefire Plugin\u003Ca name=\"chapter-20\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EUsing \u003Cstrong\u003ESurefire Plugin\u003C\u002Fstrong\u003E, we can run the tests inside our project by using the following command:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn test\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO]\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running HelloWorldTest\nHi\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in HelloWorldTest\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  4.797 s\n[INFO] Finished at: 2020-12-04T20:54:49+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can see that the HelloWorldTest.java file was executed successfully, and the you can also see how many Tests are executed successfully.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe Surefire Plugin generates Text and XML reports under the \u003Cstrong\u003Etarget\u002Fsurefire-reports\u003C\u002Fstrong\u003E folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--B3BW_avT--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-SureFire-Reports.png%3Fw%3D830%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--B3BW_avT--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-SureFire-Reports.png%3Fw%3D830%26ssl%3D1\" alt=\"Maven Tests\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ESimilar to \u003Cstrong\u003ECompiler Plugin\u003C\u002Fstrong\u003E, you can also configure Surefire Plugin based on your needs.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESurefire Plugin by default includes all tests, if you have a bunch of tests, you can manually exclude some tests to be executed using below configuration:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-surefire-plugin&lt;\u002FartifactId&gt;\n    &lt;version&gt;2.22.2&lt;\u002Fversion&gt;\n    &lt;configuration&gt;\n        &lt;excludes&gt;HelloWorldTest.java&lt;\u002Fexcludes&gt;\n    &lt;\u002Fconfiguration&gt;\n&lt;\u002Fplugin&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAnd if you run the \u003Cstrong\u003Emvn test\u003C\u002Fstrong\u003E command now, you can see that no tests are executed.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn test\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.043 s\n[INFO] Finished at: 2020-12-04T21:00:09+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"maven-install-plugin\" href=\"#maven-install-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Install Plugin\u003Ca name=\"chapter-21\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThis is used to package our source code into an artifact of our choice like a JAR and install it to our \u003Cstrong\u003ELocal Repository\u003C\u002Fstrong\u003E which is \u003Cstrong\u003E\u002F.m2\u002Frepository\u003C\u002Fstrong\u003E folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can configure Maven Install Plugin by adding the below code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-install-plugin&lt;\u002FartifactId&gt;\n    &lt;version&gt;2.5.2&lt;\u002Fversion&gt;\n&lt;\u002Fplugin&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can run the \u003Cstrong\u003Einstall\u003C\u002Fstrong\u003E phase of the lifecycle by typing the below command:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn install\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ maven-project ---\n[INFO] Building jar: F:\\maven-project\\target\\maven-project-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\target\\maven-project-1.0-SNAPSHOT.jar to C:\\Users\\sai\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\sai\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.236 s\n[INFO] Finished at: 2020-12-04T21:10:49+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EBy checking the above output, you can see that the install phase includes also the previous phases in the lifecycle, so as part of this phase maven:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003Evalidates our pom.xml (\u003Cstrong\u003Evalidate\u003C\u002Fstrong\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003Ecompiles our source code (\u003Cstrong\u003Ecompile\u003C\u002Fstrong\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003Eexecutes our tests (\u003Cstrong\u003Etest\u003C\u002Fstrong\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003Epackages our source code into JAR (\u003Cstrong\u003Epackage\u003C\u002Fstrong\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003Einstalls the JAR into our local repository (\u003Cstrong\u003Einstall\u003C\u002Fstrong\u003E)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EYou can see the JAR file in the below screenshot under the \u003Cstrong\u003Etarget\u003C\u002Fstrong\u003E folder.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--WFfeMcck--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Install-Plugin.png%3Fw%3D759%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--WFfeMcck--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Install-Plugin.png%3Fw%3D759%26ssl%3D1\" alt=\"Maven Install Folder Structure\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"maven-deploy-plugin\" href=\"#maven-deploy-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Deploy Plugin\u003Ca name=\"chapter-22\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe Maven Deploy Plugin will deploy the artifact into a remote repository. The deploy goal of the plugin is associated with the \u003Cstrong\u003Edeploy\u003C\u002Fstrong\u003E phase of the build lifecycle.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe plugin can be configured like below:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;plugin&gt;\n   &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n   &lt;artifactId&gt;maven-deploy-plugin&lt;\u002FartifactId&gt;\n   &lt;version&gt;2.8.2&lt;\u002Fversion&gt;\n&lt;\u002Fplugin&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EBefore running the \u003Cstrong\u003Edeploy\u003C\u002Fstrong\u003E phase of the lifecycle, we have to make sure that the remote repository details are configured inside our project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe can configure this details inside the \u003Cstrong\u003EdistributionManagement\u003C\u002Fstrong\u003E section:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;distributionManagement&gt;\n    &lt;repository&gt;\n        &lt;id&gt;test-distribution&lt;\u002Fid&gt;\n        &lt;name&gt;distro name&lt;\u002Fname&gt;\n        &lt;url&gt;http:\u002F\u002Fdistrourl.com&lt;\u002Furl&gt;\n    &lt;\u002Frepository&gt;\n&lt;\u002FdistributionManagement&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ETo be able to connect to the remote repository, maven needs access to the credentials, which can be configured inside a special file called as \u003Cstrong\u003Esettings.xml\u003C\u002Fstrong\u003E file.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis file is usually configured inside the \u003Cstrong\u003E\u002F.m2\u002F\u003C\u002Fstrong\u003E folder, which looks like something below:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;settings xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FSETTINGS\u002F1.0.0\" xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n          xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FSETTINGS\u002F1.0.0 https:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fsettings-1.0.0.xsd\"&gt;\n    &lt;servers&gt;\n        &lt;server&gt;\n            &lt;id&gt;test-distribution&lt;\u002Fid&gt;\n            &lt;username&gt;my_username&lt;\u002Fusername&gt;\n            &lt;password&gt;my_password&lt;\u002Fpassword&gt;\n        &lt;\u002Fserver&gt;\n    &lt;\u002Fservers&gt;\n&lt;\u002Fsettings&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EMaven also provides us a way to encrypt the credentials inside the \u003Cstrong\u003Esettings.xml\u003C\u002Fstrong\u003E file, you can read about this here\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can run the \u003Cstrong\u003Edeploy\u003C\u002Fstrong\u003E goal using the following command:\u003Cbr\u003E\n\u003Ccode\u003E$ mvn deploy\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you run this command, you will notice that it will run all the lifecycle phases up until deploy.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAlthough if you run this command in the example project, it will fail because the Remote Repository Details are invalid.\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"maven-clean-plugin\" href=\"#maven-clean-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Clean Plugin\u003Ca name=\"chapter-23\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAnother important plugin in Maven is the \u003Cstrong\u003EMaven Clean Plugin\u003C\u002Fstrong\u003E, you saw that when running the above lifecycle phases, the generated files are stored under a folder called \u003Cstrong\u003Etarget\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EUsually when building our source code we need to start of as a clean slate so that there are no inconsistencies in the generated class files or JAR.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor this reason we have the \u003Cstrong\u003Eclean\u003C\u002Fstrong\u003E phase where we will delete all the contents inside the \u003Cstrong\u003Etarget\u003C\u002Fstrong\u003E folder. You can execute this phase by typing the below commands:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn clean\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven-project ---\n[INFO] Deleting F:\\maven-project\\target\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.204 s\n[INFO] Finished at: 2020-12-04T21:19:12+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can see that the target folder under our project is deleted successfully.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"other-maven-plugins\" href=\"#other-maven-plugins\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Other Maven Plugins\u003Ca name=\"chapter-24\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThere are many other plugins in Maven world, to execute other phases in the Maven Build Lifecycle, you can check them out \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Findex.html\"\u003Ehere\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"maven-multi-module-projects\" href=\"#maven-multi-module-projects\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Maven Multi Module Projects\u003Ca name=\"chapter-25\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ETill now we saw the Core Concepts of Maven, now it’s time to dive deep into some advanced concepts.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn the real world where we are building some non-trivial projects, the source code is going to be modularized (hopefully) and is divided into different sub projects.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo manage this effectively, Maven provides us Multi Module Projects where you can have nest different projects inside each other. We are basically creating a parent-child relationship between different Maven projects.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBasically, we have a \u003Cstrong\u003EParent Project\u003C\u002Fstrong\u003E (Parent POM) which contains different \u003Cstrong\u003Esub-projects\u003C\u002Fstrong\u003E (\u003Cstrong\u003Esub-modules\u003C\u002Fstrong\u003E), each of which is again a normal Maven Project.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--hVGiR-lV--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project.png%3Fw%3D506%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--hVGiR-lV--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project.png%3Fw%3D506%26ssl%3D1\" alt=\"Multi Module Project\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003EParent POM\u003C\u002Fstrong\u003E usually encapsulates other child’s and that’s why its packaged as a \u003Cstrong\u003EPOM\u003C\u002Fstrong\u003E instead of usual packaing format’s like \u003Cstrong\u003EJAR\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you recall the section \u003Cstrong\u003EProject Object Model\u003C\u002Fstrong\u003E , we discussed about \u003Cstrong\u003ESuper POM\u003C\u002Fstrong\u003E which is basically a kind of \u003Cstrong\u003EParent POM\u003C\u002Fstrong\u003E which encapsulates default settings configured by Maven for us.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"creating-multi-module-project-using-intellij\" href=\"#creating-multi-module-project-using-intellij\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Creating Multi Module Project using IntelliJ\u003Ca name=\"chapter-26\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWe will see how to generate Multi Module Projects using our IntelliJ IDE.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo create the project, first right click on the project root folder and select \u003Cstrong\u003ENew\u003C\u002Fstrong\u003E -&gt; \u003Cstrong\u003EModule\u003C\u002Fstrong\u003E and click on \u003Cstrong\u003ENext\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--9mtGR0Z4--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Child-Project-1.png%3Fw%3D1061%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--9mtGR0Z4--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Child-Project-1.png%3Fw%3D1061%26ssl%3D1\" alt=\"Maven Module Coordinates\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EGive a name to the child project and click on \u003Cstrong\u003EFinish\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--MhsLwXck--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure.png%3Fw%3D730%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--MhsLwXck--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure.png%3Fw%3D730%26ssl%3D1\" alt=\"Maven Module Structure\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can see the new project structure in the above picture after we created the \u003Cstrong\u003Echild project\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow if you open the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E under the root folder, you can observe the following tags which are added by creating the maven module.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E    &lt;modules&gt;\n        &lt;module&gt;child-project-1&lt;\u002Fmodule&gt;\n    &lt;\u002Fmodules&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe can create multiple projects in the same way and you can see all the modules will be listed one-by-one under the \u003Cstrong\u003Emodules\u003C\u002Fstrong\u003E tag.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E    &lt;modules&gt;\n        &lt;module&gt;child-project-1&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-2&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-3&lt;\u002Fmodule&gt;\n    &lt;\u002Fmodules&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs we create these 3 modules, having the \u003Cstrong\u003Esrc\u003C\u002Fstrong\u003E folder under the root project folder doesn’t make much sense, so let’s copy and paste this folder onto other child-projects, so that we have some code configured inside these modules.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is how our project structure now looks like:\u003Cbr\u003E\n\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--sv5PtmRK--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure-with-Code.png%3Fw%3D944%26ssl%3D1\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--sv5PtmRK--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure-with-Code.png%3Fw%3D944%26ssl%3D1\" alt=\"Maven Multi Module Project Structure\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EAnd if you check the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E of \u003Cstrong\u003Echild-project-1\u003C\u002Fstrong\u003E,\u003Cstrong\u003Echild-project-2\u003C\u002Fstrong\u003E and \u003Cstrong\u003Echild-project-3\u003C\u002Fstrong\u003E. You can see that the root project is configured as a parent project.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;parent&gt;\n        &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n        &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n        &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n    &lt;\u002Fparent&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;artifactId&gt;child-project-1&lt;\u002FartifactId&gt;\n\n\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow you can build all the projects at once by running the \u003Cstrong\u003Emvn install\u003C\u002Fstrong\u003E under the Parent Project, and Maven scans through all the POMS and builds all of them one-by-one\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn install\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] maven-project                                                      [pom]\n[INFO] child-project-1                                                    [jar]\n[INFO] child-project-2                                                    [jar]\n[INFO] child-project-3                                                    [jar]\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT                                [1\u002F4]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-1 &gt;---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT                              [2\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-1\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-1 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-1 ---\n[INFO] Building jar: F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-1 ---\n[INFO] Installing F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-1\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-2 &gt;---------------------\n[INFO] Building child-project-2 1.0-SNAPSHOT                              [3\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-2\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-2 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-2 ---\n[INFO] Building jar: F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-2 ---\n[INFO] Installing F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-2\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-3 &gt;---------------------\n[INFO] Building child-project-3 1.0-SNAPSHOT                              [4\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-3\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-3 ---\n[INFO] Installing F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-3\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for maven-project 1.0-SNAPSHOT:\n[INFO]\n[INFO] maven-project ...................................... SUCCESS [  0.252 s]\n[INFO] child-project-1 .................................... SUCCESS [  1.534 s]\n[INFO] child-project-2 .................................... SUCCESS [  0.430 s]\n[INFO] child-project-3 .................................... SUCCESS [  0.351 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.699 s\n[INFO] Finished at: 2020-12-04T21:58:10+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can see that Maven built all the projects and provided us a nice report of the \u003Cstrong\u003EBuild Status\u003C\u002Fstrong\u003E of each project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EMaven uses something called as a \u003Cstrong\u003EReactor\u003C\u002Fstrong\u003E which is responsible to scan the whole project and identify the parent and child maven projects. If there are any dependencies, then Reactor makes sure to execute the projects in the required order.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor example, if \u003Cstrong\u003Echild-project-2\u003C\u002Fstrong\u003E is dependent on \u003Cstrong\u003Echild-project-3\u003C\u002Fstrong\u003E , then Maven Reactor makes sure to first build \u003Cstrong\u003Echild-project-3\u003C\u002Fstrong\u003E and then \u003Cstrong\u003Echild-project-2\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"managing-dependencies-inside-maven-multi-module-project\" href=\"#managing-dependencies-inside-maven-multi-module-project\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Managing Dependencies inside Maven Multi Module Project\u003Ca name=\"chapter-27\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhen you are working with Multiple Maven Modules, you may be working with different dependencies in different modules, and chances are that you may be using similar dependencies in multiple modules.\u003C\u002Fp\u003E\n\n\u003Cp\u003EMaven provides us a way to effectively manage the dependencies in your project by allowing us to define the dependencies in centralized location (\u003Cstrong\u003Eparent project\u003C\u002Fstrong\u003E) and use those dependencies across the different child projects.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis minimizes the dependency version mismatch across multiple projects, as we have a single place we can manage all the dependencies and its versions.\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet’s see how to do that in our example project.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI am going to move all the dependencies which are defined inside the parent project into the \u003Cstrong\u003EdependencyManagement\u003C\u002Fstrong\u003E section, like below:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;packaging&gt;pom&lt;\u002Fpackaging&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n    &lt;modules&gt;\n        &lt;module&gt;child-project-1&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-2&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-3&lt;\u002Fmodule&gt;\n    &lt;\u002Fmodules&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.junit.jupiter&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;junit-jupiter-engine&lt;\u002FartifactId&gt;\n                &lt;version&gt;5.5.2&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-test&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.1.6.RELEASE&lt;\u002Fversion&gt;\n                &lt;scope&gt;test&lt;\u002Fscope&gt;\n                &lt;exclusions&gt;\n                    &lt;exclusion&gt;\n                        &lt;groupId&gt;junit&lt;\u002FgroupId&gt;\n                        &lt;artifactId&gt;junit&lt;\u002FartifactId&gt;\n                    &lt;\u002Fexclusion&gt;\n                &lt;\u002Fexclusions&gt;\n            &lt;\u002Fdependency&gt;\n        &lt;\u002Fdependencies&gt;\n    &lt;\u002FdependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;maven-compiler-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;3.8.1&lt;\u002Fversion&gt;\n                &lt;configuration&gt;\n                    &lt;source&gt;11&lt;\u002Fsource&gt;\n                    &lt;target&gt;11&lt;\u002Ftarget&gt;\n                &lt;\u002Fconfiguration&gt;\n            &lt;\u002Fplugin&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;maven-surefire-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.22.2&lt;\u002Fversion&gt;\n                &lt;configuration&gt;\n                    &lt;excludes&gt;HelloWorldTest.java&lt;\u002Fexcludes&gt;\n                &lt;\u002Fconfiguration&gt;\n            &lt;\u002Fplugin&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;maven-install-plugin&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.5.2&lt;\u002Fversion&gt;\n            &lt;\u002Fplugin&gt;\n        &lt;\u002Fplugins&gt;\n    &lt;\u002Fbuild&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe change in the pom.xml is minor, we just moved the dependencies under the \u003Cstrong\u003EdependencyManagement\u003C\u002Fstrong\u003E tag.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow if you analyze the dependencies under the \u003Cstrong\u003Echild-project-1\u003C\u002Fstrong\u003E you can see that it’s empty.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Emvn dependency:tree\n[INFO] Scanning for projects...\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-1 &gt;---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ child-project-1 ---\n[INFO] org.example:child-project-1:jar:1.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.871 s\n[INFO] Finished at: 2020-12-05T20:23:59+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis is because we moved all the dependencies inside the Parent POM into \u003Cstrong\u003EdependencyManagement\u003C\u002Fstrong\u003E section, now to access any dependencies the \u003Cstrong\u003EChild Projects\u003C\u002Fstrong\u003E should define them manually inside their \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn this way, the child projects can have only the dependencies they need inside the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow, let’s go ahead and add the \u003Cstrong\u003Ejunit-jupiter\u003C\u002Fstrong\u003E dependencies inside the \u003Cstrong\u003Echild-project-1\u003C\u002Fstrong\u003E and see what happens.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;parent&gt;\n        &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n        &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n        &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n    &lt;\u002Fparent&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;artifactId&gt;child-project-1&lt;\u002FartifactId&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;\u002FgroupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;\u002FartifactId&gt;\n        &lt;\u002Fdependency&gt;\n    &lt;\u002Fdependencies&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn dependency:tree\n[INFO] Scanning for projects...\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-1 &gt;---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ child-project-1 ---\n[INFO] org.example:child-project-1:jar:1.0-SNAPSHOT\n[INFO] \\- org.junit.jupiter:junit-jupiter-engine:jar:5.5.2:compile\n[INFO]    +- org.apiguardian:apiguardian-api:jar:1.1.0:compile\n[INFO]    +- org.junit.platform:junit-platform-engine:jar:1.5.2:compile\n[INFO]    |  +- org.opentest4j:opentest4j:jar:1.2.0:compile\n[INFO]    |  \\- org.junit.platform:junit-platform-commons:jar:1.5.2:compile\n[INFO]    \\- org.junit.jupiter:junit-jupiter-api:jar:5.5.2:compile\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.930 s\n[INFO] Finished at: 2020-12-05T20:27:26+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can now see that the \u003Cstrong\u003Ejunit-jupiter\u003C\u002Fstrong\u003E dependency is available inside the \u003Cstrong\u003Echild-project-1\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"managing-plugins-inside-maven-multi-module-project\" href=\"#managing-plugins-inside-maven-multi-module-project\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Managing Plugins inside Maven Multi Module Project\u003Ca name=\"chapter-28\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWe can also manage Plugins inside our Maven Multi Module project, similar to the dependencies.\u003C\u002Fp\u003E\n\n\u003Cp\u003ETo Manage Plugins, we have the \u003Cstrong\u003EpluginManagement\u003C\u002Fstrong\u003E section inside the \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E and each child project can chose the plugin it needs.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is how our parent \u003Cstrong\u003Epom.xml\u003C\u002Fstrong\u003E looks like after introducing the \u003Cstrong\u003EpluginManagement\u003C\u002Fstrong\u003E.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;\u002FmodelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;\u002FgroupId&gt;\n    &lt;artifactId&gt;maven-project&lt;\u002FartifactId&gt;\n    &lt;packaging&gt;pom&lt;\u002Fpackaging&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;\u002Fversion&gt;\n    &lt;modules&gt;\n        &lt;module&gt;child-project-1&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-2&lt;\u002Fmodule&gt;\n        &lt;module&gt;child-project-3&lt;\u002Fmodule&gt;\n    &lt;\u002Fmodules&gt;\n\n    &lt;dependencyManagement&gt;\n        &lt;dependencies&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.junit.jupiter&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;junit-jupiter-engine&lt;\u002FartifactId&gt;\n                &lt;version&gt;5.5.2&lt;\u002Fversion&gt;\n            &lt;\u002Fdependency&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;\u002FgroupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-test&lt;\u002FartifactId&gt;\n                &lt;version&gt;2.1.6.RELEASE&lt;\u002Fversion&gt;\n                &lt;scope&gt;test&lt;\u002Fscope&gt;\n                &lt;exclusions&gt;\n                    &lt;exclusion&gt;\n                        &lt;groupId&gt;junit&lt;\u002FgroupId&gt;\n                        &lt;artifactId&gt;junit&lt;\u002FartifactId&gt;\n                    &lt;\u002Fexclusion&gt;\n                &lt;\u002Fexclusions&gt;\n            &lt;\u002Fdependency&gt;\n        &lt;\u002Fdependencies&gt;\n    &lt;\u002FdependencyManagement&gt;\n\n    &lt;build&gt;\n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                    &lt;artifactId&gt;maven-compiler-plugin&lt;\u002FartifactId&gt;\n                    &lt;version&gt;3.8.1&lt;\u002Fversion&gt;\n                    &lt;configuration&gt;\n                        &lt;source&gt;11&lt;\u002Fsource&gt;\n                        &lt;target&gt;11&lt;\u002Ftarget&gt;\n                    &lt;\u002Fconfiguration&gt;\n                &lt;\u002Fplugin&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                    &lt;artifactId&gt;maven-surefire-plugin&lt;\u002FartifactId&gt;\n                    &lt;version&gt;2.22.2&lt;\u002Fversion&gt;\n                    &lt;configuration&gt;\n                        &lt;excludes&gt;HelloWorldTest.java&lt;\u002Fexcludes&gt;\n                    &lt;\u002Fconfiguration&gt;\n                &lt;\u002Fplugin&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.apache.maven.plugins&lt;\u002FgroupId&gt;\n                    &lt;artifactId&gt;maven-install-plugin&lt;\u002FartifactId&gt;\n                    &lt;version&gt;2.5.2&lt;\u002Fversion&gt;\n                &lt;\u002Fplugin&gt;\n            &lt;\u002Fplugins&gt;\n        &lt;\u002FpluginManagement&gt;\n    &lt;\u002Fbuild&gt;\n&lt;\u002Fproject&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch1\u003E\n  \u003Ca name=\"using-profiles\" href=\"#using-profiles\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Using Profiles\u003Ca name=\"chapter-29\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EProfiles can be used in Maven to created customized build configurations. This means customizing the behavior of our builds based on specific conditions.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor example: Sometimes we need to test whether the source code packaging is working correctly or not, in that case we can skip the test execution by activating the \u003Cstrong\u003Eskip.tests\u003C\u002Fstrong\u003E property like below:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E&lt;profile&gt;\n    &lt;id&gt;skip-tests&lt;\u002Fid&gt;\n    &lt;properties&gt;\n        &lt;maven.test.skip&gt;true&lt;\u002Fmaven.test.skip&gt;\n    &lt;\u002Fproperties&gt;\n&lt;\u002Fprofile&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow we can try to run the build by specifying which profile to activate using the \u003Cstrong\u003E-P\u003C\u002Fstrong\u003E flag.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E$ mvn -Pskip-tests clean install\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] maven-project                                                      [pom]\n[INFO] child-project-1                                                    [jar]\n[INFO] child-project-2                                                    [jar]\n[INFO] child-project-3                                                    [jar]\n[INFO]\n[INFO] ---------------------&lt; org.example:maven-project &gt;----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT                                [1\u002F4]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven-project ---\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-1 &gt;---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT                              [2\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-1 ---\n[INFO] Deleting F:\\maven-project\\child-project-1\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-1 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-1 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-1 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-1 ---\n[INFO] Building jar: F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-1 ---\n[INFO] Installing F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-1\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-2 &gt;---------------------\n[INFO] Building child-project-2 1.0-SNAPSHOT                              [3\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-2 ---\n[INFO] Deleting F:\\maven-project\\child-project-2\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-2 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-2 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-2 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-2 ---\n[INFO] Building jar: F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-2 ---\n[INFO] Installing F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-2\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------&lt; org.example:child-project-3 &gt;---------------------\n[INFO] Building child-project-3 1.0-SNAPSHOT                              [4\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-3 ---\n[INFO] Deleting F:\\maven-project\\child-project-3\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-3 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-3 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-3 ---\n[INFO] Installing F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-3\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for maven-project 1.0-SNAPSHOT:\n[INFO]\n[INFO] maven-project ...................................... SUCCESS [  0.327 s]\n[INFO] child-project-1 .................................... SUCCESS [  1.208 s]\n[INFO] child-project-2 .................................... SUCCESS [  0.205 s]\n[INFO] child-project-3 .................................... SUCCESS [  0.167 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.055 s\n[INFO] Finished at: 2020-12-05T23:00:13+01:00\n[INFO] ------------------------------------------------------------------------\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIf you observe the logs carefully, you can see that the test-execution is skipped:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis is just a simple usage of the profiles, you can configure multiple profiles in our project to customize the build behavior.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\u003Ca name=\"chapter-30\"\u003E\u003C\u002Fa\u003E\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003ESo we came to the end of this tutorial, I hope this tutorial improved your understanding of Maven.\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"if-you-like-this-article-please-make-sure-to-share-it-with-your-friends-and-colleagues-who-wants-to-learn-about-apache-maven-you-can-follow-me-through-my-blog-youtube-channel-and-twitter\" href=\"#if-you-like-this-article-please-make-sure-to-share-it-with-your-friends-and-colleagues-who-wants-to-learn-about-apache-maven-you-can-follow-me-through-my-blog-youtube-channel-and-twitter\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  If you like this article please make sure to share it with your friends and colleagues who wants to learn about Apache Maven. You can follow me through my \u003Ca href=\"https:\u002F\u002Fhttps:\u002F\u002Fprogrammingtechie.com\u002F\"\u003Eblog\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fwww.youtube.com\u002Fchannel\u002FUCD20RZV_WHQImisCW2QZwDw\"\u003EYoutube Channel\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fsai90_u\"\u003ETwitter\u003C\u002Fa\u003E\n\u003C\u002Fh4\u003E\n\n",body_markdown:"---\ntitle: Maven Complete Tutorial for Beginners\npublished: true\ndescription: \ntags: #java #maven #beginners #programming\ncover_image: https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMAVEN-COMPLETE-TUTORIAL-1.png?resize=1024%2C576&ssl=1\n---\n\n**This post was originally published in [programmingtechie.com](https:\u002F\u002Fprogrammingtechie.com\u002F)**\n\nIf you are a Java Developer, your day to day activities while working on Java Projects includes writing code, compiling code, testing, packaging code in the form of an artifact like JAR, WAR or EAR and then deploying this artifact to an Application Server.\n\n**Apache Maven** automates all the tasks which are mentioned above by minimizing the manual overhead.\n\nIn this tutorial, we will understand **What is Apache Maven?** and will cover all the concepts required for you to start using Maven in your Java Projects\n\nIf you are a visual learner like me, check out the below video tutorial:\n{% youtube JhSBS2OpGdU %}\n\n##Table of Contents\n  * [What is Apache Maven](#chapter-1)\n  * [Installing Maven](#chapter-2)\n  * [Configure Maven Installation in IDE](#chapter-3)\n  * [Create your First Maven Project](#chapter-4)\n  * [Exploring Maven Folder Structure](#chapter-5)\n  * [Maven Core Concepts](#chapter-6)\n     * [Project Object Model](#chapter-7)\n        * [Simple POM File](#chapter-8)\n        * [Super POM File](#chapter-9)\n        * [Effective POM File](#chapter-10)\n     * [Dependencies](#chapter-11)\n        * [Transitive Dependencies](#chapter-12)\n        * [Excluding Dependencies](#chapter-13)\n        * [SNAPSHOT and RELEASE dependencies](#chapter-14)\n        * [Dependency Scopes](#chapter-15)\n     * [Repositories](#chapter-16)\n        * [Snapshot and Release Version Handling](#chapter-17)\n  * [Maven Build Lifecycle](#chapter-18)\n  * [Plugins and Goals](#chapter-19)\n     * [Maven Compile Plugin](#chapter-20)\n     * [Maven Surefire Plugin](#chapter-21)\n     * [Maven Install Plugin](#chapter-22)\n     * [Maven Deploy Plugin](#chapter-23)\n     * [Other Maven Plugins](#chapter-24)\n  * [Maven Multi Module Projects](#chapter-25)\n     * [Creating Multi Module Project using IntelliJ](#chapter-26)\n     * [Managing Dependencies inside Maven Multi Module Project](#chapter-27)\n     * [Managing Plugins inside Maven Multi Module Project](#chapter-28)\n  * [Using Profiles](#chapter-29)\n  * [Conclusion](#chapter-30)\n\n#What is Apache Maven ?\u003Ca name=\"chapter-1\"\u003E\u003C\u002Fa\u003E\n**Apache Maven** is a Project Management Tool used to manage projects which are developed using JVM languages like Java, Scala, Groovy etc.\n\nThe major tasks of a Project Management Tool include:\n\n* Building the Source Code\n* Testing Source Code\n* Packaging the Source Code into an Artifact (ZIP, JAR, WAR or EAR)\n* Handles Versioning and Releases of the Artifacts\n* Generating JavaDocs from the Source Code\n* Managing Project Dependencies\n\nMaven is also called as a **Build Tool** or a **Dependency Management Tool**\n\n# Installing Maven\u003Ca name=\"chapter-1\"\u003E\u003C\u002Fa\u003E\n\nYou can download Maven from the website [here](https:\u002F\u002Fmaven.apache.org\u002Fdownload.cgi?Preferred=ftp:\u002F\u002Fftp.osuosl.org\u002Fpub\u002Fapache\u002F). At the time of writing this tutorial, the latest version of Maven is 3.6.3.\n\nUnder the Files section, you can download Maven by clicking on the link which looks something like [apache-maven-3.6.3-bin.zip](https:\u002F\u002Fmirrors.supportex.net\u002Fapache\u002Fmaven\u002Fmaven-3\u002F3.6.3\u002Fbinaries\u002Fapache-maven-3.6.3-bin.zip)\n\nOnce you have downloaded and unzipped the folder, make sure to add the M2_HOME environment variable and to set the value of this variable to location of the unzipped folder.\n\nAfter that make sure to set another environment variable called M2 which contains the value M2_HOME\u002Fbin\n\n![M2 Environment Variable] (https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variables.png?w=626&ssl=1)\n\nAfter that, make sure to update the Path variable also with the M2 environment variable.\n\n![M2 Environment Variable inside Path] (https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven_Env_Variable_Path.png?w=527&ssl=1)\n\nOnce you completed the above steps, open a new terminal window and type `mvn –version` and you should see the output like below:\n\n![Maven Version Check](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Version-Check.png?w=1245&ssl=1)\n\n# Configure Maven Installation in IDE\u003Ca name=\"chapter-2\"\u003E\u003C\u002Fa\u003E\n\nThe next step is to configure the maven installation inside your favorite IDE, in this tutorial we are going to use IntelliJ IDEA as the primary IDE.\n\nYou can download the community edition of this IDE [here](https:\u002F\u002Fwww.jetbrains.com\u002Fidea\u002Fdownload\u002F#section=windows)\n\nOnce you have installed the IDE, on the Welcome Window click on the **Configure** button and select Settings and inside the Settings Window search for Maven and under the **Maven home directory** choose the Maven directory.\n\n![IntelliJ](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-1.png?w=802&ssl=1)\n\n![Configure Maven](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002Fconfigure-maven-2.png?w=982&ssl=1)\n\nClick on **Apply** and then **OK**\n\nYou configured Maven successfully in your IDE. Now it’s time to create our first Maven Project.\n\n# Create your First Maven Project\u003Ca name=\"chapter-3\"\u003E\u003C\u002Fa\u003E\n\nIn IntelliJ, click on **New Project** and in the window, select **Maven** to the left side and click on **Next**.\n\nThen enter your project name and if you expand the section **Artifact Coordinates**.\n\nYou will see the fields **GroupId**, **ArtifactId** and **Version**.\n\n* A GroupId is like a identifier for your project which usually follows the Java Package naming convention, so in our example IntelliJ has by default added the value org.example but you can add any value you like.\n* An ArtifactId is the name of the project you are creating\n* A Version is a unique number which identifies the version of our project.\n\n![Artifact Coordinates](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FNew-Project.png?w=1204&ssl=1)\n\nOnce you click on **Finish**, IntelliJ should open the project and the folder structure of the project will look something like the picture you see below.\n\n![Maven Project Structure](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Project-Structure.png?w=922&ssl=1)\n\n# Exploring Maven Folder Structure\u003Ca name=\"chapter-4\"\u003E\u003C\u002Fa\u003E\n\nLet’s have a look at the Folder Structure of the Maven Project we just created.\n\nThe **src** folder is the root for our application source code and tests. Then we have the following subfolders:\n\n* The folder **src\u002Fmain\u002Fjava** contains the java source code, all the production code for our application resides here\n* In the **src\u002Fmain\u002Fresources** we will store all the files we are going to use in our project (example: Property Files, any files where we need to read in our application like XML, CSV etc.). If you are developing a web-application we will usually place all the static resources inside this folder.\n* In the **src\u002Ftest\u002Fjava** folder we will store all the test classes in our project.\n* There is another folder called **target** (currently not visible), which stores the compiled java class files. We will discuss about this in the coming sections\n* And lastly, we have the **pom.xml** file which contains the metadata of the project dependencies.\n\n#Maven Core Concepts\u003Ca name=\"chapter-5\"\u003E\u003C\u002Fa\u003E\n\n## Project Object Model\u003Ca name=\"chapter-6\"\u003E\u003C\u002Fa\u003E\n\nThe **Project Object Model** File(also called as **pom.xml**) contains the meta-data of the project and is also responsible to manage dependencies and to configure plugins which helps us in automating many repetitive tasks.\n\nHere is how a basic **pom.xml** file looks like:\n\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E  \n\u003C\u002Fproject\u003E\n```\n\n* **project** is the top level tag of our **pom.xml** file, which encapsulates all the information related to our Maven Project.\n* **modelVersion** represents what version of POM you are using. The modelVersion for Maven 3 is always 4.0. This will never change unless you are using another major version of Maven.\n\nNow as we know what is a POM file, let’s have a look at different type’s of POM files. We have basically 3 types of POM files:\n\n* Simple POM file\n* Super POM file\n* Effective POM file\n\n### Simple POM File\u003Ca name=\"chapter-7\"\u003E\u003C\u002Fa\u003E\nThis is the same file(**pom.xml**) which was generated in the previous section. It only contains information which is relevant to our current project.\n\n### Super POM File\u003Ca name=\"chapter-8\"\u003E\u003C\u002Fa\u003E\nA **Super POM File** is a parent for all the **Simple POM files**, it contains a set of default configuration which is shared by all the **Simple POM** files.\n\nYou can find the **Super POM** file inside the Maven installation directory under the path **M2_HOME\u002Flib** and inside the JAR file **maven-model-builder-XXX.jar** where XXX represents the version of the maven version you are using.\n\nWe can find it under the package name **org.apache.maven.model** under the file name **pom-4.0.0.xml**.\n\n\u003E **CAUTION**: You should never try to edit the Super POM as it contains sensible defaults from Maven.\n\n### Effective POM File\u003Ca name=\"chapter-9\"\u003E\u003C\u002Fa\u003E\nAn **Effective POM File** is nothing but a combination of **Simple POM** and **Super POM** File’s.\n\nIt’s just a way of checking all the information of the pom.xml files in one place.\n\nWe will have a look at how this will be helpful in the upcoming sections.\n\nYou can have a look at the **Effective POM** of our **pom.xml** file by typing the following command\n\n`mvn help:effective-pom`\n\nIn IntelliJ, you can simply right click on the **pom.xml** file, select **Maven** -\u003E **Show Effective POM**\n\n## Dependencies\u003Ca name=\"chapter-10\"\u003E\u003C\u002Fa\u003E\nIf you are working on any non-trivial Java Project chances are that you are using many third party JAR files in your project to develop the application. These JAR files can be anything like a Framework or a Library. Examples include **Junit**, **Spring Framework**, **Selenium** etc.\n\nThese external libraries are called as **dependencies**. Maven provides an excellent way to specify and manage dependencies in our **pom.xml** file.\n\nWithout using Maven, you have to manually download the required JAR files from internet and add them one-by-one to the classpath of our project.\n\nMaven provides a **dependencies** section inside the pom.xml where you can specify the information of the JAR you require in your project (**groupId**, **artifactId** and **version**). Once you have specified the required libraries, maven will automatically download these dependencies into our project and adds them to the classpath of our project.\n\nInside the **dependencies** section you can define each individual dependency like below inside the **pom.xml** file.\n\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n \n    \u003Cdependencies\u003E\n        \u003Cdependency\u003E\n            \u003CgroupId\u003Eorg.junit.jupiter\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Ejunit-jupiter-engine\u003C\u002FartifactId\u003E\n            \u003Cversion\u003E5.5.2\u003C\u002Fversion\u003E\n        \u003C\u002Fdependency\u003E\n    \u003C\u002Fdependencies\u003E\n\u003C\u002Fproject\u003E\n```\n\nWe have defined **Junit5** as a **dependency** in our **pom.xml** file.\n\nNotice that I have mentioned the tags **groupId**, **artifactId** and **version** to uniquely identify a dependency and by providing these values, Maven can automatically download these dependencies to our project.\n\nIn IntelliJ, make sure to click on the Refresh button under the Maven Tab in the right side, to force IntelliJ to initiate the download of the dependencies. Check the below image:\n\n![Intellij Maven Dependencies](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Dependencies-1.png?resize=1536%2C725&ssl=1)\n\nIn this way, you can provide all the dependencies needed in your project inside the pom.xml and Maven will automatically download them.\n\n###Transitive Dependencies\u003Ca name=\"chapter-11\"\u003E\u003C\u002Fa\u003E\nIn the above example, you can observe that the **junit-jupiter-engine** indeed depends on other JAR files like **apiguardian-api**, **junit-platform-engine** and **junit-jupiter-api**\n\nThese JAR files are called **Transitive Dependencies**\n\n![Maven Transitive Dependencies](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMavne-Dependencies-1.png?w=1229&ssl=1)\n\n###Excluding Dependencies\u003Ca name=\"chapter-12\"\u003E\u003C\u002Fa\u003E\nThere are some instances where we will have some conflicts between the project dependencies and the transitive dependencies, at that time we can manually exclude the transitive dependency we don’t need.\n\nFor example, if you are developing your application using Spring Boot, there is a dependency called **spring-boot-starter-test** which will provide all the dependencies needed to test the Spring Boot applications.\n\nThis **spring-boot-starter-test** dependency contains **Junit 4** as the transitive dependency, as we are already using **Junit 5** we can exclude the transitive dependency like below:\n\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n \n    \u003Cdependencies\u003E\n        \u003Cdependency\u003E\n            \u003CgroupId\u003Eorg.junit.jupiter\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Ejunit-jupiter-engine\u003C\u002FartifactId\u003E\n            \u003Cversion\u003E5.5.2\u003C\u002Fversion\u003E\n        \u003C\u002Fdependency\u003E\n        \u003Cdependency\u003E\n            \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Espring-boot-starter-test\u003C\u002FartifactId\u003E\n            \u003Cversion\u003E2.1.6.RELEASE\u003C\u002Fversion\u003E\n            \u003Cscope\u003Etest\u003C\u002Fscope\u003E\n            \u003Cexclusions\u003E\n                \u003Cexclusion\u003E\n                    \u003CgroupId\u003Ejunit\u003C\u002FgroupId\u003E\n                    \u003CartifactId\u003Ejunit\u003C\u002FartifactId\u003E\n                \u003C\u002Fexclusion\u003E\n            \u003C\u002Fexclusions\u003E\n        \u003C\u002Fdependency\u003E\n    \u003C\u002Fdependencies\u003E\n\u003C\u002Fproject\u003E\n```\n\u003E **NOTE**: The newer Spring Boot versions comes with JUnit 5 dependency, I purposely used the old version **2.1.6.RELEASE** as an example.\n\n###SNAPSHOT and RELEASE dependencies\u003Ca name=\"chapter-13\"\u003E\u003C\u002Fa\u003E\nA dependency can be categorized into two ways:\n* SNAPSHOT\n* RELEASE\nA Snapshot Dependency resembles that the project version is under development.\n\nIf you are working on a Java project in a team, chances are that you are following some kind of iterative process where you go through the phases of development and then release the software at the end of the phase.\n\nWhen the project is under development we generally use the **SNAPSHOT** dependencies, which looks something like **1.0-SNAPSHOT**\n\n```\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n\u003C\u002Fproject\u003E\n```\nWhen the software is ready for release, we generally create a RELEASE version which looks like **1.0.RELEASE** (ex: **Spring Boot Starter Test dependency**)\n\n```\n\u003Cdependency\u003E\n    \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Espring-boot-starter-test\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E2.1.6.RELEASE\u003C\u002Fversion\u003E\n    \u003Cscope\u003Etest\u003C\u002Fscope\u003E\n    \u003Cexclusions\u003E\n        \u003Cexclusion\u003E\n            \u003CgroupId\u003Ejunit\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Ejunit\u003C\u002FartifactId\u003E\n        \u003C\u002Fexclusion\u003E\n    \u003C\u002Fexclusions\u003E\n\u003C\u002Fdependency\u003E\n```\n###Dependency Scopes\u003Ca name=\"chapter-14\"\u003E\u003C\u002Fa\u003E\nEach Maven Dependency can be categorized 6 different scopes.\n\nHere are the list of scopes available:\n\n* **compile**: This is the default scope if none is specified. Compile time dependencies are available in classpath of the project.\n* **provided**: Similar to **compile** scope, but indicates that the JDK or the underlying container will provide the dependency at run-time. The dependency will be available at compile time, but not packaged into the artifact.\nAn example of the usage is the **javax.servlet-api** dependency\n* **runtime**: The dependencies defined with this scope will be only available at runtime but not at compile time.\nAn example of the usage:\nImagine if you are using MySQL Driver inside your project, you can add the dependency with scope as runtime, to ensure that the JDBC API abstraction is used instead of MySQL Driver API during implementation.\nIf the source code includes any classes which is part of the MySQL JDBC API, then the code wont compile as the dependency is unavailable at compile time.\n* **test**: Dependencies are only available at the time of running the tests, typical examples include Junit and TestNG\n* **system**: It’s similar to the provided scope, but only difference is we need to explicitly mention where can the dependency be found in the system, using the **systemPath** tag:\n\n`\u003CsystemPath\u003E${basedir}\u002Flib\u002Fsome-dependency.jar\u003C\u002FsystemPath\u003E`\n\n##Repositories\u003Ca name=\"chapter-15\"\u003E\u003C\u002Fa\u003E\nIn the previous section, we saw how Maven manages and automatically downloads the dependencies.\n\nThese dependencies, are stored inside a special directory called **Repository**. There are basically 2 kinds of repositories:\n\n* **Local Repository**\nA Local Repository is a directory on the machine where the Maven is running.\n\nThe default location for the Local Repository is \u003CUser-Home\u003E\u002F.m2\n\nIn Windows, it looks like:\n**C:\\Users\\\u003Cuser-name\u003E\\.m2\\repository**\n\n* **Remote Repository**\nA Remote Repository is a web-site where we can download Maven Dependencies. This can be a repository provided by Maven (repo.maven.org) or a custom repository setup inside an organization using software like [Artifactory](https:\u002F\u002Fjfrog.com\u002Fartifactory\u002F) or [Nexus](https:\u002F\u002Fwww.sonatype.com\u002Fnexus\u002Frepository-pro).\nNow that we saw different types of repositories, let’s see how Maven Resolves the dependencies.\n\nNow let’s see how Maven Resolves the dependencies.\n\n![Maven Dependency Resolution](https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FRepositories.png?w=631&ssl=1)\n\n* When you define a dependency defined inside the **pom.xml** file, Maven first checks whether the dependency is already present in the **Local Repository** or not.\n* If it is not, then it tries to connect to the **Remote Repository**, (Ex: **https:\u002F\u002Frepo.maven.org**) and tries to download the dependencies, and store them inside the **Local Repository**.\nWe can define the **Remote Repository** in our pom.xml like below:\n```\n\u003Crepositories\u003E\n  \u003Crepository\u003E\n    \u003Cid\u003Emy-internal-site\u003C\u002Fid\u003E\n    \u003Curl\u003Ehttp:\u002F\u002Fmyserver\u002Frepo\u003C\u002Furl\u003E\n  \u003C\u002Frepository\u003E\n\u003C\u002Frepositories\u003E\n```\n###Snapshot and Release Version Handling\u003Ca name=\"chapter-16\"\u003E\u003C\u002Fa\u003E\nIn the previous section, we learned that Maven first checks the **Local Repository** before downloading a dependency from **Remote Repository**.\n\nWhen dealing with **SNAPSHOT** dependencies Maven **periodically** downloads the dependency from **Remote Repository** even though the dependency exists in **Local Repository**.\n\nThis is because **SNAPSHOT** dependencies are under heavy development, and are subjected to change frequently.\n\nYou can change this behavior by adding a **\u003Csnapshots\u003E** section inside the **repositories** tag.\n\n```\n\u003Crepositories\u003E\n  \u003Crepository\u003E\n    \u003Cid\u003Emy-internal-site\u003C\u002Fid\u003E\n    \u003Curl\u003Ehttp:\u002F\u002Fmyserver\u002Frepo\u003C\u002Furl\u003E\n    \u003Csnapshots\u003E\n        \u003Cenabled\u003Etrue\u003C\u002Fenabled\u003E\n        \u003CupdatePolicy\u003EXXX\u003C\u002FupdatePolicy\u003E\n    \u003C\u002Fsnapshots\u003E\n  \u003C\u002Frepository\u003E\n\u003C\u002Frepositories\u003E\n```\nThe value XXX inside the **updatePolicy** can be:\n\n* **always**: Maven always checks for a latest version\n* **daily**: This is the default value, as the name suggests it downloads the version once every day on the first run.\n* **interval:XXX**: Checks every XXX minutes\n* **never**: Never checks for the updates.\n\n**RELEASE** versions on the other hand are more stable, and follow the usual dependency resolution.\n\n# Maven Build Lifecycle\u003Ca name=\"chapter-17\"\u003E\u003C\u002Fa\u003E\nTill now we learned about the Core Concepts of Maven, now it’s time to dive deep and understand how Maven builds our Java Project.\n\nMaven follows a **Build Lifecycle** to well… build our project. \n\nThis Lifecycle is divided into 3 parts:\n* default\n* clean\n* site\n\nEach Lifecycle is independent of each other and they can be executed together.\n\nThe default life cycle is divided into different phases like below:\n\n* **validate** – verifies whether the pom.xml file is valid or not\n* **compile** – compiles the source code inside the project\n* **test** – runs unit-tests inside the project\n* **package** – packages the source code into an artifact (ZIP, JAR, WAR or EAR)\n* **integration-test**– executes tests marked as Integration Tests\n* **verify** – checks whether the created package is valid or not.\n* **install** – installs the created package into our Local Repository\n* **deploy** – deploys the created package to the Remote Repository\n\nThe **clean** lifecycle is mainly responsible to clean the .class and meta-data generated by the above build phases.\n\nThe **site** lifecycle phase is responsible to generate Java Documentation.\n\nAll 3 lifecycles also contains some additional phases, which I am not going to cover in this tutorial, if you are interested you can refer to the [Maven Documentation](https:\u002F\u002Fmaven.apache.org\u002Fguides\u002Fintroduction\u002Fintroduction-to-the-lifecycle.html#lifecycle-reference)\n\n# Plugins and Goals\u003Ca name=\"chapter-18\"\u003E\u003C\u002Fa\u003E\nTo be able to execute these Lifecycle Phases, Maven provides us with **Plugins** to perform each task.\n\nEach plugin is associated with a particular **Goal**\n\nLet’s have a look at different Plugins and the associated Goals:\n\n##Maven Compile Plugin\u003Ca name=\"chapter-19\"\u003E\u003C\u002Fa\u003E\nThe Maven Compile Plugin is responsible to compile our Java files into the .class files. It’s equivalent of running **javac \u003Cjava-class-name\u003E**\n\nThis plugin enables the **compile** phase of the default lifecycle.\n\nYou can add this plugin to your project by adding the below section to your **pom.xml** file under the **dependencies** \nsection.\n\n```\n\u003Cbuild\u003E\n    \u003Cplugins\u003E\n        \u003Cplugin\u003E\n            \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Emaven-compiler-plugin\u003C\u002FartifactId\u003E\n            \u003Cversion\u003E3.8.1\u003C\u002Fversion\u003E\n        \u003C\u002Fplugin\u003E\n    \u003C\u002Fplugins\u003E\n\u003C\u002Fbuild\u003E\n```\nAt the time of writing this tutorial, **Maven Compiler Plugin** is at version **3.8.1**\n\nAfter adding the plugin to the project, you can activate the **compile** phase, by typing the below command:\n\n```\n$ mvn compiler:compile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-cli) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.729 s\n[INFO] Finished at: 2020-12-04T20:16:23+01:00\n[INFO] ------------------------------------------------------------------------\n```\nIn the above command the **compiler** is the name of the plugin and **compile** is the goal which triggers the lifecycle phase – compile\n\nYou can already see the message – **“Nothing to compile – all classes are up to date”**\n\nAs there are no Java Files in our project, there is nothing to compile, so let’s create a simple **HelloWorld.java** file\n\n```\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n```\nIf you try to compile again, you can see the following output:\n\n```\n$ mvn compiler:compile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-cli) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.123 s\n[INFO] Finished at: 2020-12-04T20:14:55+01:00\n[INFO] ------------------------------------------------------------------------\n```\nWe can see the generated class files under the target folder which resides just under the project root folder.\n\n![Maven Compile Folder Structure](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder.png?w=464&ssl=1)\n\nIf you have some Test files, those are also compiled using the **Compiler Plugin**.\n\nTo demonstrate that let’s create the below Test class under the src\u002Ftest\u002Fjava folder\n\n```\npublic class HelloWorldTest {\n    public static void main(String[] args) {\n        HelloWorld helloWorld = new HelloWorld();\n        System.out.println(helloWorld.say(\"Hi\"));\n    }\n}\n```\nAnd here is how you can compile the test classes:\n```\n$ mvn compiler:testCompile\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-cli) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\test-classes\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.319 s\n[INFO] Finished at: 2020-12-04T20:23:59+01:00\n[INFO] ------------------------------------------------------------------------\n```\nAs you can see that a change has been detected by the **Maven Compiler Plugin** and it has compiled our Test classes to the **target\u002Ftest-classes** folder\n\n![Maven Test Compile](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FTarget-Folder-with-Test-Classes.png?w=454&ssl=1)\n\nAs we are using IntelliJ, we can also use it to run the compilation, by clicking on the **compile** button under the **LifeCycle** dropdown as you see in the below image:\n\n![Maven Intellij Lifecycle phases](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Compile-Plugin.png?w=616&ssl=1)\n\nIf you run the **compile** option you may see the below error:\n\n```\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO] -------------------------------------------------------------\n[ERROR] COMPILATION ERROR : \n[INFO] -------------------------------------------------------------\n[ERROR] Source option 6 is no longer supported. Use 7 or later.\n[ERROR] Target option 6 is no longer supported. Use 7 or later.\n```\nThis is because, by default the **Source** and **Target** Compiler Version is set to 1.5 in IntelliJ Configuration. You can add the below **configuration** to the compiler plugin to override this settings:\n\n```\n\u003Cbuild\u003E\n    \u003Cplugins\u003E\n        \u003Cplugin\u003E\n            \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Emaven-compiler-plugin\u003C\u002FartifactId\u003E\n            \u003Cversion\u003E3.8.1\u003C\u002Fversion\u003E\n            \u003Cconfiguration\u003E\n                \u003Csource\u003E15\u003C\u002Fsource\u003E\n                \u003Ctarget\u003E15\u003C\u002Ftarget\u003E\n            \u003C\u002Fconfiguration\u003E\n        \u003C\u002Fplugin\u003E\n    \u003C\u002Fplugins\u003E\n\u003C\u002Fbuild\u003E\n```\nYou can pass many customized option to the Maven Compiler Plugin based on your needs, you can find the examples of the configuration in the [Apache Maven Compiler Plugin](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-compiler-plugin\u002Findex.html) website\n\n##Maven Surefire Plugin\u003Ca name=\"chapter-20\"\u003E\u003C\u002Fa\u003E\nUsing **Surefire Plugin**, we can run the tests inside our project by using the following command:\n\n```\n$ mvn test\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO]\n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running HelloWorldTest\nHi\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in HelloWorldTest\n[INFO]\n[INFO] Results:\n[INFO]\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  4.797 s\n[INFO] Finished at: 2020-12-04T20:54:49+01:00\n[INFO] ------------------------------------------------------------------------\n```\nYou can see that the HelloWorldTest.java file was executed successfully, and the you can also see how many Tests are executed successfully.\n\nThe Surefire Plugin generates Text and XML reports under the **target\u002Fsurefire-reports** folder.\n\n![Maven Tests](https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-SureFire-Reports.png?w=830&ssl=1)\n\nSimilar to **Compiler Plugin**, you can also configure Surefire Plugin based on your needs.\n\nSurefire Plugin by default includes all tests, if you have a bunch of tests, you can manually exclude some tests to be executed using below configuration:\n\n```\n\u003Cplugin\u003E\n    \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-surefire-plugin\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E2.22.2\u003C\u002Fversion\u003E\n    \u003Cconfiguration\u003E\n        \u003Cexcludes\u003EHelloWorldTest.java\u003C\u002Fexcludes\u003E\n    \u003C\u002Fconfiguration\u003E\n\u003C\u002Fplugin\u003E\n```\nAnd if you run the **mvn test** command now, you can see that no tests are executed.\n\n```\n$ mvn test\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.043 s\n[INFO] Finished at: 2020-12-04T21:00:09+01:00\n[INFO] ------------------------------------------------------------------------\n```\n##Maven Install Plugin\u003Ca name=\"chapter-21\"\u003E\u003C\u002Fa\u003E\nThis is used to package our source code into an artifact of our choice like a JAR and install it to our **Local Repository** which is **\u003CUSER_HOME\u003E\u002F.m2\u002Frepository** folder.\n\nYou can configure Maven Install Plugin by adding the below code:\n\n```\n\u003Cplugin\u003E\n    \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-install-plugin\u003C\u002FartifactId\u003E\n    \u003Cversion\u003E2.5.2\u003C\u002Fversion\u003E\n\u003C\u002Fplugin\u003E\n```\nYou can run the **install** phase of the lifecycle by typing the below command:\n\n```\n$ mvn install\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ maven-project ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ maven-project ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ maven-project ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ maven-project ---\n[INFO] Building jar: F:\\maven-project\\target\\maven-project-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\target\\maven-project-1.0-SNAPSHOT.jar to C:\\Users\\sai\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\sai\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.236 s\n[INFO] Finished at: 2020-12-04T21:10:49+01:00\n[INFO] ------------------------------------------------------------------------\n```\nBy checking the above output, you can see that the install phase includes also the previous phases in the lifecycle, so as part of this phase maven:\n\n* validates our pom.xml (**validate**)\n* compiles our source code (**compile**)\n* executes our tests (**test**)\n* packages our source code into JAR (**package**)\n* installs the JAR into our local repository (**install**)\n\nYou can see the JAR file in the below screenshot under the **target** folder.\n\n![Maven Install Folder Structure](https:\u002F\u002Fi0.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FIntellij-Install-Plugin.png?w=759&ssl=1)\n\n##Maven Deploy Plugin\u003Ca name=\"chapter-22\"\u003E\u003C\u002Fa\u003E\nThe Maven Deploy Plugin will deploy the artifact into a remote repository. The deploy goal of the plugin is associated with the **deploy** phase of the build lifecycle.\n\nThe plugin can be configured like below:\n```\n\u003Cplugin\u003E\n   \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n   \u003CartifactId\u003Emaven-deploy-plugin\u003C\u002FartifactId\u003E\n   \u003Cversion\u003E2.8.2\u003C\u002Fversion\u003E\n\u003C\u002Fplugin\u003E\n```\nBefore running the **deploy** phase of the lifecycle, we have to make sure that the remote repository details are configured inside our project.\n\nWe can configure this details inside the **distributionManagement** section:\n```\n\u003CdistributionManagement\u003E\n    \u003Crepository\u003E\n        \u003Cid\u003Etest-distribution\u003C\u002Fid\u003E\n        \u003Cname\u003Edistro name\u003C\u002Fname\u003E\n        \u003Curl\u003Ehttp:\u002F\u002Fdistrourl.com\u003C\u002Furl\u003E\n    \u003C\u002Frepository\u003E\n\u003C\u002FdistributionManagement\u003E\n```\nTo be able to connect to the remote repository, maven needs access to the credentials, which can be configured inside a special file called as **settings.xml** file.\n\nThis file is usually configured inside the **\u003CUSER_HOME\u003E\u002F.m2\u002F** folder, which looks like something below:\n\n```\n\u003Csettings xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FSETTINGS\u002F1.0.0\" xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n          xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FSETTINGS\u002F1.0.0 https:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fsettings-1.0.0.xsd\"\u003E\n    \u003Cservers\u003E\n        \u003Cserver\u003E\n            \u003Cid\u003Etest-distribution\u003C\u002Fid\u003E\n            \u003Cusername\u003Emy_username\u003C\u002Fusername\u003E\n            \u003Cpassword\u003Emy_password\u003C\u002Fpassword\u003E\n        \u003C\u002Fserver\u003E\n    \u003C\u002Fservers\u003E\n\u003C\u002Fsettings\u003E\n```\nMaven also provides us a way to encrypt the credentials inside the **settings.xml** file, you can read about this here\n\nYou can run the **deploy** goal using the following command:\n`$ mvn deploy`\n\nOnce you run this command, you will notice that it will run all the lifecycle phases up until deploy.\n\nAlthough if you run this command in the example project, it will fail because the Remote Repository Details are invalid.\n\n##Maven Clean Plugin\u003Ca name=\"chapter-23\"\u003E\u003C\u002Fa\u003E\nAnother important plugin in Maven is the **Maven Clean Plugin**, you saw that when running the above lifecycle phases, the generated files are stored under a folder called **target**.\n\nUsually when building our source code we need to start of as a clean slate so that there are no inconsistencies in the generated class files or JAR.\n\nFor this reason we have the **clean** phase where we will delete all the contents inside the **target** folder. You can execute this phase by typing the below commands:\n\n```\n$ mvn clean\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven-project ---\n[INFO] Deleting F:\\maven-project\\target\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.204 s\n[INFO] Finished at: 2020-12-04T21:19:12+01:00\n[INFO] ------------------------------------------------------------------------\n```\nYou can see that the target folder under our project is deleted successfully.\n\n## Other Maven Plugins\u003Ca name=\"chapter-24\"\u003E\u003C\u002Fa\u003E\nThere are many other plugins in Maven world, to execute other phases in the Maven Build Lifecycle, you can check them out [here](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Findex.html)\n\n#Maven Multi Module Projects\u003Ca name=\"chapter-25\"\u003E\u003C\u002Fa\u003E\nTill now we saw the Core Concepts of Maven, now it’s time to dive deep into some advanced concepts.\n\nIn the real world where we are building some non-trivial projects, the source code is going to be modularized (hopefully) and is divided into different sub projects.\n\nTo manage this effectively, Maven provides us Multi Module Projects where you can have nest different projects inside each other. We are basically creating a parent-child relationship between different Maven projects.\n\nBasically, we have a **Parent Project** (Parent POM) which contains different **sub-projects** (**sub-modules**), each of which is again a normal Maven Project.\n\n![Multi Module Project](https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project.png?w=506&ssl=1)\n\nThe **Parent POM** usually encapsulates other child’s and that’s why its packaged as a **POM** instead of usual packaing format’s like **JAR**.\n\nIf you recall the section **Project Object Model** , we discussed about **Super POM** which is basically a kind of **Parent POM** which encapsulates default settings configured by Maven for us.\n\n##Creating Multi Module Project using IntelliJ\u003Ca name=\"chapter-26\"\u003E\u003C\u002Fa\u003E\nWe will see how to generate Multi Module Projects using our IntelliJ IDE.\n\nTo create the project, first right click on the project root folder and select **New** -\u003E **Module** and click on **Next**.\n\n![Maven Module Coordinates](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Child-Project-1.png?w=1061&ssl=1)\n\nGive a name to the child project and click on **Finish**.\n\n![Maven Module Structure](https:\u002F\u002Fi1.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure.png?w=730&ssl=1)\n\nYou can see the new project structure in the above picture after we created the **child project**.\n\nNow if you open the **pom.xml** under the root folder, you can observe the following tags which are added by creating the maven module.\n\n```\n    \u003Cmodules\u003E\n        \u003Cmodule\u003Echild-project-1\u003C\u002Fmodule\u003E\n    \u003C\u002Fmodules\u003E\n```\nWe can create multiple projects in the same way and you can see all the modules will be listed one-by-one under the **modules** tag.\n\n```\n    \u003Cmodules\u003E\n        \u003Cmodule\u003Echild-project-1\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-2\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-3\u003C\u002Fmodule\u003E\n    \u003C\u002Fmodules\u003E\n```\nAs we create these 3 modules, having the **src** folder under the root project folder doesn’t make much sense, so let’s copy and paste this folder onto other child-projects, so that we have some code configured inside these modules.\n\nThis is how our project structure now looks like:\n![Maven Multi Module Project Structure](https:\u002F\u002Fi2.wp.com\u002Fprogrammingtechie.com\u002Fwp-content\u002Fuploads\u002F2020\u002F12\u002FMaven-Multi-Module-Project-Structure-with-Code.png?w=944&ssl=1)\n\nAnd if you check the **pom.xml** of **child-project-1**,**child-project-2** and **child-project-3**. You can see that the root project is configured as a parent project.\n\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003Cparent\u003E\n        \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n        \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n        \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n    \u003C\u002Fparent\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CartifactId\u003Echild-project-1\u003C\u002FartifactId\u003E\n \n \n\u003C\u002Fproject\u003E\n```\nNow you can build all the projects at once by running the **mvn install** under the Parent Project, and Maven scans through all the POMS and builds all of them one-by-one\n\n```\n$ mvn install\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] maven-project                                                      [pom]\n[INFO] child-project-1                                                    [jar]\n[INFO] child-project-2                                                    [jar]\n[INFO] child-project-3                                                    [jar]\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT                                [1\u002F4]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-1 \u003E---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT                              [2\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-1\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-1 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-1 ---\n[INFO] Building jar: F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-1 ---\n[INFO] Installing F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-1\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-2 \u003E---------------------\n[INFO] Building child-project-2 1.0-SNAPSHOT                              [3\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-2\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-2 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-2 ---\n[INFO] Building jar: F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-2 ---\n[INFO] Installing F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-2\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-3 \u003E---------------------\n[INFO] Building child-project-3 1.0-SNAPSHOT                              [4\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory F:\\maven-project\\child-project-3\\src\\test\\resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\test-classes\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-3 ---\n[INFO] Installing F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-3\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for maven-project 1.0-SNAPSHOT:\n[INFO]\n[INFO] maven-project ...................................... SUCCESS [  0.252 s]\n[INFO] child-project-1 .................................... SUCCESS [  1.534 s]\n[INFO] child-project-2 .................................... SUCCESS [  0.430 s]\n[INFO] child-project-3 .................................... SUCCESS [  0.351 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.699 s\n[INFO] Finished at: 2020-12-04T21:58:10+01:00\n[INFO] ------------------------------------------------------------------------\n```\nYou can see that Maven built all the projects and provided us a nice report of the **Build Status** of each project.\n\nMaven uses something called as a **Reactor** which is responsible to scan the whole project and identify the parent and child maven projects. If there are any dependencies, then Reactor makes sure to execute the projects in the required order.\n\nFor example, if **child-project-2** is dependent on **child-project-3** , then Maven Reactor makes sure to first build **child-project-3** and then **child-project-2**.\n\n##Managing Dependencies inside Maven Multi Module Project\u003Ca name=\"chapter-27\"\u003E\u003C\u002Fa\u003E\nWhen you are working with Multiple Maven Modules, you may be working with different dependencies in different modules, and chances are that you may be using similar dependencies in multiple modules.\n\nMaven provides us a way to effectively manage the dependencies in your project by allowing us to define the dependencies in centralized location (**parent project**) and use those dependencies across the different child projects.\n\nThis minimizes the dependency version mismatch across multiple projects, as we have a single place we can manage all the dependencies and its versions.\n\nLet’s see how to do that in our example project.\n\nI am going to move all the dependencies which are defined inside the parent project into the **dependencyManagement** section, like below:\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cpackaging\u003Epom\u003C\u002Fpackaging\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n    \u003Cmodules\u003E\n        \u003Cmodule\u003Echild-project-1\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-2\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-3\u003C\u002Fmodule\u003E\n    \u003C\u002Fmodules\u003E\n \n    \u003CdependencyManagement\u003E\n        \u003Cdependencies\u003E\n            \u003Cdependency\u003E\n                \u003CgroupId\u003Eorg.junit.jupiter\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Ejunit-jupiter-engine\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E5.5.2\u003C\u002Fversion\u003E\n            \u003C\u002Fdependency\u003E\n            \u003Cdependency\u003E\n                \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Espring-boot-starter-test\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E2.1.6.RELEASE\u003C\u002Fversion\u003E\n                \u003Cscope\u003Etest\u003C\u002Fscope\u003E\n                \u003Cexclusions\u003E\n                    \u003Cexclusion\u003E\n                        \u003CgroupId\u003Ejunit\u003C\u002FgroupId\u003E\n                        \u003CartifactId\u003Ejunit\u003C\u002FartifactId\u003E\n                    \u003C\u002Fexclusion\u003E\n                \u003C\u002Fexclusions\u003E\n            \u003C\u002Fdependency\u003E\n        \u003C\u002Fdependencies\u003E\n    \u003C\u002FdependencyManagement\u003E\n \n    \u003Cbuild\u003E\n        \u003Cplugins\u003E\n            \u003Cplugin\u003E\n                \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Emaven-compiler-plugin\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E3.8.1\u003C\u002Fversion\u003E\n                \u003Cconfiguration\u003E\n                    \u003Csource\u003E11\u003C\u002Fsource\u003E\n                    \u003Ctarget\u003E11\u003C\u002Ftarget\u003E\n                \u003C\u002Fconfiguration\u003E\n            \u003C\u002Fplugin\u003E\n            \u003Cplugin\u003E\n                \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Emaven-surefire-plugin\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E2.22.2\u003C\u002Fversion\u003E\n                \u003Cconfiguration\u003E\n                    \u003Cexcludes\u003EHelloWorldTest.java\u003C\u002Fexcludes\u003E\n                \u003C\u002Fconfiguration\u003E\n            \u003C\u002Fplugin\u003E\n            \u003Cplugin\u003E\n                \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Emaven-install-plugin\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E2.5.2\u003C\u002Fversion\u003E\n            \u003C\u002Fplugin\u003E\n        \u003C\u002Fplugins\u003E\n    \u003C\u002Fbuild\u003E\n\u003C\u002Fproject\u003E\n```\nThe change in the pom.xml is minor, we just moved the dependencies under the **dependencyManagement** tag.\n\nNow if you analyze the dependencies under the **child-project-1** you can see that it’s empty.\n\n```\nmvn dependency:tree\n[INFO] Scanning for projects...\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-1 \u003E---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ child-project-1 ---\n[INFO] org.example:child-project-1:jar:1.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.871 s\n[INFO] Finished at: 2020-12-05T20:23:59+01:00\n[INFO] ------------------------------------------------------------------------\n```\nThis is because we moved all the dependencies inside the Parent POM into **dependencyManagement** section, now to access any dependencies the **Child Projects** should define them manually inside their **pom.xml**.\n\nIn this way, the child projects can have only the dependencies they need inside the **pom.xml**.\n\nNow, let’s go ahead and add the **junit-jupiter** dependencies inside the **child-project-1** and see what happens.\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003Cparent\u003E\n        \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n        \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n        \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n    \u003C\u002Fparent\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CartifactId\u003Echild-project-1\u003C\u002FartifactId\u003E\n    \u003Cdependencies\u003E\n        \u003Cdependency\u003E\n            \u003CgroupId\u003Eorg.junit.jupiter\u003C\u002FgroupId\u003E\n            \u003CartifactId\u003Ejunit-jupiter-engine\u003C\u002FartifactId\u003E\n        \u003C\u002Fdependency\u003E\n    \u003C\u002Fdependencies\u003E\n\u003C\u002Fproject\u003E\n```\n\n```\n$ mvn dependency:tree\n[INFO] Scanning for projects...\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-1 \u003E---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ child-project-1 ---\n[INFO] org.example:child-project-1:jar:1.0-SNAPSHOT\n[INFO] \\- org.junit.jupiter:junit-jupiter-engine:jar:5.5.2:compile\n[INFO]    +- org.apiguardian:apiguardian-api:jar:1.1.0:compile\n[INFO]    +- org.junit.platform:junit-platform-engine:jar:1.5.2:compile\n[INFO]    |  +- org.opentest4j:opentest4j:jar:1.2.0:compile\n[INFO]    |  \\- org.junit.platform:junit-platform-commons:jar:1.5.2:compile\n[INFO]    \\- org.junit.jupiter:junit-jupiter-api:jar:5.5.2:compile\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.930 s\n[INFO] Finished at: 2020-12-05T20:27:26+01:00\n[INFO] ------------------------------------------------------------------------\n```\nYou can now see that the **junit-jupiter** dependency is available inside the **child-project-1**.\n\n##Managing Plugins inside Maven Multi Module Project\u003Ca name=\"chapter-28\"\u003E\u003C\u002Fa\u003E\nWe can also manage Plugins inside our Maven Multi Module project, similar to the dependencies.\n\nTo Manage Plugins, we have the **pluginManagement** section inside the **pom.xml** and each child project can chose the plugin it needs.\n\nThis is how our parent **pom.xml** looks like after introducing the **pluginManagement**.\n```\n\u003C?xml version=\"1.0\" encoding=\"UTF-8\"?\u003E\n\u003Cproject xmlns=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0\"\n         xmlns:xsi=\"http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\"\n         xsi:schemaLocation=\"http:\u002F\u002Fmaven.apache.org\u002FPOM\u002F4.0.0 http:\u002F\u002Fmaven.apache.org\u002Fxsd\u002Fmaven-4.0.0.xsd\"\u003E\n    \u003CmodelVersion\u003E4.0.0\u003C\u002FmodelVersion\u003E\n \n    \u003CgroupId\u003Eorg.example\u003C\u002FgroupId\u003E\n    \u003CartifactId\u003Emaven-project\u003C\u002FartifactId\u003E\n    \u003Cpackaging\u003Epom\u003C\u002Fpackaging\u003E\n    \u003Cversion\u003E1.0-SNAPSHOT\u003C\u002Fversion\u003E\n    \u003Cmodules\u003E\n        \u003Cmodule\u003Echild-project-1\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-2\u003C\u002Fmodule\u003E\n        \u003Cmodule\u003Echild-project-3\u003C\u002Fmodule\u003E\n    \u003C\u002Fmodules\u003E\n \n    \u003CdependencyManagement\u003E\n        \u003Cdependencies\u003E\n            \u003Cdependency\u003E\n                \u003CgroupId\u003Eorg.junit.jupiter\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Ejunit-jupiter-engine\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E5.5.2\u003C\u002Fversion\u003E\n            \u003C\u002Fdependency\u003E\n            \u003Cdependency\u003E\n                \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n                \u003CartifactId\u003Espring-boot-starter-test\u003C\u002FartifactId\u003E\n                \u003Cversion\u003E2.1.6.RELEASE\u003C\u002Fversion\u003E\n                \u003Cscope\u003Etest\u003C\u002Fscope\u003E\n                \u003Cexclusions\u003E\n                    \u003Cexclusion\u003E\n                        \u003CgroupId\u003Ejunit\u003C\u002FgroupId\u003E\n                        \u003CartifactId\u003Ejunit\u003C\u002FartifactId\u003E\n                    \u003C\u002Fexclusion\u003E\n                \u003C\u002Fexclusions\u003E\n            \u003C\u002Fdependency\u003E\n        \u003C\u002Fdependencies\u003E\n    \u003C\u002FdependencyManagement\u003E\n \n    \u003Cbuild\u003E\n        \u003CpluginManagement\u003E\n            \u003Cplugins\u003E\n                \u003Cplugin\u003E\n                    \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                    \u003CartifactId\u003Emaven-compiler-plugin\u003C\u002FartifactId\u003E\n                    \u003Cversion\u003E3.8.1\u003C\u002Fversion\u003E\n                    \u003Cconfiguration\u003E\n                        \u003Csource\u003E11\u003C\u002Fsource\u003E\n                        \u003Ctarget\u003E11\u003C\u002Ftarget\u003E\n                    \u003C\u002Fconfiguration\u003E\n                \u003C\u002Fplugin\u003E\n                \u003Cplugin\u003E\n                    \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                    \u003CartifactId\u003Emaven-surefire-plugin\u003C\u002FartifactId\u003E\n                    \u003Cversion\u003E2.22.2\u003C\u002Fversion\u003E\n                    \u003Cconfiguration\u003E\n                        \u003Cexcludes\u003EHelloWorldTest.java\u003C\u002Fexcludes\u003E\n                    \u003C\u002Fconfiguration\u003E\n                \u003C\u002Fplugin\u003E\n                \u003Cplugin\u003E\n                    \u003CgroupId\u003Eorg.apache.maven.plugins\u003C\u002FgroupId\u003E\n                    \u003CartifactId\u003Emaven-install-plugin\u003C\u002FartifactId\u003E\n                    \u003Cversion\u003E2.5.2\u003C\u002Fversion\u003E\n                \u003C\u002Fplugin\u003E\n            \u003C\u002Fplugins\u003E\n        \u003C\u002FpluginManagement\u003E\n    \u003C\u002Fbuild\u003E\n\u003C\u002Fproject\u003E\n```\n#Using Profiles\u003Ca name=\"chapter-29\"\u003E\u003C\u002Fa\u003E\nProfiles can be used in Maven to created customized build configurations. This means customizing the behavior of our builds based on specific conditions.\n\nFor example: Sometimes we need to test whether the source code packaging is working correctly or not, in that case we can skip the test execution by activating the **skip.tests** property like below:\n\n```\n\u003Cprofile\u003E\n    \u003Cid\u003Eskip-tests\u003C\u002Fid\u003E\n    \u003Cproperties\u003E\n        \u003Cmaven.test.skip\u003Etrue\u003C\u002Fmaven.test.skip\u003E\n    \u003C\u002Fproperties\u003E\n\u003C\u002Fprofile\u003E\n```\nNow we can try to run the build by specifying which profile to activate using the **-P** flag.\n```\n$ mvn -Pskip-tests clean install\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] maven-project                                                      [pom]\n[INFO] child-project-1                                                    [jar]\n[INFO] child-project-2                                                    [jar]\n[INFO] child-project-3                                                    [jar]\n[INFO]\n[INFO] ---------------------\u003C org.example:maven-project \u003E----------------------\n[INFO] Building maven-project 1.0-SNAPSHOT                                [1\u002F4]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ maven-project ---\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ maven-project ---\n[INFO] Installing F:\\maven-project\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\maven-project\\1.0-SNAPSHOT\\maven-project-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-1 \u003E---------------------\n[INFO] Building child-project-1 1.0-SNAPSHOT                              [2\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-1 ---\n[INFO] Deleting F:\\maven-project\\child-project-1\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-1 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-1 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-1\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-1 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-1 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-1 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-1 ---\n[INFO] Building jar: F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-1 ---\n[INFO] Installing F:\\maven-project\\child-project-1\\target\\child-project-1-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-1\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-1\\1.0-SNAPSHOT\\child-project-1-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-2 \u003E---------------------\n[INFO] Building child-project-2 1.0-SNAPSHOT                              [3\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-2 ---\n[INFO] Deleting F:\\maven-project\\child-project-2\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-2 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-2 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-2\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-2 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-2 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-2 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-2 ---\n[INFO] Building jar: F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-2 ---\n[INFO] Installing F:\\maven-project\\child-project-2\\target\\child-project-2-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-2\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-2\\1.0-SNAPSHOT\\child-project-2-1.0-SNAPSHOT.pom\n[INFO]\n[INFO] --------------------\u003C org.example:child-project-3 \u003E---------------------\n[INFO] Building child-project-3 1.0-SNAPSHOT                              [4\u002F4]\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ child-project-3 ---\n[INFO] Deleting F:\\maven-project\\child-project-3\\target\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ child-project-3 ---\n[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Copying 0 resource\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ child-project-3 ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding Cp1252, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to F:\\maven-project\\child-project-3\\target\\classes\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ child-project-3 ---\n[INFO] Not copying test resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ child-project-3 ---\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n[INFO]\n[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ child-project-3 ---\n[INFO] Installing F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.jar\n[INFO] Installing F:\\maven-project\\child-project-3\\pom.xml to C:\\Users\\subra\\.m2\\repository\\org\\example\\child-project-3\\1.0-SNAPSHOT\\child-project-3-1.0-SNAPSHOT.pom\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for maven-project 1.0-SNAPSHOT:\n[INFO]\n[INFO] maven-project ...................................... SUCCESS [  0.327 s]\n[INFO] child-project-1 .................................... SUCCESS [  1.208 s]\n[INFO] child-project-2 .................................... SUCCESS [  0.205 s]\n[INFO] child-project-3 .................................... SUCCESS [  0.167 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.055 s\n[INFO] Finished at: 2020-12-05T23:00:13+01:00\n[INFO] ------------------------------------------------------------------------\n```\nIf you observe the logs carefully, you can see that the test-execution is skipped:\n\n```\n[INFO] Not compiling test sources\n[INFO]\n[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ child-project-3 ---\n[INFO] Tests are skipped.\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ child-project-3 ---\n[INFO] Building jar: F:\\maven-project\\child-project-3\\target\\child-project-3-1.0-SNAPSHOT.jar\n```\nThis is just a simple usage of the profiles, you can configure multiple profiles in our project to customize the build behavior.\n\n# Conclusion\u003Ca name=\"chapter-30\"\u003E\u003C\u002Fa\u003E\n\nSo we came to the end of this tutorial, I hope this tutorial improved your understanding of Maven.\n\n#### If you like this article please make sure to share it with your friends and colleagues who wants to learn about Apache Maven. You can follow me through my [blog](https:\u002F\u002Fhttps:\u002F\u002Fprogrammingtechie.com\u002F), [Youtube Channel](https:\u002F\u002Fwww.youtube.com\u002Fchannel\u002FUCD20RZV_WHQImisCW2QZwDw) and [Twitter](https:\u002F\u002Ftwitter.com\u002Fsai90_u)\n",user:{name:"Sai Upadhyayula",username:"saiupadhyayula",twitter_username:"sai90_u",github_username:"SaiUpadhyayula",website_url:"https:\u002F\u002Fprogrammingtechie.com\u002F",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--2EHAPLXQ--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F141300\u002F88e39d97-a705-43e5-a605-f5c3cd368381.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--mqz9DF2G--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F141300\u002F88e39d97-a705-43e5-a605-f5c3cd368381.jpg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fsaiupadhyayula\u002F547366",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2020-12-19T21:58:11Z","https:\u002F\u002Fdev.to\u002Fsaiupadhyayula\u002Fmaven-complete-tutorial-for-beginners-1jek",41));