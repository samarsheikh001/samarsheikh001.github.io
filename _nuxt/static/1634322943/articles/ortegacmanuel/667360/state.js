window.__NUXT__=(function(a,b,c,d,e,f){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:667360,title:"How to name Rails Concerns? ",description:"`able`, `has` and whatever better describes what the concern groups together.",readable_publish_date:"Apr 15",slug:"how-to-name-rails-concerns-3m86",path:"\u002Fmainstreet\u002Fhow-to-name-rails-concerns-3m86",url:b,comments_count:1,public_reactions_count:c,collection_id:a,published_timestamp:d,positive_reactions_count:c,cover_image:a,social_image:"https:\u002F\u002Fdev.to\u002Fsocial_previews\u002Farticle\u002F667360.png",canonical_url:b,created_at:"2021-04-15T17:43:55Z",edited_at:"2021-04-20T11:25:39Z",crossposted_at:a,published_at:d,last_comment_at:"2021-04-16T15:35:39Z",reading_time_minutes:2,tag_list:"rails, ruby, 5days5blogposts",tags:["rails","ruby","5days5blogposts"],body_html:"\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fapi.rubyonrails.org\u002Fv6.1.3\u002Fclasses\u002FActiveSupport\u002FConcern.html\"\u003ERails concerns\u003C\u002Fa\u003E are a handy technique to organize code \u002F logic within your classes. But how do we name these Rails Concerns?\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe usually follow these two conventions:\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"able-suffix\" href=\"#able-suffix\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003Eable\u003C\u002Fstrong\u003E suffix\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EWe suffix Concerns with \u003Ccode\u003Eable\u003C\u002Fcode\u003E when the object we are including the concern to is able to act or behave as the concern describes.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Emodule\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003EAvatarable\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kp\"\u003Eextend\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EActiveSupport\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EConcern\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E...\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"n\"\u003Eincluded\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edo\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E...\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E...\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe Concern above tells us that the class we include this concern to is able to act \u002F behave as we would expect from an avatar.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe also follow this convention when we can execute the action that the concern describes to the object we are including the concern to.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Emodule\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003ESubscribable\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kp\"\u003Eextend\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EActiveSupport\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EConcern\u003C\u002Fspan\u003E\n  \u003Cspan class=\"o\"\u003E...\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn this case we are making clear we are able to subscribe to objects from the class we include this \u003Ccode\u003ESubscribable\u003C\u002Fcode\u003E Concern to.  \u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"has-prefix\" href=\"#has-prefix\"\u003E\n  \u003C\u002Fa\u003E\n  \u003Cstrong\u003Ehas\u003C\u002Fstrong\u003E prefix\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EWe prefix our Concerns with \u003Ccode\u003Ehas\u003C\u002Fcode\u003E when the logic we are trying to group within our Concern is not describing a behavior but a \u003Ccode\u003Ehas\u003C\u002Fcode\u003E relation between the class where we will include the Concern to and a second entity. In the following scenario we may have a \u003Ccode\u003EUser\u003C\u002Fcode\u003E entity that has mentions within a blogging platform. At some point we may come up with a Concern that groups all the logic tied to a user having mentions.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight ruby\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Emodule\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003EHasMentions\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kp\"\u003Eextend\u003C\u002Fspan\u003E \u003Cspan class=\"no\"\u003EActiveSupport\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"no\"\u003EConcern\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"n\"\u003Eincluded\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edo\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E...\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eend\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIn case none of the conventions described above makes sense within a specific scenario we don't follow them and goes with whatever better describes what the concern groups together.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003EHow do you name your Rails Concerns? What conventions do you follow?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"---\ntitle: How to name Rails Concerns? \npublished: true\ndescription: `able`, `has` and whatever better describes what the concern groups together.\ntags: Rails, Ruby, 5days5blogposts\n---\n\n[Rails concerns](https:\u002F\u002Fapi.rubyonrails.org\u002Fv6.1.3\u002Fclasses\u002FActiveSupport\u002FConcern.html) are a handy technique to organize code \u002F logic within your classes. But how do we name these Rails Concerns?\n\nWe usually follow these two conventions:\n\n### **able** suffix\n\nWe suffix Concerns with `able` when the object we are including the concern to is able to act or behave as the concern describes.\n\n```ruby\nmodule Avatarable\n  extend ActiveSupport::Concern\n  ...\n\n  included do\n    ...\n  end\n  ...\n\nend\n```\n\nThe Concern above tells us that the class we include this concern to is able to act \u002F behave as we would expect from an avatar.\n\nWe also follow this convention when we can execute the action that the concern describes to the object we are including the concern to.\n\n```ruby\nmodule Subscribable\n  extend ActiveSupport::Concern\n  ...\nend\n```\n\nIn this case we are making clear we are able to subscribe to objects from the class we include this `Subscribable` Concern to.  \n\n### **has** prefix\n\nWe prefix our Concerns with `has` when the logic we are trying to group within our Concern is not describing a behavior but a `has` relation between the class where we will include the Concern to and a second entity. In the following scenario we may have a `User` entity that has mentions within a blogging platform. At some point we may come up with a Concern that groups all the logic tied to a user having mentions. \n\n```ruby\nmodule HasMentions\n  extend ActiveSupport::Concern\n\n  included do\n    ...\n  end\nend\n```\n\nIn case none of the conventions described above makes sense within a specific scenario we don't follow them and goes with whatever better describes what the concern groups together.\n\n\n**How do you name your Rails Concerns? What conventions do you follow?**\n",user:{name:"Manuel Ortega",username:e,twitter_username:"OrtegaCManuel",github_username:e,website_url:"https:\u002F\u002Fgithub.com\u002Fortegacmanuel",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--RDXyQVuO--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F63203\u002F45fb6820-469c-4f38-aef1-f887a6b0a7a4.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--2eCHgzCp--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F63203\u002F45fb6820-469c-4f38-aef1-f887a6b0a7a4.jpeg"},organization:{name:"Main Street",username:f,slug:f,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---ZMOB6s---\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2633\u002F22308430-15a4-4e8d-9bde-320994d23333.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Amk9xRdc--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2633\u002F22308430-15a4-4e8d-9bde-320994d23333.jpg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fortegacmanuel\u002F667360",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"https:\u002F\u002Fdev.to\u002Fmainstreet\u002Fhow-to-name-rails-concerns-3m86",14,"2021-04-15T18:28:57Z","ortegacmanuel","mainstreet"));