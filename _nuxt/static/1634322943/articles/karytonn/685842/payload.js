__NUXT_JSONP__("/articles/karytonn/685842", (function(a,b,c,d,e,f){d.type_of="article";d.id=685842;d.title="Angular: font-size e acessibilidade";d.description="Diante do requisito para uma feature que possibilite alterar o tamanho da fonte em todo o projeto de...";d.readable_publish_date="May 3";d.slug="angular-font-size-e-acessibilidade-2jo8";d.path="\u002Fkarytonn\u002Fangular-font-size-e-acessibilidade-2jo8";d.url=e;d.comments_count=0;d.public_reactions_count=a;d.collection_id=b;d.published_timestamp=c;d.positive_reactions_count=a;d.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--fv0Lcsec--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fz1ztaytjg49jz1zfskm3.jpg";d.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--6frg4dLu--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fz1ztaytjg49jz1zfskm3.jpg";d.canonical_url=e;d.created_at="2021-05-03T01:50:53Z";d.edited_at=b;d.crossposted_at=b;d.published_at=c;d.last_comment_at=c;d.reading_time_minutes=a;d.tag_list="angular, typescript, acessibilidade, fonte";d.tags=["angular","typescript","acessibilidade","fonte"];d.body_html="\u003Cp\u003EDiante do requisito para uma feature que possibilite alterar o tamanho da fonte em todo o projeto de forma dinâmica, como conseguir essa façanha em projetos Angular?\u003C\u002Fp\u003E\n\n\u003Cp\u003EBom, após procurar muito e não encontrar nada a respeito, eis a solução que compilei:\u003C\u002Fp\u003E\n\n\u003Cp\u003E1) Torne explícito um valor font-size default para todo o seu projeto. Faça isso no arquivo style.scss ou .css, ou ainda, de acordo com o pré-processador utilizado no projeto.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1HGZgGo1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi7mfbqm4lye8nor2d8ky.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1HGZgGo1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi7mfbqm4lye8nor2d8ky.png\" alt=\"Alt Text\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E2) Para todas as tags que possuem texto, atribua o valor de font-size utilizando a unidade de medida rem (cada 1 \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FLearn\u002FCSS\u002FBuilding_blocks\u002FValues_and_units\"\u003Erem\u003C\u002Fa\u003E equivale 16px, valor definido por você no style.scss).\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--z3GoJ0CB--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxtaf4tmwex96flpgm92p.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--z3GoJ0CB--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxtaf4tmwex96flpgm92p.png\" alt=\"Alt Text\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cem\u003EObs.: Esse tipo de atribuição de estilo inline não é o mais adequado, pois desta forma nosso html fica poluido e também não conseguimos aplicar estilos em cascata, reaproveitando o código. Aqui fiz assim somente para exemplificar a atribuição do font-size com rem.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E3) Crie um componente que será responsável por exibir essa e outras features de acessibilidade (normalmente se utiliza uma barra que fica no topo da header, conforme imagem que ilustra esse tutorial).\u003C\u002Fp\u003E\n\n\u003Cp\u003E4) No template html declare 3 botões que invocam uma função e passam como parâmetro uma string.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--PeYbvvwu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fijltb5doxqgtnzd2aqwe.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--PeYbvvwu--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fijltb5doxqgtnzd2aqwe.png\" alt=\"Alt Text\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E5) No componente.ts implemente a função que será responsável por aumentar, diminuir ou resetar o tamanho da fonte.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAntes disso, declare a variável font_size que será responsável por armazenar o tamanho da fonte default que é o mesmo valor do estado atual.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENa implementação da função o primeiro passo é verificar qual dos botões foi acionando e com base nisso atribuir um novo valor à variável font_size.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENa sequência criamos uma variável local htmlRoot do tipo HTMLElement que recebe uma instância do DOM referenciando a tag html. No caso do Angular, é necessário informar que queremos referenciar a primeira declaração de html e fazemos isso adicionando [0] ao final da invocação do método getElementsByTagName().\u003C\u002Fp\u003E\n\n\u003Cp\u003EPor fim, verificamos se a variável recebeu a referência do html, se sim, então atribuímos um novo valor ao font-size default do projeto, o mesmo que declaramos lá no style.scss.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---BltiAMX--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fwxw4apnm0uglbspr0m2x.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs---BltiAMX--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fwxw4apnm0uglbspr0m2x.png\" alt=\"Alt Text\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EShazam! Nossa feature está pronta! Ao clicar no btn A+ o tamanho da fonte será acrescido de 1px, ao clicar em btn A- decrescido de 1px, e assim por diante.\u003C\u002Fp\u003E\n\n\u003Cp\u003EVale resaltar que a ação se propaga em todas as páginas, por tanto,não há necessidade de se implementar a função em outros componentes.\u003C\u002Fp\u003E\n\n\u003Cp\u003EPara um Ctrl+c o código está no no meu \u003Ca href=\"https:\u002F\u002Fgist.github.com\u002FKarytonn\u002F93dde46b048fea690efb5a0c201ef986\"\u003EGitHub\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EÉ possível que esta não seja a solução mais adequada ou performática, mas funciona. ;)\u003C\u002Fp\u003E\n\n";d.body_markdown="Diante do requisito para uma feature que possibilite alterar o tamanho da fonte em todo o projeto de forma dinâmica, como conseguir essa façanha em projetos Angular?\n\nBom, após procurar muito e não encontrar nada a respeito, eis a solução que compilei:\n\n1) Torne explícito um valor font-size default para todo o seu projeto. Faça isso no arquivo style.scss ou .css, ou ainda, de acordo com o pré-processador utilizado no projeto.\n\n![Alt Text](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fi7mfbqm4lye8nor2d8ky.png)\n\n2) Para todas as tags que possuem texto, atribua o valor de font-size utilizando a unidade de medida rem (cada 1 [rem](https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FLearn\u002FCSS\u002FBuilding_blocks\u002FValues_and_units) equivale 16px, valor definido por você no style.scss).\n\n![Alt Text](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fxtaf4tmwex96flpgm92p.png)\n\n*Obs.: Esse tipo de atribuição de estilo inline não é o mais adequado, pois desta forma nosso html fica poluido e também não conseguimos aplicar estilos em cascata, reaproveitando o código. Aqui fiz assim somente para exemplificar a atribuição do font-size com rem.*\n\n3) Crie um componente que será responsável por exibir essa e outras features de acessibilidade (normalmente se utiliza uma barra que fica no topo da header, conforme imagem que ilustra esse tutorial).\n\n4) No template html declare 3 botões que invocam uma função e passam como parâmetro uma string.\n\n![Alt Text](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fijltb5doxqgtnzd2aqwe.png)\n\n5) No componente.ts implemente a função que será responsável por aumentar, diminuir ou resetar o tamanho da fonte.\n\nAntes disso, declare a variável font_size que será responsável por armazenar o tamanho da fonte default que é o mesmo valor do estado atual.\n\nNa implementação da função o primeiro passo é verificar qual dos botões foi acionando e com base nisso atribuir um novo valor à variável font_size.\n\nNa sequência criamos uma variável local htmlRoot do tipo HTMLElement que recebe uma instância do DOM referenciando a tag html. No caso do Angular, é necessário informar que queremos referenciar a primeira declaração de html e fazemos isso adicionando [0] ao final da invocação do método getElementsByTagName().\n\nPor fim, verificamos se a variável recebeu a referência do html, se sim, então atribuímos um novo valor ao font-size default do projeto, o mesmo que declaramos lá no style.scss.\n\n![Alt Text](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fwxw4apnm0uglbspr0m2x.png)\n\nShazam! Nossa feature está pronta! Ao clicar no btn A+ o tamanho da fonte será acrescido de 1px, ao clicar em btn A- decrescido de 1px, e assim por diante.\n\nVale resaltar que a ação se propaga em todas as páginas, por tanto,não há necessidade de se implementar a função em outros componentes.\n\nPara um Ctrl+c o código está no no meu [GitHub](https:\u002F\u002Fgist.github.com\u002FKarytonn\u002F93dde46b048fea690efb5a0c201ef986).\n\nÉ possível que esta não seja a solução mais adequada ou performática, mas funciona. ;)";d.user={name:"Karytonn Oliveira",username:"karytonn",twitter_username:f,github_username:f,website_url:"https:\u002F\u002Fkarytonn.dev",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--dN1hrLHl--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F241170\u002Fca11b524-f5d3-4e08-bad8-a41bb340ed49.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jJgeNeox--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F241170\u002Fca11b524-f5d3-4e08-bad8-a41bb340ed49.jpg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:d}},mutations:[["SET_CURRENT_ARTICLE",d]]}}(2,null,"2021-05-03T01:52:33Z",{},"https:\u002F\u002Fdev.to\u002Fkarytonn\u002Fangular-font-size-e-acessibilidade-2jo8","Karytonn")));