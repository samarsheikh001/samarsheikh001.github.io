window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:731297,title:"Building End-to-End Pipeline in Sagemaker",description:"In this part, we will see how we can make an end-to-end pipeline of an entire machine learning...",readable_publish_date:"Jun 17",slug:"building-end-to-end-pipeline-in-sagemaker-2g03",path:"\u002Faws-builders\u002Fbuilding-end-to-end-pipeline-in-sagemaker-2g03",url:c,comments_count:0,public_reactions_count:d,collection_id:a,published_timestamp:b,positive_reactions_count:d,cover_image:a,social_image:"https:\u002F\u002Fdev.to\u002Fsocial_previews\u002Farticle\u002F731297.png",canonical_url:c,created_at:"2021-06-17T16:36:18Z",edited_at:"2021-06-18T06:44:21Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:7,tag_list:"aws, machinelearning, pipeline, devops",tags:["aws","machinelearning","pipeline","devops"],body_html:"\u003Cp\u003EIn this part, we will see how we can make an end-to-end pipeline of an entire machine learning process. We can use a combination of AWS services to automate the entire process of machine learning.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"overview-of-step-functions\" href=\"#overview-of-step-functions\"\u003E\n  \u003C\u002Fa\u003E\n  Overview of Step Functions\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAWS Step Functions is the service provided by Amazon that you can use to create workflows and automate them. These workflows consist of AWS resources, algorithms,\u003Cbr\u003E\nand processing. They may also include resources that are outside AWS. We can use Step Functions to create an end-to-end automation framework that helps us in building an effective continuous integration and continuous development (CI\u002FCD) DevOps pipeline.\u003C\u002Fp\u003E\n\n\u003Cp\u003EEach component in a step function is called a state machine. In this part, we will be creating multiple state machines, as follows:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EState machine for training a model\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EState machine for saving the model\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EState machine for configuring endpoints\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EState machine for model deployment\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EThen we will combine all the state machines in a sequential format so that the entire process can be automated. \u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--a_ZLBeSb--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122373789-102c1080-cf62-11eb-96af-e86e1659e6dc.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--a_ZLBeSb--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122373789-102c1080-cf62-11eb-96af-e86e1659e6dc.png\" alt=\"1\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ELet’s start the process of creating the previous workflow. The first step will be to upgrade the Step Functions package so that we can make sure we are using the latest version of the module.\u003C\u002Fp\u003E\n\u003Ch2\u003E\n  \u003Ca name=\"upgrading-step-functions\" href=\"#upgrading-step-functions\"\u003E\n  \u003C\u002Fa\u003E\n  Upgrading Step Functions\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWe will simply use pip from Python to upgrade the Step Functions package and all the dependent packages.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Epython \u003Cspan class=\"nt\"\u003E-m\u003C\u002Fspan\u003E pip \u003Cspan class=\"nb\"\u003Einstall\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E--upgrade\u003C\u002Fspan\u003E stepfunctions\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EYou can run this either from the terminal or from the Jupyter Notebook as well by adding a prefix of exclamation mark (!).\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"defining-the-required-parameters\" href=\"#defining-the-required-parameters\"\u003E\n  \u003C\u002Fa\u003E\n  Defining the Required Parameters\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ELet’s now define the required objects that we will use to run our code. This includes the roles, region, bucket, etc.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Eboto3\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Esagemaker\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Etime\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Erandom\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Euuid\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Elogging\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Eio\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Erandom\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Esagemaker.amazon.amazon_estimator\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eget_image_uri\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions.steps\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETrainingStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EModelStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETransformStep\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions.inputs\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EExecutionInput\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions.workflow\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EWorkflow\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions.template\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETrainingPipeline\u003C\u002Fspan\u003E\n\u003Cspan class=\"kn\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"nn\"\u003Estepfunctions.template.utils\u003C\u002Fspan\u003E \u003Cspan class=\"kn\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereplace_parameters_with_jsonpath\u003C\u002Fspan\u003E\n\n\n\u003Cspan class=\"n\"\u003Esagemaker_execution_role\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esagemaker\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget_execution_role\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eworkflow_execution_role\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E\"arn:aws:iam::809912564797:role\u002F&lt;&lt;your name&gt;&gt;-step-functions\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Esession\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esagemaker\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESession\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Estepfunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eset_stream_logger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elevel\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Elogging\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EINFO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Eregion\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eboto3\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESession\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eregion_name\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eprefix\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'sagemaker\u002Fbig-mart-pipeline'\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003Ebucket_path\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'https:\u002F\u002Fs3-{}.amazonaws.com\u002F{}'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eregion\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E\"slytherins-test\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see in the code, we require two roles. One is the SageMaker execution role, and the second is the workflow execution role. In the next section, we will see how to define the role for workflow execution. In addition, we have created a SageMaker session and defined the region and S3 bucket location. We have also set the Step Functions logger so that whatever important messages are there, we will not miss them.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow let’s see how we can create the required IAM role for workflow execution.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"setting-up-the-required-roles\" href=\"#setting-up-the-required-roles\"\u003E\n  \u003C\u002Fa\u003E\n  Setting Up the Required Roles\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWe need to set up two things to be able to execute the workflow:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EWe need to add a policy on the already existing SageMaker role.\u003C\u002Fli\u003E\n\u003Cli\u003EWe need to create a new Step Functions IAM role.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"adding-a-policy-to-the-existing-sagemaker-role\" href=\"#adding-a-policy-to-the-existing-sagemaker-role\"\u003E\n  \u003C\u002Fa\u003E\n  Adding a Policy to the Existing SageMaker Role\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIt’s easy to update the policy so that it can access the features of Step Functions. In the SageMaker console, we need to click the name of the notebook instance that we are using. This will lead us to a page showing the properties of the notebook instance.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn that page there will be a section named “Permissions and encryption.” There you will find your ARN role mentioned for the instance.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xxG_mVvI--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375345-6e0d2800-cf63-11eb-868b-4cecd1574393.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--xxG_mVvI--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375345-6e0d2800-cf63-11eb-868b-4cecd1574393.png\" alt=\"1\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EOnce you click that role, you’ll move to the IAM role for that ARN. On that page, you’ll need to click Attach Policies and search for AWSStepFunctionsFullAccess. Attach this policy, and now your SageMaker instance is ready to use Step Functions.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--gwkQF-2u--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375462-88470600-cf63-11eb-8b54-3c8180456994.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--gwkQF-2u--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375462-88470600-cf63-11eb-8b54-3c8180456994.png\" alt=\"2\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"creating-a-new-iam-role-for-step-functions\" href=\"#creating-a-new-iam-role-for-step-functions\"\u003E\n  \u003C\u002Fa\u003E\n  Creating a New IAM Role for Step Functions\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EOnce we are done with enabling the instance to execute a Step Functions job, we need to create an execution role so that Step Functions is able to execute the jobs that are created. For this, again we need to go to the IAM console and create this role. Go to the IAM console, go to the Roles section, and then click “Create role.”\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ai6FD0MD--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375821-deb44480-cf63-11eb-8cd1-6f08204a8082.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ai6FD0MD--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375821-deb44480-cf63-11eb-8cd1-6f08204a8082.png\" alt=\"4\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ESelect the Step Functions service. You may need to search for the service.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--UzKVbwn0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375852-e378f880-cf63-11eb-8034-73486273e809.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--UzKVbwn0--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375852-e378f880-cf63-11eb-8034-73486273e809.png\" alt=\"3\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow, continue the process and keep clicking Next until you arrive at the section where you need to provide the role name. Give any role name you want and then click “Create role.” Next, once we have created the role, we need to attach a policy to it. Here we will list all the services that the Step Functions service is allowed to do. We provide this list in JSON format.\u003C\u002Fp\u003E\n\n\u003Cp\u003EClick the role that you have just created, and then in the Permissions section click “Add inline policy.”\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--rZ6Nq1ka--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122376154-2fc43880-cf64-11eb-983d-c47886c7b720.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--rZ6Nq1ka--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122376154-2fc43880-cf64-11eb-983d-c47886c7b720.png\" alt=\"5\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere, you need to add a JSON file on the JSON tab. The file contents are shown here:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Version\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"2012-10-17\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Statement\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n      \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Effect\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Allow\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Action\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateTransformJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:DescribeTransformJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:StopTransformJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateTrainingJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:DescribeTrainingJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:StopTrainingJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateHyperParameterTuningJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:DescribeHyperParameterTuningJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:StopHyperParameterTuningJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateModel\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateEndpointConfig\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:CreateEndpoint\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:DeleteEndpointConfig\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:DeleteEndpoint\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:UpdateEndpoint\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker:ListTags\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"lambda:InvokeFunction\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sqs:SendMessage\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sns:Publish\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"ecs:RunTask\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"ecs:StopTask\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"ecs:DescribeTasks\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"dynamodb:GetItem\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"dynamodb:PutItem\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"dynamodb:UpdateItem\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"dynamodb:DeleteItem\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"batch:SubmitJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"batch:DescribeJobs\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"batch:TerminateJob\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"glue:StartJobRun\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"glue:GetJobRun\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"glue:GetJobRuns\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"glue:BatchStopJobRun\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Resource\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"*\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n     \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n     \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Effect\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Allow\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Action\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"iam:PassRole\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n       \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Resource\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"*\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n          \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Condition\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"StringEquals\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n               \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"iam:PassedToService\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"sagemaker.amazonaws.com\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n      \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \n      \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Effect\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Allow\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Action\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"events:PutTargets\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"events:PutRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n            \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"events:DescribeRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n         \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"Resource\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTrainingJobsRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTransformJobsRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTuningJobsRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForECSTaskRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n           \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForBatchJobsRule\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n          \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n      \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n   \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\n\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce that’s done, you can review the policy, give it a name, and then create the policy. Don’t forget to copy the ARN number of the policy you just created. This will help you when creating code in SageMaker.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"setting-up-the-training-step\" href=\"#setting-up-the-training-step\"\u003E\n  \u003C\u002Fa\u003E\n  Setting Up the Training Step\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn the previous section, we completed all the necessary configuration steps to run our code to create a pipeline. In this section, we will create the first step: TrainingStep. The first thing that we will do is to create a dictionary that will auto-initialize the training job name, the model name, and the endpoint name. We can do so using the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Enames\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"s\"\u003E'JobName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Estr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E'EndpointName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Estr\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EExecutionInput\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eschema\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Enames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENext, we will create a training step by using the XGBoost container that we already learned about in the previous parts. The first step will be to initialize the container.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Etree\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eestimator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEstimator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eimage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Esagemaker_execution_role\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'ml.m4.xlarge'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Eoutput_path\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"s3:\u002F\u002F{}\u002Foutput\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"slytherins-test\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Esagemaker_session\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esess\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENext, we need to create the training step. This is done by providing the path to the input training and validation data.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Etraining_step\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETrainingStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E'Train Step'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eestimator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etree\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"s\"\u003E'train'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esagemaker\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es3_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"s3:\u002F\u002Fslytherins-test\u002FTrain.csv\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Econtent_type\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'text\u002Fcsv'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n        \u003Cspan class=\"s\"\u003E'validation'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esagemaker\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es3_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"s3:\u002F\u002Fslytherins-test\u002Ftest_data.csv\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Econtent_type\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'text\u002Fcsv'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Ejob_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'JobName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ERemember, this will not execute the model. Only a step is created here. First, we will create all the steps and then combine them and run them sequentially. Let’s now decide on the step for saving the model. Once in the pipeline, the previous training is finished, and the model artifacts that are generated should be saved. That is done using the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\u003Cspan class=\"n\"\u003Emodel_step\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EModelStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E'Save model'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Emodel\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Etraining_step\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eget_expected_model\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Emodel_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"setting-up-the-endpoint-configuration-step\" href=\"#setting-up-the-endpoint-configuration-step\"\u003E\n  \u003C\u002Fa\u003E\n  Setting Up the Endpoint Configuration Step\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn this step, we will define what kind of resources are required to deploy the endpoint.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eendpoint_config_step\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEndpointConfigStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E\"Create Endpoint Config\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eendpoint_config_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Emodel_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Einitial_instance_count\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Einstance_type\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'ml.m4.xlarge'\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce our configuration is done, we will create the step that will actually deploy the endpoint. Let’s see that in the next section.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"setting-up-the-endpoint-step\" href=\"#setting-up-the-endpoint-step\"\u003E\n  \u003C\u002Fa\u003E\n  Setting Up the Endpoint Step\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe following code creates a step that is used for the endpoint deployment:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eendpoint_step\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEndpointStep\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"s\"\u003E\"Create Endpoint\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eendpoint_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'EndpointName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eendpoint_config_name\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce the endpoint is deployed, we can start the inference as we saw in the previous sections. Let's join (chain) them together. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"creating-a-chain-of-the-steps\" href=\"#creating-a-chain-of-the-steps\"\u003E\n  \u003C\u002Fa\u003E\n  Creating a Chain of the Steps\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ETo create a chain, we will start with the training step, then move on to the model saving step, then configure the endpoint, and finally deploy the model on the endpoint configured. We can create this chain using the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eworkflow_definition\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esteps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EChain\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E([\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Etraining_step\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Emodel_step\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eendpoint_config_step\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eendpoint_step\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E])\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch2\u003E\n  \u003Ca name=\"defining-the-workflow-and-starting-operation\" href=\"#defining-the-workflow-and-starting-operation\"\u003E\n  \u003C\u002Fa\u003E\n  Defining the Workflow and Starting Operation\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENow that the components are connected in the previous step, we need to provide all the necessary configurations so that this workflow can be executed. This can be done using the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eworkflow\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EWorkflow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E'Big-Mart_Workflow-v1'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Edefinition\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eworkflow_definition\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Erole\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eworkflow_execution_role\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecution_input\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOnce this is done, all we need to do is execute the workflow created. This can be done by using the following code:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eworkflow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003Eexecution\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eworkflow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eexecute\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Einputs\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"s\"\u003E'JobName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'regression-{}'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Ehex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n      \u003Cspan class=\"s\"\u003E'ModelName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'regression-{}'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Ehex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n      \u003Cspan class=\"s\"\u003E'EndpointName'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E'regression-{}'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euuid1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003Ehex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow, as you execute the previous code, the entire pipeline starts running. To see how the pipeline looks, you can use the render_graph() function.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eworkflow\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erender_graph\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--RMPTSb9j--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437428-fdcdc900-cf99-11eb-9767-6ec91e344730.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--RMPTSb9j--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437428-fdcdc900-cf99-11eb-9767-6ec91e344730.png\" alt=\"1\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can also check the current progress of the process executed, by using the render_progress() function.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight python\"\u003E\u003Ccode\u003E\n\u003Cspan class=\"n\"\u003Eexecution\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Erender_progress\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--OhYdjefa--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437690-3a99c000-cf9a-11eb-9833-09bd360386bb.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--OhYdjefa--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437690-3a99c000-cf9a-11eb-9833-09bd360386bb.png\" alt=\"1\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn this part, you learned how to create an end-to-end pipeline using Step Functions. \u003C\u002Fp\u003E\n\n\u003Cp\u003EThis is useful when creating the entire training and deployment process and when retraining models with the new data or with some new configuration.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis also helps in creating a CI\u002FCD pipeline where we can push the code to Git and then use tools such as Jenkins or Bamboo to create these step functions and start the execution.\u003C\u002Fp\u003E\n\n\u003Cp\u003EHence, as you push to code to Git, immediately the process of training starts. That’s the power of creating a pipeline.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"references\" href=\"#references\"\u003E\n  \u003C\u002Fa\u003E\n  References:\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EBook: Practical ML With AWS\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 1: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fintro-to-amazon-sagemaker-3gp5\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fintro-to-amazon-sagemaker-3gp5\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 2: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fdata-processing-in-aws-sagemaker-20gi\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fdata-processing-in-aws-sagemaker-20gi\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 3: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-a-machine-learning-model-using-linear-learner-3p7c\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-a-machine-learning-model-using-linear-learner-3p7c\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 4: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-blazing-text-model-in-aws-sagemaker-1lca\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-blazing-text-model-in-aws-sagemaker-1lca\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 5: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-image-classification-in-aws-sagemaker-4l4e\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-image-classification-in-aws-sagemaker-4l4e\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 6: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fsalah856\u002Fbuilding-seqtoseq-model-in-aws-sagemaker-4m22\"\u003Ehttps:\u002F\u002Fdev.to\u002Fsalah856\u002Fbuilding-seqtoseq-model-in-aws-sagemaker-4m22\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 7: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fusing-cloudwatch-in-sagemaker-pm7\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fusing-cloudwatch-in-sagemaker-pm7\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 8: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Frunning-custom-algorithm-in-aws-sagemaker-4jdf\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Frunning-custom-algorithm-in-aws-sagemaker-4jdf\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EPart 9: \u003Ca href=\"https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-end-to-end-pipeline-in-sagemaker-2g03\"\u003Ehttps:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-end-to-end-pipeline-in-sagemaker-2g03\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"In this part, we will see how we can make an end-to-end pipeline of an entire machine learning process. We can use a combination of AWS services to automate the entire process of machine learning.\n\n\n## Overview of Step Functions\n\nAWS Step Functions is the service provided by Amazon that you can use to create workflows and automate them. These workflows consist of AWS resources, algorithms,\nand processing. They may also include resources that are outside AWS. We can use Step Functions to create an end-to-end automation framework that helps us in building an effective continuous integration and continuous development (CI\u002FCD) DevOps pipeline.\n\nEach component in a step function is called a state machine. In this part, we will be creating multiple state machines, as follows:\n\n- State machine for training a model\n- State machine for saving the model\n\n- State machine for configuring endpoints\n- State machine for model deployment\n\n\nThen we will combine all the state machines in a sequential format so that the entire process can be automated. \n\n![1](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122373789-102c1080-cf62-11eb-96af-e86e1659e6dc.png)\n\n\nLet’s start the process of creating the previous workflow. The first step will be to upgrade the Step Functions package so that we can make sure we are using the latest version of the module.\n\n## Upgrading Step Functions\n\nWe will simply use pip from Python to upgrade the Step Functions package and all the dependent packages.\n\n```sh\npython -m pip install --upgrade stepfunctions\n```\n\nYou can run this either from the terminal or from the Jupyter Notebook as well by adding a prefix of exclamation mark (!).\n\n\n## Defining the Required Parameters\n\nLet’s now define the required objects that we will use to run our code. This includes the roles, region, bucket, etc.\n\n```py\n\nimport boto3\nimport sagemaker\nimport time\nimport random\nimport uuid\n\nimport logging\nimport stepfunctions\nimport io\nimport random\n\nfrom sagemaker.amazon.amazon_estimator import get_image_uri\nfrom stepfunctions import steps\nfrom stepfunctions.steps import TrainingStep, ModelStep, TransformStep\n\nfrom stepfunctions.inputs import ExecutionInput\nfrom stepfunctions.workflow import Workflow\n\nfrom stepfunctions.template import TrainingPipeline\nfrom stepfunctions.template.utils import replace_parameters_with_jsonpath\n\n\nsagemaker_execution_role = sagemaker.get_execution_role()\n\nworkflow_execution_role = \"arn:aws:iam::809912564797:role\u002F\u003C\u003Cyour name\u003E\u003E-step-functions\"\n\nsession = sagemaker.Session()\nstepfunctions.set_stream_logger(level=logging.INFO)\nregion = boto3.Session().region_name\n\nprefix = 'sagemaker\u002Fbig-mart-pipeline'\nbucket_path = 'https:\u002F\u002Fs3-{}.amazonaws.com\u002F{}'.format(region, \"slytherins-test\")\n\n\n```\n\n\nAs you can see in the code, we require two roles. One is the SageMaker execution role, and the second is the workflow execution role. In the next section, we will see how to define the role for workflow execution. In addition, we have created a SageMaker session and defined the region and S3 bucket location. We have also set the Step Functions logger so that whatever important messages are there, we will not miss them.\n\nNow let’s see how we can create the required IAM role for workflow execution.\n\n\n## Setting Up the Required Roles\n\nWe need to set up two things to be able to execute the workflow:\n\n1. We need to add a policy on the already existing SageMaker role.\n2. We need to create a new Step Functions IAM role.\n\n\n### Adding a Policy to the Existing SageMaker Role\n\nIt’s easy to update the policy so that it can access the features of Step Functions. In the SageMaker console, we need to click the name of the notebook instance that we are using. This will lead us to a page showing the properties of the notebook instance.\n\nIn that page there will be a section named “Permissions and encryption.” There you will find your ARN role mentioned for the instance.\n\n\n![1](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375345-6e0d2800-cf63-11eb-868b-4cecd1574393.png)\n\n\nOnce you click that role, you’ll move to the IAM role for that ARN. On that page, you’ll need to click Attach Policies and search for AWSStepFunctionsFullAccess. Attach this policy, and now your SageMaker instance is ready to use Step Functions.\n\n\n![2](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375462-88470600-cf63-11eb-8b54-3c8180456994.png)\n\n\n### Creating a New IAM Role for Step Functions\n\nOnce we are done with enabling the instance to execute a Step Functions job, we need to create an execution role so that Step Functions is able to execute the jobs that are created. For this, again we need to go to the IAM console and create this role. Go to the IAM console, go to the Roles section, and then click “Create role.”\n\n![4](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375821-deb44480-cf63-11eb-8cd1-6f08204a8082.png)\n\n\nSelect the Step Functions service. You may need to search for the service.\n\n![3](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122375852-e378f880-cf63-11eb-8034-73486273e809.png)\n\n\nNow, continue the process and keep clicking Next until you arrive at the section where you need to provide the role name. Give any role name you want and then click “Create role.” Next, once we have created the role, we need to attach a policy to it. Here we will list all the services that the Step Functions service is allowed to do. We provide this list in JSON format.\n\n\nClick the role that you have just created, and then in the Permissions section click “Add inline policy.”\n\n\n![5](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122376154-2fc43880-cf64-11eb-983d-c47886c7b720.png)\n\n\nHere, you need to add a JSON file on the JSON tab. The file contents are shown here:\n\n```json\n\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n      {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n           \"sagemaker:CreateTransformJob\",\n           \"sagemaker:DescribeTransformJob\",\n           \n           \"sagemaker:StopTransformJob\",\n           \"sagemaker:CreateTrainingJob\",\n           \"sagemaker:DescribeTrainingJob\",\n           \n           \"sagemaker:StopTrainingJob\",\n           \"sagemaker:CreateHyperParameterTuningJob\",\n           \n           \"sagemaker:DescribeHyperParameterTuningJob\",\n           \"sagemaker:StopHyperParameterTuningJob\",\n           \n           \"sagemaker:CreateModel\",\n           \"sagemaker:CreateEndpointConfig\",\n           \n           \"sagemaker:CreateEndpoint\",\n           \"sagemaker:DeleteEndpointConfig\",\n           \n           \"sagemaker:DeleteEndpoint\",\n           \"sagemaker:UpdateEndpoint\",\n           \"sagemaker:ListTags\",\n           \n           \"lambda:InvokeFunction\",\n           \"sqs:SendMessage\",\n           \"sns:Publish\",\n           \n           \"ecs:RunTask\",\n           \"ecs:StopTask\",\n           \n           \"ecs:DescribeTasks\",\n           \"dynamodb:GetItem\",\n           \n           \"dynamodb:PutItem\",\n           \"dynamodb:UpdateItem\",\n           \n           \"dynamodb:DeleteItem\",\n           \"batch:SubmitJob\",\n           \"batch:DescribeJobs\",\n           \n           \"batch:TerminateJob\",\n           \"glue:StartJobRun\",\n           \n           \"glue:GetJobRun\",\n           \"glue:GetJobRuns\",\n           \"glue:BatchStopJobRun\"\n            ],\n         \"Resource\": \"*\"\n     },\n     {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n            \"iam:PassRole\"\n       ],\n         \"Resource\": \"*\",\n          \"Condition\": {\n            \"StringEquals\": {\n               \"iam:PassedToService\": \"sagemaker.amazonaws.com\"\n            }\n         }\n      }, \n      {\n         \"Effect\": \"Allow\",\n         \"Action\": [\n            \"events:PutTargets\",\n            \"events:PutRule\",\n            \"events:DescribeRule\"\n         ],\n         \"Resource\": [\n           \n           \"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTrainingJobsRule\",\n           \"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTransformJobsRule\",\n           \"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForSageMakerTuningJobsRule\",\n           \n           \"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForECSTaskRule\",\n           \"arn:aws:events:*:*:rule\u002FStepFunctionsGetEventsForBatchJobsRule\"\n          \n          ]\n      }\n   ]\n}\n\n\n```\n\nOnce that’s done, you can review the policy, give it a name, and then create the policy. Don’t forget to copy the ARN number of the policy you just created. This will help you when creating code in SageMaker.\n\n\n## Setting Up the Training Step\n\nIn the previous section, we completed all the necessary configuration steps to run our code to create a pipeline. In this section, we will create the first step: TrainingStep. The first thing that we will do is to create a dictionary that will auto-initialize the training job name, the model name, and the endpoint name. We can do so using the following code:\n\n\n```py\n\nnames = {\n\n    'JobName': str,\n    'ModelName': str,\n    'EndpointName': str\n\n}\n\nexecution_input = ExecutionInput(schema=names)\n\n```\n\n\nNext, we will create a training step by using the XGBoost container that we already learned about in the previous parts. The first step will be to initialize the container.\n\n```py\n\ntree = sage.estimator.Estimator(image,\n            sagemaker_execution_role, 1, 'ml.m4.xlarge',\n            output_path=\"s3:\u002F\u002F{}\u002Foutput\".format(\"slytherins-test\"),\n            sagemaker_session=sess)\n            \n```\n\nNext, we need to create the training step. This is done by providing the path to the input training and validation data.\n\n```py\n\ntraining_step = steps.TrainingStep(\n    'Train Step',\n    estimator=tree,\n    data={\n        'train': sagemaker.s3_input(\"s3:\u002F\u002Fslytherins-test\u002FTrain.csv\", content_type='text\u002Fcsv'),\n        'validation': sagemaker.s3_input(\"s3:\u002F\u002Fslytherins-test\u002Ftest_data.csv\", content_type='text\u002Fcsv')\n    },\n    job_name=execution_input['JobName']\n)\n```\n\n\nRemember, this will not execute the model. Only a step is created here. First, we will create all the steps and then combine them and run them sequentially. Let’s now decide on the step for saving the model. Once in the pipeline, the previous training is finished, and the model artifacts that are generated should be saved. That is done using the following code:\n\n\n```py\nmodel_step = steps.ModelStep(\n    'Save model',\n    model=training_step.get_expected_model(),\n    model_name=execution_input['ModelName']\n)\n\n```\n\n## Setting Up the Endpoint Configuration Step\n\nIn this step, we will define what kind of resources are required to deploy the endpoint.\n\n\n```py\n\nendpoint_config_step = steps.EndpointConfigStep(\n    \"Create Endpoint Config\",\n    endpoint_config_name=execution_input['ModelName'],\n    model_name=execution_input['ModelName'],\n    initial_instance_count=1,\n    instance_type='ml.m4.xlarge'\n)\n\n```\n\nOnce our configuration is done, we will create the step that will actually deploy the endpoint. Let’s see that in the next section.\n\n\n## Setting Up the Endpoint Step\n\nThe following code creates a step that is used for the endpoint deployment:\n\n```py\n\nendpoint_step = steps.EndpointStep(\n    \"Create Endpoint\",\n    endpoint_name=execution_input['EndpointName'],\n    endpoint_config_name=execution_input['ModelName']\n)\n\n```\n\nOnce the endpoint is deployed, we can start the inference as we saw in the previous sections. Let's join (chain) them together. \n\n\n## Creating a Chain of the Steps\n\nTo create a chain, we will start with the training step, then move on to the model saving step, then configure the endpoint, and finally deploy the model on the endpoint configured. We can create this chain using the following code:\n\n\n```py\n\nworkflow_definition = steps.Chain([\n    training_step,\n    model_step,\n    endpoint_config_step,\n    endpoint_step\n])\n\n```\n\n## Defining the Workflow and Starting Operation\nNow that the components are connected in the previous step, we need to provide all the necessary configurations so that this workflow can be executed. This can be done using the following code:\n\n```py\n\nworkflow = Workflow(\n    name='Big-Mart_Workflow-v1',\n    definition=workflow_definition,\n    role=workflow_execution_role,\n    execution_input=execution_input\n)\n\n```\n\nOnce this is done, all we need to do is execute the workflow created. This can be done by using the following code:\n\n```py\n\nworkflow.create()\n\nexecution = workflow.execute(\n    inputs={\n      'JobName': 'regression-{}'.format(uuid.uuid1().hex),\n      'ModelName': 'regression-{}'.format(uuid.uuid1().hex),\n      'EndpointName': 'regression-{}'.format(uuid.uuid1().hex)\n    }\n)\n\n```\n\nNow, as you execute the previous code, the entire pipeline starts running. To see how the pipeline looks, you can use the render_graph() function.\n\n```python\n\nworkflow.render_graph()\n\n```\n\n\n![1](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437428-fdcdc900-cf99-11eb-9767-6ec91e344730.png)\n\n\nYou can also check the current progress of the process executed, by using the render_progress() function.\n\n```python\n\nexecution.render_progress()\n\n```\n\n![1](https:\u002F\u002Fuser-images.githubusercontent.com\u002F23625821\u002F122437690-3a99c000-cf9a-11eb-9833-09bd360386bb.png)\n\n\n## Conclusion\n\nIn this part, you learned how to create an end-to-end pipeline using Step Functions. \n\nThis is useful when creating the entire training and deployment process and when retraining models with the new data or with some new configuration.\n\nThis also helps in creating a CI\u002FCD pipeline where we can push the code to Git and then use tools such as Jenkins or Bamboo to create these step functions and start the execution.\n\nHence, as you push to code to Git, immediately the process of training starts. That’s the power of creating a pipeline.\n\n### References: \n\nBook: Practical ML With AWS\n\nPart 1: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fintro-to-amazon-sagemaker-3gp5\n\nPart 2: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fdata-processing-in-aws-sagemaker-20gi\n\nPart 3: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-a-machine-learning-model-using-linear-learner-3p7c\n\nPart 4: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-blazing-text-model-in-aws-sagemaker-1lca\n\nPart 5: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-deploying-image-classification-in-aws-sagemaker-4l4e\n\nPart 6: https:\u002F\u002Fdev.to\u002Fsalah856\u002Fbuilding-seqtoseq-model-in-aws-sagemaker-4m22\n\nPart 7: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fusing-cloudwatch-in-sagemaker-pm7\n\nPart 8: https:\u002F\u002Fdev.to\u002Faws-builders\u002Frunning-custom-algorithm-in-aws-sagemaker-4jdf\n\nPart 9: https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-end-to-end-pipeline-in-sagemaker-2g03",user:{name:"Salah Elhossiny",username:"salah856",twitter_username:"salahelhossiny0",github_username:"Salah856",website_url:a,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jd8xOp8c--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F218767\u002F87b9f6ef-df4e-4b44-a461-42ca5f2fe16e.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--g8Duh969--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F218767\u002F87b9f6ef-df4e-4b44-a461-42ca5f2fe16e.jpg"},organization:{name:"AWS Community Builders ",username:e,slug:e,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--zmOZQNzv--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2794\u002F88da75b6-aadd-4ea1-8083-ae2dfca8be94.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--vWmcJ-ty--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Forganization\u002Fprofile_image\u002F2794\u002F88da75b6-aadd-4ea1-8083-ae2dfca8be94.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Fsalah856\u002F731297",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-06-17T16:37:47Z","https:\u002F\u002Fdev.to\u002Faws-builders\u002Fbuilding-end-to-end-pipeline-in-sagemaker-2g03",15,"aws-builders"));