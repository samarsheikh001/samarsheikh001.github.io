window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:555935,title:"Understanding GraphQL through REST\n",description:"In order to understand why GraphQL is continuing to gain attention, it is increasingly helpful to und...",readable_publish_date:"Dec 30 '20",slug:"understanding-graphql-through-rest-57c0",path:"\u002Fkeonik\u002Funderstanding-graphql-through-rest-57c0",url:b,comments_count:2,public_reactions_count:c,collection_id:a,published_timestamp:d,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--_W7DwgXd--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fvwccitnaengam2swpz0r.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--nZE6MaoO--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fvwccitnaengam2swpz0r.png",canonical_url:b,created_at:"2020-12-29T22:55:29Z",edited_at:"2021-01-08T06:04:12Z",crossposted_at:a,published_at:d,last_comment_at:"2021-01-01T08:02:04Z",reading_time_minutes:8,tag_list:"graphql, rest, api",tags:["graphql","rest","api"],body_html:"\u003Cp\u003EIn order to understand why GraphQL is continuing to gain attention, it is increasingly helpful to understand what it was intended to improve upon. One of the beauties of Software Engineering is the constant desire to improve upon what was provided to us. GraphQL tries to do this with REST. By the end, you will have examples of REST API(Application Programming Interface) endpoints, how GraphQL queries relate to those REST endpoints, and why GraphQL exists. Let's get started.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Ex8pMWxx--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FUUgTEncAfGQIcNmAk8\u002Fgiphy.gif%3Fcid%3Decf05e47blkk5oc2hbf7aukhtxovwedemfeq79got7wbm1qn%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Ex8pMWxx--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FUUgTEncAfGQIcNmAk8\u002Fgiphy.gif%3Fcid%3Decf05e47blkk5oc2hbf7aukhtxovwedemfeq79got7wbm1qn%26rid%3Dgiphy.gif\" alt=\"Let's get started\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"understanding-rest\" href=\"#understanding-rest\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Understanding REST\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fwww.codecademy.com\u002Farticles\u002Fwhat-is-rest\"\u003EREST\u003C\u002Fa\u003E stands for REpresentational State Transfer.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--BOyVvr2K--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FZB95y3XSFbljaNu7mT\u002Fgiphy.gif%3Fcid%3D6104955e9ed767b058c292236c53e3e34fbac5473c9869c9%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--BOyVvr2K--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FZB95y3XSFbljaNu7mT\u002Fgiphy.gif%3Fcid%3D6104955e9ed767b058c292236c53e3e34fbac5473c9869c9%26rid%3Dgiphy.gif\" alt=\"Holy forking shirt balls - The Good Place\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis architecture is known for being \u003Ccode\u003Estateless\u003C\u002Fcode\u003E and able to \u003Ccode\u003Eseparate concern between client and server\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"stateless\" href=\"#stateless\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Stateless\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EStateless in this sense means the server does not need to know what the state of the client is to execute an action.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"separation-of-concern\" href=\"#separation-of-concern\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Separation of Concern\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EClient and server separations allow for developers to change the server without it affecting the client-side code and vice versa.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"communication\" href=\"#communication\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Communication\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhen comparisons come into play with other API specifications, what actually makes REST unique is how the client and server communicate. REST was developed alongside HTTP(Hypertext Protocol Transfer) 1.1 back in the late '90s. Because of this, REST was able to leverage the benefits of HTTP. To illustrate the communication I'll be using a generic model with genres and books.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1jiFcSS1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fffbs4clud3wiecco8v9w.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1jiFcSS1--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fffbs4clud3wiecco8v9w.png\" alt=\"1 Genre to Many Books\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe will review receiving and updating a data source through a REST API.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"receiving-information-from-a-rest-api\" href=\"#receiving-information-from-a-rest-api\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Receiving Information from a REST API\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EGET \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhen a client visits this endpoint they will be returned a list of genres.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"name\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Mystery\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"name\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Romance\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESimilar to genres, books would be the exact same\u003C\u002Fp\u003E\n\n\u003Cp\u003EGET \u003Ccode\u003E\u002Fbooks\u003C\u002Fcode\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"The lost man\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"author\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Jane Harper\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fjh-tlm.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"And then there were none\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"author\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Agatha Christie\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fac-attwn.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see, this is a very predictable and scalable process. If our model above changed to include another model such as \u003Ccode\u003ELibraries\u003C\u002Fcode\u003E, we could easily add-in that endpoint and keep chugging along.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"crud-operations-in-rest\" href=\"#crud-operations-in-rest\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  CRUD Operations in REST\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIn creating a service to handle CRUD(create, replace, update, and destroy) operations we would create the following\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EPOST \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ECreate a new genre\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EPUT \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EUpdate an existing genre\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EDELETE \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ERemove or delete an existing genre\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn REST API development taking advantage of the HTTP methods provided makes communicating with these available endpoints very predictable.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"summary\" href=\"#summary\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Summary\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe general idea behind REST API's is to make everything an endpoint. If you need to add or remove pieces of information from a request to take the load away from your client's browser, you can easily do so without giving the client too much knowledge of what is going on behind the scenes. Above all, REST aims to be fast, reliable, and predictable while taking advantage of all HTTP.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JJEBMoOT--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKeWcgrh6Beq4BrqZUS\u002Fgiphy.gif%3Fcid%3Decf05e4754lccuuklczptrovt9uccflhodlo89dqifsb59un%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--JJEBMoOT--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKeWcgrh6Beq4BrqZUS\u002Fgiphy.gif%3Fcid%3Decf05e4754lccuuklczptrovt9uccflhodlo89dqifsb59un%26rid%3Dgiphy.gif\" alt=\"Laughing\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"what-is-graphql\" href=\"#what-is-graphql\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  What is GraphQL?\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fgraphql.org\u002F\"\u003EGraphQL\u003C\u002Fa\u003E is a language for querying an API. Not enough? Don't worry, more is coming.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--v9ZLnzVs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002F2fTOT5PhBUdJbDeVLH\u002Fgiphy.gif%3Fcid%3Decf05e477hp9tnjikw8s3z66omn0vvuy6xqunj3zcf3yf8uf%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--v9ZLnzVs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002F2fTOT5PhBUdJbDeVLH\u002Fgiphy.gif%3Fcid%3Decf05e477hp9tnjikw8s3z66omn0vvuy6xqunj3zcf3yf8uf%26rid%3Dgiphy.gif\" alt=\"This broke me\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EContrary to REST API's, GraphQL provides one HTTP endpoint and an \u003Ccode\u003Eunderstandable description of the data available\u003C\u002Fcode\u003E through \u003Ccode\u003Etype specification\u003C\u002Fcode\u003E. This gives the client the ability to \u003Ccode\u003Erequest what they need and nothing more\u003C\u002Fcode\u003E. This query language is much closer to the data sources giving the frontend developers more access to available models and relationships between them. With that, they are able to \u003Ccode\u003Eget many resources in a single request\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"type-specification-and-self-documentation\" href=\"#type-specification-and-self-documentation\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Type Specification and Self Documentation\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EInstead of REST endpoints returning different return types per endpoint, GraphQL relies on types and fields to tell your client what is possible.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Etype Query {\n  books: [Book]\n  genres: [Genre]\n}\n\ntype Book {\n  id: Int\n  title: String\n  author: String\n  img: String\n}\n\ntype Genre {\n  id: Int\n  name: String\n  books: [Book]\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWith this, anyone needing the API to develop client-side code can reference developer tooling to see all the possible queries thanks to the type specifications and self-documenting.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--T9QoL6Ab--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia4.giphy.com\u002Fmedia\u002F3o7WIJtCve3cNZKhRC\u002Fgiphy.gif%3Fcid%3Decf05e47idcs10z45ee46p6nhik8fa0pmjpyglskgbq04q8z%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--T9QoL6Ab--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia4.giphy.com\u002Fmedia\u002F3o7WIJtCve3cNZKhRC\u002Fgiphy.gif%3Fcid%3Decf05e47idcs10z45ee46p6nhik8fa0pmjpyglskgbq04q8z%26rid%3Dgiphy.gif\" alt=\"Hot diggity dog!\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"request-what-is-needed-and-nothing-more\" href=\"#request-what-is-needed-and-nothing-more\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Request What is Needed and Nothing More\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn our genres and books data source, when we request a book we will always get all available keys.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"The lost man\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"author\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Jane Harper\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fjh-tlm.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"id\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"And then there were none\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"author\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"Agatha Christie\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fac-attwn.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWith GraphQL we can add and remove keys to format only the data needed on the frontend. Let's say, for example, we are creating a page that only wants the title and image we could create a query to do so.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Equery {\n  books {\n    title\n    img\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis would return the same result without the \u003Ccode\u003Eauthor\u003C\u002Fcode\u003E and \u003Ccode\u003Eid\u003C\u002Fcode\u003E keys.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight json\"\u003E\u003Ccode\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"The lost man\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fjh-tlm.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"title\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"And then there were none\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n    \u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003E\"img\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E \u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E\"\u002Fimg\u002Fac-attwn.png\"\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n  \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"w\"\u003E\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3kLpJvRs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FxThtalkAxYnZd94uB2\u002Fgiphy.gif%3Fcid%3Decf05e47ka7zh7pxst7qvt4i4b7mepgmlkxea0yumhxtgptz%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--3kLpJvRs--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FxThtalkAxYnZd94uB2\u002Fgiphy.gif%3Fcid%3Decf05e47ka7zh7pxst7qvt4i4b7mepgmlkxea0yumhxtgptz%26rid%3Dgiphy.gif\" alt=\"Now here we go\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"get-many-resources-in-a-single-request\" href=\"#get-many-resources-in-a-single-request\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Get many resources in a single request\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn the above REST example, if we wanted to get both genres and books we would have a few options.\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EMake multiple requests to \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fbooks\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThis would force the client-side to resolve these relationships itself.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Col\u003E\n\u003Cli\u003EAdd books relationship into the \u003Ccode\u003E\u002Fgenres\u003C\u002Fcode\u003E endpoint.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThe only negative to this would be now anytime you want to fetch genres you are forced to also include books with it which is a problem of over-fetching as referenced above.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Col\u003E\n\u003Cli\u003EMake a new endpoint or add an option that would allow fetching of both genres and books.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThis is most common because it will not interfere with existing frontend applications connected to your API.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EInstead of planning the relationship and response for each endpoint GraphQL aims to make all relationships available through the type specification.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--rdD2lBXn--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002Fl3mZfxgPWhmuXa8Cc\u002Fgiphy.gif%3Fcid%3Decf05e47jl4reclv0ispkk8jjsq0189fam9g75eheskzivdb%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--rdD2lBXn--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002Fl3mZfxgPWhmuXa8Cc\u002Fgiphy.gif%3Fcid%3Decf05e47jl4reclv0ispkk8jjsq0189fam9g75eheskzivdb%26rid%3Dgiphy.gif\" alt=\"Nice\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"versioning\" href=\"#versioning\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Versioning\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ECommunication between frontend and backend teams can be difficult. In the example of changing an endpoint, you would need to communicate with the frontend teams to ensure they prepare for any breaking changes. With GraphQL it's easy to add or remove fields relative to your types above.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Etype Book {\n  id: Int\n  title: String\n  author: String @deprecated\n  authoredBy: Author\n  img: String\n}\n\ntype Author {\n  firstName: String\n  lastName: String\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis could result in less communication needed between the teams and less breaking changes downstream.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--kTgI1KEF--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKH2LcVDaBM7DyKNs3f\u002Fgiphy.gif%3Fcid%3Decf05e47abustlot69n9nswa5rj4eedhrqiw101fzoccvnwf%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--kTgI1KEF--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKH2LcVDaBM7DyKNs3f\u002Fgiphy.gif%3Fcid%3Decf05e47abustlot69n9nswa5rj4eedhrqiw101fzoccvnwf%26rid%3Dgiphy.gif\" alt=\"Happy\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-basics\" href=\"#the-basics\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The Basics\n\u003C\u002Fh2\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"query-vs-mutation\" href=\"#query-vs-mutation\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Query vs. Mutation\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EThus far the examples above are all queries. Queries and mutations replace endpoints to all resolve to one endpoint \u003Ccode\u003EPOST \u002Fgraphql\u003C\u002Fcode\u003E. This endpoint can be changed but what is always consistent is everything is a POST request. Past that you either send a query variable or mutation variable. The formatting used is always spaced out for ease of reading and copied from the developer tools frequently used such as GraphiQL. \u003Ca href=\"https:\u002F\u002Fcountries.trevorblades.com\u002F\"\u003EHere\u003C\u002Fa\u003E is an example of GraphiQL used to query countries. Try it out!\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fi.giphy.com\u002Fmedia\u002FY4zPj5zzfCLAFKjvpa\u002Fgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fi.giphy.com\u002Fmedia\u002FY4zPj5zzfCLAFKjvpa\u002Fgiphy.gif\" alt=\"GraphiQL is awesome\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch4\u003E\n  \u003Ca name=\"query\" href=\"#query\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Query\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EQueries are all related to GET requests in a REST API. Queries are the primary focus of GraphQL and what makes it unique. Instead of hitting a REST endpoint \u003Ccode\u003EGET \u002Fbooks\u003C\u002Fcode\u003E you would use a single endpoint \u003Ccode\u003EPOST \u002Fgraphql\u003C\u002Fcode\u003E and send a query variable. Here is an example.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Equery {\n  books {\n    id\n    title\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch4\u003E\n  \u003Ca name=\"mutation\" href=\"#mutation\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Mutation\n\u003C\u002Fh4\u003E\n\n\u003Cp\u003EPUT, POST, and DELETE endpoint equivalents in GraphQL are mutations.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ccode\u003EPOST \u002Fbook?name=Storyteller\u003C\u002Fcode\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Emutation {\n  createBook(\n      {\n          name: 'Storyteller'\n      }\n  ){\n      \u002F\u002F what you want to return\n      id\n      name\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EOne key difference above, regardless of mutations or queries, we always need to resolve the responses in the \u003Ccode\u003E\u002F\u002F what you want to return\u003C\u002Fcode\u003E section. To me, this still seems awkward because you typically just want to know whether creating the books succeeded or failed. It's up to the client to decide how to handle that as opposed to a REST endpoint returning an id for example.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ULZo8397--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fl4dUikt9M3YvX4hTMp\u002Fgiphy.gif%3Fcid%3Decf05e476buwwqkg6iapbtbcanbbk9y7kic98x3ea4l6zz2f%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--ULZo8397--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fl4dUikt9M3YvX4hTMp\u002Fgiphy.gif%3Fcid%3Decf05e476buwwqkg6iapbtbcanbbk9y7kic98x3ea4l6zz2f%26rid%3Dgiphy.gif\" alt=\"Nothing left to teach\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"why-you-should-know-graphql\" href=\"#why-you-should-know-graphql\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Why you should know GraphQL\n\u003C\u002Fh1\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"a-brief-history\" href=\"#a-brief-history\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  A Brief History\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EGraphQL was made by the internal team at Facebook but released to the open-source community in 2015. Sometime around 2012, the Facebook team wanted to combat a few problems they saw in their REST API's. Mobile applications were getting slower with their heavily over-fetched data. They were sharing API's across multiple client applications, and changing one endpoint could be considered a breaking change to one client app.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"its-still-growing\" href=\"#its-still-growing\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  It's Still Growing\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--exkdbKEi--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzjoh4sq0xsuxpzht2sc.png\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--exkdbKEi--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzjoh4sq0xsuxpzht2sc.png\" alt=\"GraphQL Impact\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIn the \u003Ca href=\"https:\u002F\u002F2019.stateofjs.com\u002Fdata-layer\u002Fgraphql\u002F#graphql_experience\"\u003EState of JS 2019\u003C\u002Fa\u003E survey, about 6% of developers in the JavaScript community are still unfamiliar with it but the remaining majority express interest in it. Since it's inception to the open-source community in 2015, it's been gradually growing. The open-source community has really run with this API specification and is building more tools to take this thing further and further.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"connect-to-multiple-data-sources\" href=\"#connect-to-multiple-data-sources\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Connect to Multiple Data Sources\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EI'm used to creating a three-tier app with an API that connects directly to a database, so restarting your API to leverage GraphQL benefits might seem like a large overhaul. This isn't the case, in fact, the community has fantastic resources for leveraging your already existing REST API to generate a GraphQL layer. So take your REST API, database, or an existing GraphQL API and you can make one unifying endpoint for all.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"support\" href=\"#support\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Support\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EFacebook isn't going anywhere and they make great tools that help the open-source community build great things. If you're a React developer you know all about this! Open source is also having a field day with tooling to make this an even better developer experience. One of my favorites is the \u003Ca href=\"https:\u002F\u002Fgraphql-code-generator.com\u002F\"\u003Egraphql-code-generator \u003C\u002Fa\u003E where we can auto-generate TypeScript types and type-graphql types after creating your schema.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--yqQheg6k--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fh46nEPQoQKpJoekafy\u002Fgiphy.gif%3Fcid%3Decf05e474fh7gu839dan42bltcyavhfpthf8ylx3rjmwx6bo%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--yqQheg6k--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fh46nEPQoQKpJoekafy\u002Fgiphy.gif%3Fcid%3Decf05e474fh7gu839dan42bltcyavhfpthf8ylx3rjmwx6bo%26rid%3Dgiphy.gif\" alt=\"Support\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"part-2-creating-a-graphql-api-using-a-rest-api\" href=\"#part-2-creating-a-graphql-api-using-a-rest-api\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Part 2. Creating a GraphQL API using a REST API\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EIf you are interested in learning about creating a GraphQL API utilizing a REST API as your data source \u003Ca href=\"https:\u002F\u002Fdev.to\u002Fkeonik\u002Fcreating-a-graphql-api-while-utilizing-your-rest-api-55d9\"\u003Ehere it is\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch1\u003E\n  \u003Ca name=\"summary\" href=\"#summary\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Summary\n\u003C\u002Fh1\u003E\n\n\u003Cp\u003EREST and GraphQL are useful specifications for sharing data. REST is scalable, stateless, and great at separating concerns. GraphQL tries to build on REST's shortcomings in terms of over-fetching data, needing to request multiple times to get all the information needed on the client-side, versioning, and manual documentation. We learned the basics of the differences between REST and GraphQL and their various terminologies such as queries and mutations. GraphQL is growing thanks to open-source software development and developer experience satisfaction. If you haven't already, try it out.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--zXdDCCfn--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FefxhHqExIsZuvAg2d8\u002Fgiphy.gif%3Fcid%3Decf05e47qrlsu9jtwbp6d00lwjmu0sb8suyaetqqjj50xthu%26rid%3Dgiphy.gif\" class=\"article-body-image-wrapper\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--zXdDCCfn--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FefxhHqExIsZuvAg2d8\u002Fgiphy.gif%3Fcid%3Decf05e47qrlsu9jtwbp6d00lwjmu0sb8suyaetqqjj50xthu%26rid%3Dgiphy.gif\" alt=\"You're ready\" loading=\"lazy\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"\nIn order to understand why GraphQL is continuing to gain attention, it is increasingly helpful to understand what it was intended to improve upon. One of the beauties of Software Engineering is the constant desire to improve upon what was provided to us. GraphQL tries to do this with REST. By the end, you will have examples of REST API(Application Programming Interface) endpoints, how GraphQL queries relate to those REST endpoints, and why GraphQL exists. Let's get started.\n\n![Let's get started](https:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FUUgTEncAfGQIcNmAk8\u002Fgiphy.gif?cid=ecf05e47blkk5oc2hbf7aukhtxovwedemfeq79got7wbm1qn&rid=giphy.gif)\n\n# Understanding REST\n\n[REST](https:\u002F\u002Fwww.codecademy.com\u002Farticles\u002Fwhat-is-rest) stands for REpresentational State Transfer.\n\n![Holy forking shirt balls - The Good Place](https:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FZB95y3XSFbljaNu7mT\u002Fgiphy.gif?cid=6104955e9ed767b058c292236c53e3e34fbac5473c9869c9&rid=giphy.gif)\n\nThis architecture is known for being `stateless` and able to `separate concern between client and server`.\n\n## Stateless\n\nStateless in this sense means the server does not need to know what the state of the client is to execute an action.\n\n## Separation of Concern\n\nClient and server separations allow for developers to change the server without it affecting the client-side code and vice versa.\n\n## Communication\n\nWhen comparisons come into play with other API specifications, what actually makes REST unique is how the client and server communicate. REST was developed alongside HTTP(Hypertext Protocol Transfer) 1.1 back in the late '90s. Because of this, REST was able to leverage the benefits of HTTP. To illustrate the communication I'll be using a generic model with genres and books.\n\n![1 Genre to Many Books](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fffbs4clud3wiecco8v9w.png)\n\nWe will review receiving and updating a data source through a REST API.\n\n### Receiving Information from a REST API\n\nGET `\u002Fgenres`\n\nWhen a client visits this endpoint they will be returned a list of genres.\n\n```json\n[\n  {\n    \"id\": 1,\n    \"name\": \"Mystery\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Romance\"\n  }\n]\n```\n\nSimilar to genres, books would be the exact same\n\nGET `\u002Fbooks`\n\n```json\n[\n  {\n    \"id\": 1,\n    \"title\": \"The lost man\",\n    \"author\": \"Jane Harper\",\n    \"img\": \"\u002Fimg\u002Fjh-tlm.png\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"And then there were none\",\n    \"author\": \"Agatha Christie\",\n    \"img\": \"\u002Fimg\u002Fac-attwn.png\"\n  }\n]\n```\n\nAs you can see, this is a very predictable and scalable process. If our model above changed to include another model such as `Libraries`, we could easily add-in that endpoint and keep chugging along.\n\n### CRUD Operations in REST\n\nIn creating a service to handle CRUD(create, replace, update, and destroy) operations we would create the following\n\n- POST `\u002Fgenres`\n\n  Create a new genre\n\n- PUT `\u002Fgenres`\n\n  Update an existing genre\n\n- DELETE `\u002Fgenres`\n\n  Remove or delete an existing genre\n\nIn REST API development taking advantage of the HTTP methods provided makes communicating with these available endpoints very predictable.\n\n## Summary\n\nThe general idea behind REST API's is to make everything an endpoint. If you need to add or remove pieces of information from a request to take the load away from your client's browser, you can easily do so without giving the client too much knowledge of what is going on behind the scenes. Above all, REST aims to be fast, reliable, and predictable while taking advantage of all HTTP.\n\n![Laughing](https:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKeWcgrh6Beq4BrqZUS\u002Fgiphy.gif?cid=ecf05e4754lccuuklczptrovt9uccflhodlo89dqifsb59un&rid=giphy.gif)\n\n# What is GraphQL?\n\n[GraphQL](https:\u002F\u002Fgraphql.org\u002F) is a language for querying an API. Not enough? Don't worry, more is coming.\n\n![This broke me](https:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002F2fTOT5PhBUdJbDeVLH\u002Fgiphy.gif?cid=ecf05e477hp9tnjikw8s3z66omn0vvuy6xqunj3zcf3yf8uf&rid=giphy.gif)\n\nContrary to REST API's, GraphQL provides one HTTP endpoint and an `understandable description of the data available` through `type specification`. This gives the client the ability to `request what they need and nothing more`. This query language is much closer to the data sources giving the frontend developers more access to available models and relationships between them. With that, they are able to `get many resources in a single request`.\n\n## Type Specification and Self Documentation\n\nInstead of REST endpoints returning different return types per endpoint, GraphQL relies on types and fields to tell your client what is possible.\n\n```gql\ntype Query {\n  books: [Book]\n  genres: [Genre]\n}\n\ntype Book {\n  id: Int\n  title: String\n  author: String\n  img: String\n}\n\ntype Genre {\n  id: Int\n  name: String\n  books: [Book]\n}\n```\n\nWith this, anyone needing the API to develop client-side code can reference developer tooling to see all the possible queries thanks to the type specifications and self-documenting.\n\n![Hot diggity dog!](https:\u002F\u002Fmedia4.giphy.com\u002Fmedia\u002F3o7WIJtCve3cNZKhRC\u002Fgiphy.gif?cid=ecf05e47idcs10z45ee46p6nhik8fa0pmjpyglskgbq04q8z&rid=giphy.gif)\n\n## Request What is Needed and Nothing More\n\nIn our genres and books data source, when we request a book we will always get all available keys.\n\n```json\n[\n  {\n    \"id\": 1,\n    \"title\": \"The lost man\",\n    \"author\": \"Jane Harper\",\n    \"img\": \"\u002Fimg\u002Fjh-tlm.png\"\n  },\n  {\n    \"id\": 2,\n    \"title\": \"And then there were none\",\n    \"author\": \"Agatha Christie\",\n    \"img\": \"\u002Fimg\u002Fac-attwn.png\"\n  }\n]\n```\n\nWith GraphQL we can add and remove keys to format only the data needed on the frontend. Let's say, for example, we are creating a page that only wants the title and image we could create a query to do so.\n\n```gql\nquery {\n  books {\n    title\n    img\n  }\n}\n```\n\nThis would return the same result without the `author` and `id` keys.\n\n```json\n[\n  {\n    \"title\": \"The lost man\",\n    \"img\": \"\u002Fimg\u002Fjh-tlm.png\"\n  },\n  {\n    \"title\": \"And then there were none\",\n    \"img\": \"\u002Fimg\u002Fac-attwn.png\"\n  }\n]\n```\n\n![Now here we go](https:\u002F\u002Fmedia1.giphy.com\u002Fmedia\u002FxThtalkAxYnZd94uB2\u002Fgiphy.gif?cid=ecf05e47ka7zh7pxst7qvt4i4b7mepgmlkxea0yumhxtgptz&rid=giphy.gif)\n\n## Get many resources in a single request\n\nIn the above REST example, if we wanted to get both genres and books we would have a few options.\n\n1. Make multiple requests to `\u002Fgenres` and `\u002Fbooks`\n\n   - This would force the client-side to resolve these relationships itself.\n\n2. Add books relationship into the `\u002Fgenres` endpoint.\n\n   - The only negative to this would be now anytime you want to fetch genres you are forced to also include books with it which is a problem of over-fetching as referenced above.\n\n3. Make a new endpoint or add an option that would allow fetching of both genres and books.\n\n   - This is most common because it will not interfere with existing frontend applications connected to your API.\n\nInstead of planning the relationship and response for each endpoint GraphQL aims to make all relationships available through the type specification.\n\n![Nice](https:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002Fl3mZfxgPWhmuXa8Cc\u002Fgiphy.gif?cid=ecf05e47jl4reclv0ispkk8jjsq0189fam9g75eheskzivdb&rid=giphy.gif)\n\n## Versioning\n\nCommunication between frontend and backend teams can be difficult. In the example of changing an endpoint, you would need to communicate with the frontend teams to ensure they prepare for any breaking changes. With GraphQL it's easy to add or remove fields relative to your types above.\n\n```gql\ntype Book {\n  id: Int\n  title: String\n  author: String @deprecated\n  authoredBy: Author\n  img: String\n}\n\ntype Author {\n  firstName: String\n  lastName: String\n}\n```\n\nThis could result in less communication needed between the teams and less breaking changes downstream.\n\n![Happy](https:\u002F\u002Fmedia0.giphy.com\u002Fmedia\u002FKH2LcVDaBM7DyKNs3f\u002Fgiphy.gif?cid=ecf05e47abustlot69n9nswa5rj4eedhrqiw101fzoccvnwf&rid=giphy.gif)\n\n## The Basics\n\n### Query vs. Mutation\n\nThus far the examples above are all queries. Queries and mutations replace endpoints to all resolve to one endpoint `POST \u002Fgraphql`. This endpoint can be changed but what is always consistent is everything is a POST request. Past that you either send a query variable or mutation variable. The formatting used is always spaced out for ease of reading and copied from the developer tools frequently used such as GraphiQL. [Here](https:\u002F\u002Fcountries.trevorblades.com\u002F) is an example of GraphiQL used to query countries. Try it out!\n\n![GraphiQL is awesome](https:\u002F\u002Fmedia.giphy.com\u002Fmedia\u002FY4zPj5zzfCLAFKjvpa\u002Fgiphy.gif)\n\n#### Query\n\nQueries are all related to GET requests in a REST API. Queries are the primary focus of GraphQL and what makes it unique. Instead of hitting a REST endpoint `GET \u002Fbooks` you would use a single endpoint `POST \u002Fgraphql` and send a query variable. Here is an example.\n\n```gql\nquery {\n  books {\n    id\n    title\n  }\n}\n```\n\n#### Mutation\n\nPUT, POST, and DELETE endpoint equivalents in GraphQL are mutations.\n\n`POST \u002Fbook?name=Storyteller`\n\n```gql\nmutation {\n  createBook(\n      {\n          name: 'Storyteller'\n      }\n  ){\n      \u002F\u002F what you want to return\n      id\n      name\n  }\n}\n```\n\nOne key difference above, regardless of mutations or queries, we always need to resolve the responses in the `\u002F\u002F what you want to return` section. To me, this still seems awkward because you typically just want to know whether creating the books succeeded or failed. It's up to the client to decide how to handle that as opposed to a REST endpoint returning an id for example.\n\n![Nothing left to teach](https:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fl4dUikt9M3YvX4hTMp\u002Fgiphy.gif?cid=ecf05e476buwwqkg6iapbtbcanbbk9y7kic98x3ea4l6zz2f&rid=giphy.gif)\n\n# Why you should know GraphQL\n\n## A Brief History\n\nGraphQL was made by the internal team at Facebook but released to the open-source community in 2015. Sometime around 2012, the Facebook team wanted to combat a few problems they saw in their REST API's. Mobile applications were getting slower with their heavily over-fetched data. They were sharing API's across multiple client applications, and changing one endpoint could be considered a breaking change to one client app.\n\n## It's Still Growing\n\n![GraphQL Impact](https:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjzjoh4sq0xsuxpzht2sc.png)\n\nIn the [State of JS 2019](https:\u002F\u002F2019.stateofjs.com\u002Fdata-layer\u002Fgraphql\u002F#graphql_experience) survey, about 6% of developers in the JavaScript community are still unfamiliar with it but the remaining majority express interest in it. Since it's inception to the open-source community in 2015, it's been gradually growing. The open-source community has really run with this API specification and is building more tools to take this thing further and further.\n\n## Connect to Multiple Data Sources\n\nI'm used to creating a three-tier app with an API that connects directly to a database, so restarting your API to leverage GraphQL benefits might seem like a large overhaul. This isn't the case, in fact, the community has fantastic resources for leveraging your already existing REST API to generate a GraphQL layer. So take your REST API, database, or an existing GraphQL API and you can make one unifying endpoint for all.\n\n## Support\n\nFacebook isn't going anywhere and they make great tools that help the open-source community build great things. If you're a React developer you know all about this! Open source is also having a field day with tooling to make this an even better developer experience. One of my favorites is the [graphql-code-generator ](https:\u002F\u002Fgraphql-code-generator.com\u002F) where we can auto-generate TypeScript types and type-graphql types after creating your schema.\n\n![Support](https:\u002F\u002Fmedia2.giphy.com\u002Fmedia\u002Fh46nEPQoQKpJoekafy\u002Fgiphy.gif?cid=ecf05e474fh7gu839dan42bltcyavhfpthf8ylx3rjmwx6bo&rid=giphy.gif)\n\n# Part 2. Creating a GraphQL API using a REST API\n\nIf you are interested in learning about creating a GraphQL API utilizing a REST API as your data source [here it is](https:\u002F\u002Fdev.to\u002Fkeonik\u002Fcreating-a-graphql-api-while-utilizing-your-rest-api-55d9).\n\n# Summary\n\nREST and GraphQL are useful specifications for sharing data. REST is scalable, stateless, and great at separating concerns. GraphQL tries to build on REST's shortcomings in terms of over-fetching data, needing to request multiple times to get all the information needed on the client-side, versioning, and manual documentation. We learned the basics of the differences between REST and GraphQL and their various terminologies such as queries and mutations. GraphQL is growing thanks to open-source software development and developer experience satisfaction. If you haven't already, try it out.\n\n![You're ready](https:\u002F\u002Fmedia3.giphy.com\u002Fmedia\u002FefxhHqExIsZuvAg2d8\u002Fgiphy.gif?cid=ecf05e47qrlsu9jtwbp6d00lwjmu0sb8suyaetqqjj50xthu&rid=giphy.gif)\n",user:{name:"John Fay",username:e,twitter_username:"dev_so_below",github_username:e,website_url:"https:\u002F\u002Fjohnfay.dev",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--aq8nvJHx--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F367637\u002Fd5623e78-0b29-4e77-a984-2e2b3e037acc.jpg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5UcrPhiJ--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F367637\u002Fd5623e78-0b29-4e77-a984-2e2b3e037acc.jpg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fkeonik\u002F555935",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"https:\u002F\u002Fdev.to\u002Fkeonik\u002Funderstanding-graphql-through-rest-57c0",32,"2020-12-30T06:20:04Z","keonik"));