window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:567652,title:"Creating self-contained executable JARs",description:"When your application goes beyond a dozen of lines of code, you should probably split the code into m...",readable_publish_date:"Jan 10",slug:"creating-self-contained-executable-jars-388d",path:"\u002Fnfrankel\u002Fcreating-self-contained-executable-jars-388d",url:"https:\u002F\u002Fdev.to\u002Fnfrankel\u002Fcreating-self-contained-executable-jars-388d",comments_count:0,public_reactions_count:c,collection_id:a,published_timestamp:b,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Nz7v0oCr--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fxgootuh3qgeh8v6b6235.jpg",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--c4l84mee--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fxgootuh3qgeh8v6b6235.jpg",canonical_url:"https:\u002F\u002Fblog.frankel.ch\u002Fcreating-self-contained-executable-jars",created_at:"2021-01-10T10:18:11Z",edited_at:a,crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:8,tag_list:"java, jar, maven, springboot",tags:["java","jar","maven","springboot"],body_html:"\u003Cp\u003EWhen your application goes beyond a dozen of lines of code, you should probably split the code into multiple classes. At this point, the question is how to distribute them. In Java, the classical format is the Java ARchive, better known as the JAR. But real-world applications probably depend on other JARs.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis post aims to describe ways to create self-contained executable JARs, also known as uber-JARs or fat JARs.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"what-is-an-executable-jar\" href=\"#what-is-an-executable-jar\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  What is an executable JAR?\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EA JAR is just a collection of class files. To be executable, its \u003Ccode\u003EMETA-INF\u002FMANIFEST.MF\u003C\u002Fcode\u003E file should point to the class that implements the \u003Ccode\u003Emain()\u003C\u002Fcode\u003E method. You do this with the \u003Ccode\u003EMain-Class\u003C\u002Fcode\u003E attribute. Here's an example:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003EMain-Class: path.to.MainClass    # 1\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Col\u003E\n\u003Cli\u003E\n\u003Ccode\u003EMainClass\u003C\u002Fcode\u003E has a \u003Ccode\u003Estatic main(String... args)\u003C\u002Fcode\u003E method\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"handling-the-classpath\" href=\"#handling-the-classpath\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Handling the classpath\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EMost applications depend on existing code. Java provides the concept of the \u003Cstrong\u003Eclasspath\u003C\u002Fstrong\u003E. The classpath is a list of path elements that the runtime will look into to find dependent code. When \u003Cstrong\u003Erunning Java classes\u003C\u002Fstrong\u003E, you define the classpath via the \u003Ccode\u003E-cp\u003C\u002Fcode\u003E command-line option:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Ejava \u003Cspan class=\"nt\"\u003E-cp\u003C\u002Fspan\u003E lib\u002Fone.jar\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003Elib\u002Ftwo.jar\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u002Fvar\u002Flib\u002Fthree.jar path.to.MainClass\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe Java runtime creates the classpath by aggregating all classes from all referenced JARs and adding the main class.\u003C\u002Fp\u003E\n\n\u003Cp\u003ENew problems arise when distributing JARs that depend on other JARs:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EYou need to define the same libraries in the same version\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003EMore importantly, \u003Cstrong\u003Ethe \u003Ccode\u003E-cp\u003C\u002Fcode\u003E argument doesn't work with JARs\u003C\u002Fstrong\u003E. To reference other JARs, the classpath needs to be set in a JAR's manifest via the \u003Ccode\u003EClass-Path\u003C\u002Fcode\u003E attribute:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003EClass-Path: lib\u002Fone.jar;lib\u002Ftwo.jar;\u002Fvar\u002Flib\u002Fthree.jar\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003EFor this reason, you need to put JARs in the same location, relative \u003Cstrong\u003Eor\u003C\u002Fstrong\u003E absolute, on the target filesystem as per the manifest. That implies to open the JAR and read the manifest first.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EOne way to solve those issues is to create a unique deployment unit that contains classes from all JARs and that can be distributed as one artifact. There are several options to create such JARs:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EThe Assembly plugin\u003C\u002Fli\u003E\n\u003Cli\u003EThe Shade plugin\u003C\u002Fli\u003E\n\u003Cli\u003EThe Spring Boot plugin (for Spring Boot projects)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-apache-assembly-plugin\" href=\"#the-apache-assembly-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The Apache Assembly plugin\n\u003C\u002Fh2\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EThe Assembly Plugin for Maven enables developers to combine project output into a single distributable archive that also contains dependencies, modules, site documentation, and other files.\u003C\u002Fp\u003E\n\n\u003Cp\u003E-- \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-assembly-plugin\u002Findex.html\"\u003EApache Maven Assembly Plugin\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EOne Maven design rule is to create one artifact per project. There are exceptions \u003Cem\u003Ee.g.\u003C\u002Fem\u003E Javadocs artifacts and source artifacts, but in general, if you want multiple artifacts, you need to create one project per artifact. The idea behind the Assembly plugin is to work around this rule.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe Assembly plugin relies on a specific \u003Ccode\u003Eassembly.xml\u003C\u002Fcode\u003E configuration file. It allows you to pick and choose which files will be included in the artifact. Note that the final artifact doesn't need to be a JAR: the configuration file lets you choose between available formats \u003Cem\u003Ee.g.\u003C\u002Fem\u003E zip, war, etc.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe plugin manages common use-cases by providing pre-defined assemblies. The distribution of self-contained JARs is among them. The configuration looks like the following:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight xml\"\u003E\u003Ccode\u003E\u003Cspan class=\"nt\"\u003E&lt;plugin&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Emaven-assembly-plugin\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;configuration&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;descriptorRefs&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;descriptorRef&gt;\u003C\u002Fspan\u003Ejar-with-dependencies\u003Cspan class=\"nt\"\u003E&lt;\u002FdescriptorRef&gt;\u003C\u002Fspan\u003E                            \u003Cspan class=\"c\"\u003E&lt;!--1--&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002FdescriptorRefs&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;archive&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;manifest&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;mainClass&gt;\u003C\u002Fspan\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003Cspan class=\"nt\"\u003E&lt;\u002FmainClass&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--2--&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fmanifest&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Farchive&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fconfiguration&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;executions&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;execution&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;goals&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;goal&gt;\u003C\u002Fspan\u003Esingle\u003Cspan class=\"nt\"\u003E&lt;\u002Fgoal&gt;\u003C\u002Fspan\u003E                                                           \u003Cspan class=\"c\"\u003E&lt;!--3--&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fgoals&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;phase&gt;\u003C\u002Fspan\u003Epackage\u003Cspan class=\"nt\"\u003E&lt;\u002Fphase&gt;\u003C\u002Fspan\u003E                                                          \u003Cspan class=\"c\"\u003E&lt;!--4--&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecution&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecutions&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fplugin&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Col\u003E\n\u003Cli\u003EReference the pre-defined self-contained JAR configuration\u003C\u002Fli\u003E\n\u003Cli\u003ESet the main class to execute\u003C\u002Fli\u003E\n\u003Cli\u003EExecute the \u003Ccode\u003Esingle\u003C\u002Fcode\u003E goal\u003C\u002Fli\u003E\n\u003Cli\u003EBind the goal to the \u003Ccode\u003Epackage\u003C\u002Fcode\u003E phase \u003Cem\u003Ei.e.\u003C\u002Fem\u003E after the original JAR has been built\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003ERunning \u003Ccode\u003Emvn package\u003C\u002Fcode\u003E yields two artifacts:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003E&lt;name&gt;-&lt;version&gt;.jar\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E&lt;name&gt;-&lt;version&gt;-with-dependencies.jar\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EThe first JAR has the same content as the one that would have been created without the plugin. The second is the self-contained JAR. You can execute it like this:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003Ejava \u003Cspan class=\"nt\"\u003E-jar\u003C\u002Fspan\u003E target\u002Fexecutable-jar-0.0.1-SNAPSHOT.jar\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EDepending on the project, it may execute successfully... or not. For example, it fails in the sample Spring Boot project with the following message:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E%d [%thread] %-5level %logger - %msg%n java.lang.IllegalArgumentException:\n  No auto configuration classes found in META-INF\u002Fspring.factories.\n  If you are using a custom packaging, make sure that file is correct.\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe reason is that different JARs provide \u003Cstrong\u003Edifferent resources under the same path\u003C\u002Fstrong\u003E \u003Cem\u003Ee.g.\u003C\u002Fem\u003E \u003Ccode\u003EMETA-INF\u002Fspring.factories\u003C\u002Fcode\u003E. The plugin follows a last write wins strategy. The order is based on the name of the JAR.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith Assembly, you can \u003Cstrong\u003Eexclude resources but not merge them\u003C\u002Fstrong\u003E. When you need to merge resources, you'll probably want to use the Apache Shade plugin instead.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-apache-shade-plugin\" href=\"#the-apache-shade-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The Apache Shade plugin\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe Assembly plugin is generic; the Shade plugin solely focuses on the task of creating self-contained JARs.\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EThis plugin provides the capability to package the artifact in an uber-jar, including its dependencies and to shade - i.e. rename - the packages of some of the dependencies.\u003C\u002Fp\u003E\n\n\u003Cp\u003E-- \u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-shade-plugin\u002Findex.html\"\u003EApache Maven Shade Plugin\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EThe plugin is based on the concept of \u003Cem\u003Etransformers\u003C\u002Fem\u003E: each transformer is responsible to handle one single type of resource. A transformer can copy a resource as-is, append static content, merge it with others, etc.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWhile you can develop a transformer, the plugin provides a set of out-of-the-box transformers:\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"table-wrapper-paragraph\"\u003E\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003ETransformer\u003C\u002Fth\u003E\n\u003Cth\u003E Description\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EApacheLicenseResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EPrevents license duplication\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EApacheNoticeResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EPrepares merged \u003Ccode\u003ENOTICE\u003C\u002Fcode\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EAppendingTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAdds content to a resource\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EComponentsXmlResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAggregates Plexus \u003Ccode\u003Ecomponents.xml\u003C\u002Fcode\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EDontIncludeResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EPrevents inclusion of matching resources\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EGroovyResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EMerges Apache Groovy extends modules\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EIncludeResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAdds files from the project\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EManifestResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ESets entries in the \u003Ccode\u003EMANIFEST\u003C\u002Fcode\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EPluginXmlResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAggregates Mavens \u003Ccode\u003Eplugin.xml\u003C\u002Fcode\u003E\n\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EResourceBundleAppendingTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EMerges ResourceBundles\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EServicesResourceTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ERelocated class names in \u003Ccode\u003EMETA-INF\u002Fservices\u003C\u002Fcode\u003E resources and merges them\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EXmlAppendingTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EAdds XML content to an XML resource\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EPropertiesTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EMerges properties files owning an ordinal to solve conflicts\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EOpenWebBeansPropertiesTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EMerges Apache OpenWebBeans configuration files\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EMicroprofileConfigTransformer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EMerges conflicting Microprofile Config properties based on an ordinal\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\n\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EThe Shade plugin configuration to the Assembly's above is the following:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight xml\"\u003E\u003Ccode\u003E\u003Cspan class=\"nt\"\u003E&lt;plugin&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Emaven-shade-plugin\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;executions&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;execution&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;id&gt;\u003C\u002Fspan\u003Eshade\u003Cspan class=\"nt\"\u003E&lt;\u002Fid&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;goals&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;goal&gt;\u003C\u002Fspan\u003Eshade\u003Cspan class=\"nt\"\u003E&lt;\u002Fgoal&gt;\u003C\u002Fspan\u003E                        \u003Cspan class=\"c\"\u003E&lt;!--1--&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fgoals&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;configuration&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;transformers&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;transformer\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eimplementation=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--2--&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;mainClass&gt;\u003C\u002Fspan\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003Cspan class=\"nt\"\u003E&lt;\u002FmainClass&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--3--&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;manifestEntries&gt;\u003C\u002Fspan\u003E\n              \u003Cspan class=\"nt\"\u003E&lt;Multi-Release&gt;\u003C\u002Fspan\u003Etrue\u003Cspan class=\"nt\"\u003E&lt;\u002FMulti-Release&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--4--&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;\u002FmanifestEntries&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;\u002Ftransformer&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;\u002Ftransformers&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fconfiguration&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecution&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecutions&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fplugin&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Col\u003E\n\u003Cli\u003EThe \u003Ccode\u003Eshade\u003C\u002Fcode\u003E goal is bound to the \u003Ccode\u003Epackage\u003C\u002Fcode\u003E phase by default\u003C\u002Fli\u003E\n\u003Cli\u003EThis transformer is dedicated to generating manifest files\u003C\u002Fli\u003E\n\u003Cli\u003ESet the \u003Ccode\u003EMain-Class\u003C\u002Fcode\u003E entry\u003C\u002Fli\u003E\n\u003Cli\u003EConfigure the final JAR to be a \u003Ca href=\"https:\u002F\u002Fwww.baeldung.com\u002Fjava-multi-release-jar\"\u003Emulti-release JAR\u003C\u002Fa\u003E. This is necessary when any of the initial JARs is a multi-release JAR\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003ERunning \u003Ccode\u003Emvn package\u003C\u002Fcode\u003E yields two artifacts:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003E\n\u003Ccode\u003E&lt;name&gt;-&lt;version&gt;.jar\u003C\u002Fcode\u003E: the self-contained executable JAR\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003Eoriginal-&lt;name&gt;-&lt;version&gt;.jar\u003C\u002Fcode\u003E: the \"normal\" JAR without the embedded dependencies\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EWith the sample project, the final executable still doesn't work as expected. Indeed, there are a lot of warnings regarding duplicate resources during the build. Two of them prevent the sample project from working correctly. To merge them correctly, we need to have a look at their format:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Ccode\u003EMETA-INF\u002Forg\u002Fapache\u002Flogging\u002Flog4j\u002Fcore\u002Fconfig\u002Fplugins\u002FLog4j2Plugins.dat\u003C\u002Fcode\u003E: This Log4J2 file contains pre-compiled Log4J2 plugin data. It's encoded in binary format and none of the out-of-the-box transformers can merge such files. Yet, a casual search reveals somebody already had this issue and released \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fedwgiz\u002Fmaven-shaded-log4j-transformer\"\u003Ea transformer\u003C\u002Fa\u003E to handle the merge.\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Ccode\u003EMETA-INF\u002Fspring.factories\u003C\u002Fcode\u003E: These Spring-specific files have a single key\u002Fmultiple values format. While they are text-based, no out-of-the-box transformer can merge them correctly. However, the Spring developers provide this capability (and much more) in \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fspring-projects\u002Fspring-boot\"\u003Etheir plugin\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003ETo configure these transformers, we need to add the above libraries as dependencies to the Shade plugin:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight xml\"\u003E\u003Ccode\u003E\u003Cspan class=\"nt\"\u003E&lt;plugin&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Emaven-shade-plugin\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;version&gt;\u003C\u002Fspan\u003E3.2.4\u003Cspan class=\"nt\"\u003E&lt;\u002Fversion&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;executions&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;execution&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;goals&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;goal&gt;\u003C\u002Fspan\u003Eshade\u003Cspan class=\"nt\"\u003E&lt;\u002Fgoal&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fgoals&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;configuration&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;transformers&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;transformer\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eimplementation=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;mainClass&gt;\u003C\u002Fspan\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003Cspan class=\"nt\"\u003E&lt;\u002FmainClass&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;manifestEntries&gt;\u003C\u002Fspan\u003E\n              \u003Cspan class=\"nt\"\u003E&lt;Multi-Release&gt;\u003C\u002Fspan\u003Etrue\u003Cspan class=\"nt\"\u003E&lt;\u002FMulti-Release&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;\u002FmanifestEntries&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;\u002Ftransformer&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;transformer\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eimplementation=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"com.github.edwgiz.maven_shade_plugin.log4j2_cache_transformer.PluginsCacheFileTransformer\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--1--&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;transformer\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eimplementation=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"org.springframework.boot.maven.PropertiesMergingResourceTransformer\"\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--2--&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"nt\"\u003E&lt;resource&gt;\u003C\u002Fspan\u003EMETA-INF\u002Fspring.factories\u003Cspan class=\"nt\"\u003E&lt;\u002Fresource&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"nt\"\u003E&lt;\u002Ftransformer&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;\u002Ftransformers&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fconfiguration&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecution&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecutions&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;dependencies&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;dependency&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;groupId&gt;\u003C\u002Fspan\u003Ecom.github.edwgiz\u003Cspan class=\"nt\"\u003E&lt;\u002FgroupId&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Emaven-shade-plugin.log4j2-cachefile-transformer\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"c\"\u003E&lt;!--3--&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;version&gt;\u003C\u002Fspan\u003E2.14.0\u003Cspan class=\"nt\"\u003E&lt;\u002Fversion&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fdependency&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;dependency&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;groupId&gt;\u003C\u002Fspan\u003Eorg.springframework.boot\u003Cspan class=\"nt\"\u003E&lt;\u002FgroupId&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Espring-boot-maven-plugin\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E                        \u003Cspan class=\"c\"\u003E&lt;!--3--&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;version&gt;\u003C\u002Fspan\u003E2.4.1\u003Cspan class=\"nt\"\u003E&lt;\u002Fversion&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fdependency&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fdependencies&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fplugin&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Col\u003E\n\u003Cli\u003EMerge Log4J2 \u003Ccode\u003E.dat\u003C\u002Fcode\u003E files\u003C\u002Fli\u003E\n\u003Cli\u003EMerge \u003Ccode\u003E\u002FMETA-INF\u002Fspring.factories\u003C\u002Fcode\u003E files\u003C\u002Fli\u003E\n\u003Cli\u003EAdd the required transformers code\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EThis configuration works! Still, there are remaining warnings:\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EManifests\u003C\u002Fli\u003E\n\u003Cli\u003ELicenses, notices and similar files\u003C\u002Fli\u003E\n\u003Cli\u003ESpring Boot specific files \u003Cem\u003Ei.e.\u003C\u002Fem\u003E \u003Ccode\u003Espring.handlers\u003C\u002Fcode\u003E, \u003Ccode\u003Espring.schemas\u003C\u002Fcode\u003E and \u003Ccode\u003Espring.tooling\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003ESpring Boot-Kotlin specific files \u003Cem\u003Ee.g.\u003C\u002Fem\u003E \u003Ccode\u003Espring-boot.kotlin_module\u003C\u002Fcode\u003E, \u003Ccode\u003Espring-context.kotlin_module\u003C\u002Fcode\u003E, etc.\u003C\u002Fli\u003E\n\u003Cli\u003EService loader configuration files\u003C\u002Fli\u003E\n\u003Cli\u003EJSON files\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003EYou can add and configure additional transformers to fix the remaining warnings. All in all, the whole process requires a deep understanding of each kind of resource and how to handle them.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-spring-boot-plugin\" href=\"#the-spring-boot-plugin\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The Spring Boot plugin\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EThe Spring Boot plugin adopts an entirely different approach. It doesn't merge resources from JARs individually; it adds dependent JARs \u003Cem\u003Eas they are\u003C\u002Fem\u003E inside the uber JAR. To load classes and resources, it provides a specific class-loading mechanism. Obviously, it's dedicated to Spring Boot projects.\u003C\u002Fp\u003E\n\n\u003Cp\u003EConfiguring the Spring Boot plugin is straightforward:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight xml\"\u003E\u003Ccode\u003E\u003Cspan class=\"nt\"\u003E&lt;plugin&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;groupId&gt;\u003C\u002Fspan\u003Eorg.springframework.boot\u003Cspan class=\"nt\"\u003E&lt;\u002FgroupId&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;artifactId&gt;\u003C\u002Fspan\u003Espring-boot-maven-plugin\u003Cspan class=\"nt\"\u003E&lt;\u002FartifactId&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;version&gt;\u003C\u002Fspan\u003E2.4.1\u003Cspan class=\"nt\"\u003E&lt;\u002Fversion&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;executions&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;execution&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;goals&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nt\"\u003E&lt;goal&gt;\u003C\u002Fspan\u003Erepackage\u003Cspan class=\"nt\"\u003E&lt;\u002Fgoal&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nt\"\u003E&lt;\u002Fgoals&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecution&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fexecutions&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fplugin&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ELet's check the structure of the final JAR:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003E\u002F\n |__ BOOT-INF\n |    |__ classes           \u002F\u002F 1\n |    |__ lib               \u002F\u002F 2\n |__ META-INF\n |    |__ MANIFEST.MF\n |__ org\n      |__ springframework\n           |__ loader       \u002F\u002F 3\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Col\u003E\n\u003Cli\u003EProject compiled classes\u003C\u002Fli\u003E\n\u003Cli\u003EJAR dependencies\u003C\u002Fli\u003E\n\u003Cli\u003ESpring Boot class-loading classes\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EHere's an excerpt of the manifest for our sample project:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003EMain-Class: org.springframework.boot.loader.JarLauncher\nStart-Class: ch.frankel.blog.executablejar.ExecutableJarApplication\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see, the main class is a Spring Boot specific class while the \"real\" main class is referenced under another entry.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFor more information on the structure of the JAR, please check the \u003Ca href=\"https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Freference\u002Fhtml\u002Fappendix-executable-jar-format.html\"\u003Ereference documentation\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"conclusion\" href=\"#conclusion\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Conclusion\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EIn this post, we've described 3 different ways to create self-contained executable JARs:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EAssembly is a good fit for simple projects\u003C\u002Fli\u003E\n\u003Cli\u003EWhen the project starts being more complex and you need to handle duplicate files, use Shade\u003C\u002Fli\u003E\n\u003Cli\u003EFinally, for Spring Boot projects, your best bet is the dedicated plugin\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Cp\u003EThe complete source code for this post can be found on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fajavageek\u002Fexecutable-jar\"\u003EGithub\u003C\u002Fa\u003E in Maven format.\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ETo go further:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-assembly-plugin\u002F\"\u003EMaven Assembly plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-shade-plugin\u002F\"\u003EMaven Shade plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fedwgiz\u002Fmaven-shaded-log4j-transformer\"\u003Emaven-shaded-log4j-transformer\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Fmaven-plugin\u002Freference\u002Fhtmlsingle\u002F\"\u003EMaven Spring Boot plugin\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Freference\u002Fhtml\u002Fappendix-executable-jar-format.html\"\u003EThe Executable Jar Format\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cp\u003E\u003Cem\u003EOriginally published at \u003Ca href=\"https:\u002F\u002Fblog.frankel.ch\u002Fcreating-self-contained-executable-jars\"\u003EA Java Geek\u003C\u002Fa\u003E on January 10\u003Csup\u003Eth\u003C\u002Fsup\u003E 2020\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\n",body_markdown:"When your application goes beyond a dozen of lines of code, you should probably split the code into multiple classes. At this point, the question is how to distribute them. In Java, the classical format is the Java ARchive, better known as the JAR. But real-world applications probably depend on other JARs.\n\nThis post aims to describe ways to create self-contained executable JARs, also known as uber-JARs or fat JARs.\n\n## What is an executable JAR?\n\nA JAR is just a collection of class files. To be executable, its `META-INF\u002FMANIFEST.MF` file should point to the class that implements the `main()` method. You do this with the `Main-Class` attribute. Here's an example:\n\n```\nMain-Class: path.to.MainClass    # 1\n```\n\n1. `MainClass` has a `static main(String... args)` method\n\n## Handling the classpath\n\nMost applications depend on existing code. Java provides the concept of the **classpath**. The classpath is a list of path elements that the runtime will look into to find dependent code. When **running Java classes**, you define the classpath via the `-cp` command-line option:\n\n```bash\njava -cp lib\u002Fone.jar;lib\u002Ftwo.jar;\u002Fvar\u002Flib\u002Fthree.jar path.to.MainClass\n```\n\nThe Java runtime creates the classpath by aggregating all classes from all referenced JARs and adding the main class.\n\nNew problems arise when distributing JARs that depend on other JARs:\n\n1. You need to define the same libraries in the same version\n2. More importantly, **the `-cp` argument doesn't work with JARs**. To reference other JARs, the classpath needs to be set in a JAR's manifest via the `Class-Path` attribute:\n\n    ```\n    Class-Path: lib\u002Fone.jar;lib\u002Ftwo.jar;\u002Fvar\u002Flib\u002Fthree.jar\n    ```\n\n3. For this reason, you need to put JARs in the same location, relative **or** absolute, on the target filesystem as per the manifest. That implies to open the JAR and read the manifest first.\n\nOne way to solve those issues is to create a unique deployment unit that contains classes from all JARs and that can be distributed as one artifact. There are several options to create such JARs:\n\n* The Assembly plugin\n* The Shade plugin\n* The Spring Boot plugin (for Spring Boot projects)\n\n## The Apache Assembly plugin\n\n\u003EThe Assembly Plugin for Maven enables developers to combine project output into a single distributable archive that also contains dependencies, modules, site documentation, and other files.\n\u003E\n\u003E -- [Apache Maven Assembly Plugin](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-assembly-plugin\u002Findex.html)\n\nOne Maven design rule is to create one artifact per project. There are exceptions _e.g._ Javadocs artifacts and source artifacts, but in general, if you want multiple artifacts, you need to create one project per artifact. The idea behind the Assembly plugin is to work around this rule.\n\nThe Assembly plugin relies on a specific `assembly.xml` configuration file. It allows you to pick and choose which files will be included in the artifact. Note that the final artifact doesn't need to be a JAR: the configuration file lets you choose between available formats _e.g._ zip, war, etc.\n\nThe plugin manages common use-cases by providing pre-defined assemblies. The distribution of self-contained JARs is among them. The configuration looks like the following:\n\n```xml\n\u003Cplugin\u003E\n  \u003CartifactId\u003Emaven-assembly-plugin\u003C\u002FartifactId\u003E\n  \u003Cconfiguration\u003E\n    \u003CdescriptorRefs\u003E\n      \u003CdescriptorRef\u003Ejar-with-dependencies\u003C\u002FdescriptorRef\u003E                            \u003C!--1--\u003E\n    \u003C\u002FdescriptorRefs\u003E\n    \u003Carchive\u003E\n      \u003Cmanifest\u003E\n        \u003CmainClass\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003C\u002FmainClass\u003E \u003C!--2--\u003E\n      \u003C\u002Fmanifest\u003E\n    \u003C\u002Farchive\u003E\n  \u003C\u002Fconfiguration\u003E\n  \u003Cexecutions\u003E\n    \u003Cexecution\u003E\n      \u003Cgoals\u003E\n        \u003Cgoal\u003Esingle\u003C\u002Fgoal\u003E                                                           \u003C!--3--\u003E\n      \u003C\u002Fgoals\u003E\n      \u003Cphase\u003Epackage\u003C\u002Fphase\u003E                                                          \u003C!--4--\u003E\n    \u003C\u002Fexecution\u003E\n  \u003C\u002Fexecutions\u003E\n\u003C\u002Fplugin\u003E\n```\n\n1. Reference the pre-defined self-contained JAR configuration\n2. Set the main class to execute\n3. Execute the `single` goal\n4. Bind the goal to the `package` phase _i.e._ after the original JAR has been built\n\nRunning `mvn package` yields two artifacts:\n\n1. `\u003Cname\u003E-\u003Cversion\u003E.jar`\n2. `\u003Cname\u003E-\u003Cversion\u003E-with-dependencies.jar`\n\nThe first JAR has the same content as the one that would have been created without the plugin. The second is the self-contained JAR. You can execute it like this:\n\n```bash\njava -jar target\u002Fexecutable-jar-0.0.1-SNAPSHOT.jar\n```\n\nDepending on the project, it may execute successfully... or not. For example, it fails in the sample Spring Boot project with the following message:\n\n```\n%d [%thread] %-5level %logger - %msg%n java.lang.IllegalArgumentException:\n  No auto configuration classes found in META-INF\u002Fspring.factories.\n  If you are using a custom packaging, make sure that file is correct.\n```\n\nThe reason is that different JARs provide **different resources under the same path** _e.g._ `META-INF\u002Fspring.factories`. The plugin follows a last write wins strategy. The order is based on the name of the JAR.\n\nWith Assembly, you can **exclude resources but not merge them**. When you need to merge resources, you'll probably want to use the Apache Shade plugin instead.\n\n## The Apache Shade plugin\n\nThe Assembly plugin is generic; the Shade plugin solely focuses on the task of creating self-contained JARs.\n\n\u003E This plugin provides the capability to package the artifact in an uber-jar, including its dependencies and to shade - i.e. rename - the packages of some of the dependencies.\n\u003E\n\u003E -- [Apache Maven Shade Plugin](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-shade-plugin\u002Findex.html)\n\nThe plugin is based on the concept of _transformers_: each transformer is responsible to handle one single type of resource. A transformer can copy a resource as-is, append static content, merge it with others, etc.\n\nWhile you can develop a transformer, the plugin provides a set of out-of-the-box transformers:\n\n| Transformer | Description |\n| --- | --- |\n| `ApacheLicenseResourceTransformer` | Prevents license duplication |\n| `ApacheNoticeResourceTransformer` | Prepares merged `NOTICE` |\n| `AppendingTransformer` | Adds content to a resource |\n| `ComponentsXmlResourceTransformer` | Aggregates Plexus `components.xml` |\n| `DontIncludeResourceTransformer` | Prevents inclusion of matching resources |\n| `GroovyResourceTransformer` | Merges Apache Groovy extends modules |\n| `IncludeResourceTransformer` | Adds files from the project |\n| `ManifestResourceTransformer` | Sets entries in the `MANIFEST` |\n| `PluginXmlResourceTransformer` | Aggregates Mavens `plugin.xml` |\n| `ResourceBundleAppendingTransformer` | Merges ResourceBundles |\n| `ServicesResourceTransformer` | Relocated class names in `META-INF\u002Fservices` resources and merges them |\n| `XmlAppendingTransformer` | Adds XML content to an XML resource |\n| `PropertiesTransformer` | Merges properties files owning an ordinal to solve conflicts |\n| `OpenWebBeansPropertiesTransformer` | Merges Apache OpenWebBeans configuration files |\n| `MicroprofileConfigTransformer` | Merges conflicting Microprofile Config properties based on an ordinal |\n\nThe Shade plugin configuration to the Assembly's above is the following:\n\n```xml\n\u003Cplugin\u003E\n  \u003CartifactId\u003Emaven-shade-plugin\u003C\u002FartifactId\u003E\n  \u003Cexecutions\u003E\n    \u003Cexecution\u003E\n      \u003Cid\u003Eshade\u003C\u002Fid\u003E\n      \u003Cgoals\u003E\n        \u003Cgoal\u003Eshade\u003C\u002Fgoal\u003E                        \u003C!--1--\u003E\n      \u003C\u002Fgoals\u003E\n      \u003Cconfiguration\u003E\n        \u003Ctransformers\u003E\n          \u003Ctransformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"\u003E \u003C!--2--\u003E\n            \u003CmainClass\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003C\u002FmainClass\u003E \u003C!--3--\u003E\n            \u003CmanifestEntries\u003E\n              \u003CMulti-Release\u003Etrue\u003C\u002FMulti-Release\u003E \u003C!--4--\u003E\n            \u003C\u002FmanifestEntries\u003E\n          \u003C\u002Ftransformer\u003E\n        \u003C\u002Ftransformers\u003E\n      \u003C\u002Fconfiguration\u003E\n    \u003C\u002Fexecution\u003E\n  \u003C\u002Fexecutions\u003E\n\u003C\u002Fplugin\u003E\n```\n\n1. The `shade` goal is bound to the `package` phase by default\n2. This transformer is dedicated to generating manifest files\n3. Set the `Main-Class` entry\n4. Configure the final JAR to be a [multi-release JAR](https:\u002F\u002Fwww.baeldung.com\u002Fjava-multi-release-jar). This is necessary when any of the initial JARs is a multi-release JAR\n\nRunning `mvn package` yields two artifacts:\n\n1. `\u003Cname\u003E-\u003Cversion\u003E.jar`: the self-contained executable JAR\n2. `original-\u003Cname\u003E-\u003Cversion\u003E.jar`: the \"normal\" JAR without the embedded dependencies\n\nWith the sample project, the final executable still doesn't work as expected. Indeed, there are a lot of warnings regarding duplicate resources during the build. Two of them prevent the sample project from working correctly. To merge them correctly, we need to have a look at their format:\n\n* `META-INF\u002Forg\u002Fapache\u002Flogging\u002Flog4j\u002Fcore\u002Fconfig\u002Fplugins\u002FLog4j2Plugins.dat`: This Log4J2 file contains pre-compiled Log4J2 plugin data. It's encoded in binary format and none of the out-of-the-box transformers can merge such files. Yet, a casual search reveals somebody already had this issue and released [a transformer](https:\u002F\u002Fgithub.com\u002Fedwgiz\u002Fmaven-shaded-log4j-transformer) to handle the merge.\n* `META-INF\u002Fspring.factories`: These Spring-specific files have a single key\u002Fmultiple values format. While they are text-based, no out-of-the-box transformer can merge them correctly. However, the Spring developers provide this capability (and much more) in [their plugin](https:\u002F\u002Fgithub.com\u002Fspring-projects\u002Fspring-boot).\n\nTo configure these transformers, we need to add the above libraries as dependencies to the Shade plugin:\n\n```xml\n\u003Cplugin\u003E\n  \u003CartifactId\u003Emaven-shade-plugin\u003C\u002FartifactId\u003E\n  \u003Cversion\u003E3.2.4\u003C\u002Fversion\u003E\n  \u003Cexecutions\u003E\n    \u003Cexecution\u003E\n      \u003Cgoals\u003E\n        \u003Cgoal\u003Eshade\u003C\u002Fgoal\u003E\n      \u003C\u002Fgoals\u003E\n      \u003Cconfiguration\u003E\n        \u003Ctransformers\u003E\n          \u003Ctransformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"\u003E\n            \u003CmainClass\u003Ech.frankel.blog.executablejar.ExecutableJarApplication\u003C\u002FmainClass\u003E\n            \u003CmanifestEntries\u003E\n              \u003CMulti-Release\u003Etrue\u003C\u002FMulti-Release\u003E\n            \u003C\u002FmanifestEntries\u003E\n          \u003C\u002Ftransformer\u003E\n          \u003Ctransformer implementation=\"com.github.edwgiz.maven_shade_plugin.log4j2_cache_transformer.PluginsCacheFileTransformer\" \u002F\u003E \u003C!--1--\u003E\n          \u003Ctransformer implementation=\"org.springframework.boot.maven.PropertiesMergingResourceTransformer\"\u003E \u003C!--2--\u003E\n            \u003Cresource\u003EMETA-INF\u002Fspring.factories\u003C\u002Fresource\u003E\n          \u003C\u002Ftransformer\u003E\n        \u003C\u002Ftransformers\u003E\n      \u003C\u002Fconfiguration\u003E\n    \u003C\u002Fexecution\u003E\n  \u003C\u002Fexecutions\u003E\n  \u003Cdependencies\u003E\n    \u003Cdependency\u003E\n      \u003CgroupId\u003Ecom.github.edwgiz\u003C\u002FgroupId\u003E\n      \u003CartifactId\u003Emaven-shade-plugin.log4j2-cachefile-transformer\u003C\u002FartifactId\u003E \u003C!--3--\u003E\n      \u003Cversion\u003E2.14.0\u003C\u002Fversion\u003E\n    \u003C\u002Fdependency\u003E\n    \u003Cdependency\u003E\n      \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n      \u003CartifactId\u003Espring-boot-maven-plugin\u003C\u002FartifactId\u003E                        \u003C!--3--\u003E\n      \u003Cversion\u003E2.4.1\u003C\u002Fversion\u003E\n    \u003C\u002Fdependency\u003E\n  \u003C\u002Fdependencies\u003E\n\u003C\u002Fplugin\u003E\n```\n\n1. Merge Log4J2 `.dat` files\n2. Merge `\u002FMETA-INF\u002Fspring.factories` files\n3. Add the required transformers code\n\nThis configuration works! Still, there are remaining warnings:\n\n* Manifests\n* Licenses, notices and similar files\n* Spring Boot specific files _i.e._ `spring.handlers`, `spring.schemas` and `spring.tooling`\n* Spring Boot-Kotlin specific files _e.g._ `spring-boot.kotlin_module`, `spring-context.kotlin_module`, etc.\n* Service loader configuration files\n* JSON files\n\nYou can add and configure additional transformers to fix the remaining warnings. All in all, the whole process requires a deep understanding of each kind of resource and how to handle them.\n\n## The Spring Boot plugin\n\nThe Spring Boot plugin adopts an entirely different approach. It doesn't merge resources from JARs individually; it adds dependent JARs *as they are* inside the uber JAR. To load classes and resources, it provides a specific class-loading mechanism. Obviously, it's dedicated to Spring Boot projects.\n\nConfiguring the Spring Boot plugin is straightforward:\n\n```xml\n\u003Cplugin\u003E\n  \u003CgroupId\u003Eorg.springframework.boot\u003C\u002FgroupId\u003E\n  \u003CartifactId\u003Espring-boot-maven-plugin\u003C\u002FartifactId\u003E\n  \u003Cversion\u003E2.4.1\u003C\u002Fversion\u003E\n  \u003Cexecutions\u003E\n    \u003Cexecution\u003E\n      \u003Cgoals\u003E\n        \u003Cgoal\u003Erepackage\u003C\u002Fgoal\u003E\n      \u003C\u002Fgoals\u003E\n    \u003C\u002Fexecution\u003E\n  \u003C\u002Fexecutions\u003E\n\u003C\u002Fplugin\u003E\n```\n\nLet's check the structure of the final JAR:\n\n```\n\u002F\n |__ BOOT-INF\n |    |__ classes           \u002F\u002F 1\n |    |__ lib               \u002F\u002F 2\n |__ META-INF\n |    |__ MANIFEST.MF\n |__ org\n      |__ springframework\n           |__ loader       \u002F\u002F 3\n```\n\n1. Project compiled classes\n2. JAR dependencies\n3. Spring Boot class-loading classes\n\nHere's an excerpt of the manifest for our sample project:\n\n```\nMain-Class: org.springframework.boot.loader.JarLauncher\nStart-Class: ch.frankel.blog.executablejar.ExecutableJarApplication\n```\n\nAs you can see, the main class is a Spring Boot specific class while the \"real\" main class is referenced under another entry.\n\nFor more information on the structure of the JAR, please check the [reference documentation](https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Freference\u002Fhtml\u002Fappendix-executable-jar-format.html).\n\n## Conclusion\n\nIn this post, we've described 3 different ways to create self-contained executable JARs:\n\n1. Assembly is a good fit for simple projects\n2. When the project starts being more complex and you need to handle duplicate files, use Shade\n3. Finally, for Spring Boot projects, your best bet is the dedicated plugin\n\nThe complete source code for this post can be found on [Github](https:\u002F\u002Fgithub.com\u002Fajavageek\u002Fexecutable-jar) in Maven format.\n\n**To go further:**\n\n* [Maven Assembly plugin](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-assembly-plugin\u002F)\n* [Maven Shade plugin](https:\u002F\u002Fmaven.apache.org\u002Fplugins\u002Fmaven-shade-plugin\u002F)\n* [maven-shaded-log4j-transformer](https:\u002F\u002Fgithub.com\u002Fedwgiz\u002Fmaven-shaded-log4j-transformer)\n* [Maven Spring Boot plugin](https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Fmaven-plugin\u002Freference\u002Fhtmlsingle\u002F)\n* [The Executable Jar Format](https:\u002F\u002Fdocs.spring.io\u002Fspring-boot\u002Fdocs\u002Fcurrent\u002Freference\u002Fhtml\u002Fappendix-executable-jar-format.html)\n\n_Originally published at [A Java Geek](https:\u002F\u002Fblog.frankel.ch\u002Fcreating-self-contained-executable-jars) on January 10\u003Csup\u003Eth\u003C\u002Fsup\u003E 2020_\n",user:{name:"Nicolas Frankel",username:d,twitter_username:"nicolas_frankel",github_username:d,website_url:"https:\u002F\u002Fblog.frankel.ch\u002F",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--luuU5bA7--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F362557\u002F8deaa19c-75d9-49d9-abc8-016cc7a68bf6.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--Tvqqeejl--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F362557\u002F8deaa19c-75d9-49d9-abc8-016cc7a68bf6.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fnfrankel\u002F567652",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2021-01-10T17:28:59Z",9,"nfrankel"));