window.__NUXT__=(function(a,b,c,d,e){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634322943",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:537895,title:"A search engine - Part 5: Introducing reflection",description:"We'd like the search engine to handle not only strings, but to store any arbitrary struct type. There...",readable_publish_date:"Dec 9 '20",slug:"a-search-engine-part-5-introducing-reflection-1d9b",path:"\u002Fdavidkroell\u002Fa-search-engine-part-5-introducing-reflection-1d9b",url:c,comments_count:0,public_reactions_count:d,collection_id:9980,published_timestamp:b,positive_reactions_count:d,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--emmrV9rJ--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fva4sle9ahf5eo3yhkz60.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--y_BGZUI6--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fva4sle9ahf5eo3yhkz60.png",canonical_url:c,created_at:b,edited_at:a,crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:4,tag_list:"go, computerscience, algorithms, datastructures",tags:["go","computerscience","algorithms","datastructures"],body_html:"\u003Cp\u003EWe'd like the search engine to handle not only strings, but to store any arbitrary struct type. There are different approaches available. We could use a Golang interface type, maybe some already existing ones, or we could also define a new one.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI'm thinking about something like C#'s \u003Ccode\u003EToString()\u003C\u002Fcode\u003E method.\u003Cbr\u003E\nIn a Golang context, the correct comparison would be the \u003Ccode\u003Efmt.Stringer\u003C\u002Fcode\u003E interface.\u003C\u002Fp\u003E\n\n\u003Cp\u003EThanks to Go's automatic interface implementation, the custom type would have to implement the \u003Ccode\u003EString()\u003C\u002Fcode\u003E method on it, to automatically satisfy this interface.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight go\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStringer\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cblockquote\u003E\n\u003Cp\u003ELook up the type here: \u003Ca href=\"https:\u002F\u002Fpkg.go.dev\u002Ffmt#Stringer\"\u003Ehttps:\u002F\u002Fpkg.go.dev\u002Ffmt#Stringer\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EThe other approach is to use the special type \u003Ccode\u003Einterface{}\u003C\u002Fcode\u003E, the empty interface.\u003Cbr\u003E\nEvery type does satisfy this interface. Then one may search through the underlying type for strings and operate on these. This will introduce reflection. I'll go with this approach, since it's the first time I'll use reflection in Go.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWe already have a package for this in the standard library. It's called \u003Ccode\u003Ereflect\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\n\u003Cp\u003EFirst, we'll have to change the datatype of our \u003Ccode\u003EGlSearch\u003C\u002Fcode\u003E cache slice to the empty interface. In the next step we'll adjust the \u003Ccode\u003EAdd()\u003C\u002Fcode\u003E method.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight go\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGlSearch\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Econfig\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EConfig\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Ecache\u003C\u002Fspan\u003E  \u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Einterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eindex\u003C\u002Fspan\u003E  \u003Cspan class=\"k\"\u003Emap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E][]\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Emu\u003C\u002Fspan\u003E     \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esync\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMutex\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c\"\u003E\u002F\u002F New creates a new GlSearch instance\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ec\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGlSearch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Eglsearch\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGlSearch\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Econfig\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ec\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Ecache\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E  \u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Einterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{}{},\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Eindex\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E  \u003Cspan class=\"k\"\u003Emap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E][]\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{},\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Emu\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E     \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Esync\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMutex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eglsearch\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EFor sure, we have to update all usages of the \u003Ccode\u003Ecache\u003C\u002Fcode\u003E field to align with the new type, but this is not shown here. The \u003Ccode\u003EAdd()\u003C\u002Fcode\u003E method now supports any interface type to be added. Since the \u003Ccode\u003Estring\u003C\u002Fcode\u003E type does also satisfy \u003Ccode\u003Einterface{}\u003C\u002Fcode\u003E as well, we check it just at the beginning.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight go\"\u003E\u003Ccode\u003E\u003Cspan class=\"c\"\u003E\u002F\u002F Add extracts all strings on the interface type and adds them seperately\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGlSearch\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Einterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{})\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emu\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ELock\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Edefer\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emu\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUnlock\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereflect\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValueOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Eswitch\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereflect\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c\"\u003E\u002F\u002F check if the provided interface is already a string\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c\"\u003E\u002F\u002F if so, use type assertion\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EaddString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereflect\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c\"\u003E\u002F\u002F loop through all fields\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ej\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"m\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ej\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumField\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ej\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Ef\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ej\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"c\"\u003E\u002F\u002F check if the struct field is a string\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ef\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ereflect\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EString\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"c\"\u003E\u002F\u002F add the string\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EaddString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ef\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThe method \u003Ccode\u003EaddString()\u003C\u002Fcode\u003E called in the code above is a new one.\u003Cbr\u003E\nIt doesn't use the locking, since it is not accessible to other packages (you may also call it private). The first parameter will be used for indexing and the second one is the actual data which should be appended to the cache.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight go\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGlSearch\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EaddString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Einterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{})\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F the zero-based position our next entry in the cache\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Elen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecache\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c\"\u003E\u002F\u002F add the underlying interface, not only the data used for indexing\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecache\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Eappend\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ecache\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c\"\u003E\u002F\u002F transform our string to build up a useful index\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F split into words using space characters\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Ewords\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esplit\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Es\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Econfig\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESeperators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c\"\u003E\u002F\u002F remove words that occur very often (stopwords, e.g.: the, now, to, ...)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F to improve index quality and minimize memory needs\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EfilterWords\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ewords\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Econfig\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKeepFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Econfig\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETransformFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F update the index for every word\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003E_\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Erange\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ewords\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"c\"\u003E\u002F\u002F append or create if it does not exist already\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eok\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eindex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E];\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eok\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eindex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Eappend\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Eg\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eindex\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ev\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ee\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EIt is no more limited to the \u003Ccode\u003Estring\u003C\u002Fcode\u003E type. Just anything can be added to the cache. The only constraint is, that there are some string fields on the struct attached. Picking the example song earlier in this series, now we could define our custom struct with data in it.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI've chosen a \u003Ccode\u003ELyrics\u003C\u002Fcode\u003E type here to demonstrate the functionality (definition not shown here, there are no more fields than shown in the initialization).\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight go\"\u003E\u003Ccode\u003E\u003Cspan class=\"k\"\u003Efunc\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Emain\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Esearch\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eglsearch\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eglsearch\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDefaultConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003El\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ELyrics\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EReleaseYear\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"m\"\u003E1975\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EAuthor\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E      \u003Cspan class=\"s\"\u003E\"Queen\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EIntro\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"s\"\u003E\"Is this the real life? Is this just fantasy?\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EVerse1\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E      \u003Cspan class=\"s\"\u003E\"Mama, just killed a man\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EOutro\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E       \u003Cspan class=\"s\"\u003E\"Nothing really matters, anyone can see\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Esearch\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003El\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Esr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esearch\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"mama\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Efmt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPrintf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"We searched for %s and found a song released in %d\u003C\u002Fspan\u003E\u003Cspan class=\"se\"\u003E\\n\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c\"\u003E\u002F\u002F again, using type assertions, since any interface type can now be added\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Esr\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esr\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EContents\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"m\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ELyrics\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReleaseYear\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003Efmt\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPrintf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"The whole search result would be: %+v\u003C\u002Fspan\u003E\u003Cspan class=\"se\"\u003E\\n\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c\"\u003E\u002F\u002F Output: We searched for mama and found a song released in 1975\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F The whole search result would be:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F {Filter:mama Matches:1\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F Contents:[{ReleaseYear:1975\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F          Author:Queen Intro:Is this the real life? Is this just fantasy?\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F          Verse1:Mama, just killed a man\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c\"\u003E\u002F\u002F          Outro:Nothing really matters, anyone can see}]}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EAs you can see, we are just searching for \u003Ccode\u003Emama\u003C\u002Fcode\u003E and the whole struct gets returned. We can now access the result struct however we want to.\u003C\u002Fp\u003E\n\n\u003Cp\u003EI hope you enjoyed my series about inverted indizes in Go. For me it was real fun to learn a new data structure and also make use of reflection in Go for the first time. In conclusion I can say that I have learned a lot and I hope you also did. Please do not hesitate to contact me if you see any improvements or mistakes.\u003C\u002Fp\u003E\n\n",body_markdown:"\nWe'd like the search engine to handle not only strings, but to store any arbitrary struct type. There are different approaches available. We could use a Golang interface type, maybe some already existing ones, or we could also define a new one.\n\nI'm thinking about something like C#'s `ToString()` method.\nIn a Golang context, the correct comparison would be the `fmt.Stringer` interface.\n\nThanks to Go's automatic interface implementation, the custom type would have to implement the `String()` method on it, to automatically satisfy this interface.\n\n```go\ntype Stringer interface {\n\tString() string\n}\n```\n\u003E Look up the type here: https:\u002F\u002Fpkg.go.dev\u002Ffmt#Stringer\n\nThe other approach is to use the special type `interface{}`, the empty interface.\nEvery type does satisfy this interface. Then one may search through the underlying type for strings and operate on these. This will introduce reflection. I'll go with this approach, since it's the first time I'll use reflection in Go.\n\nWe already have a package for this in the standard library. It's called `reflect`.\n\nFirst, we'll have to change the datatype of our `GlSearch` cache slice to the empty interface. In the next step we'll adjust the `Add()` method.\n\n```go\ntype GlSearch struct {\n\tconfig Config\n\tcache  []interface{}\n\tindex  map[string][]int\n\tmu     *sync.Mutex\n}\n\n\u002F\u002F New creates a new GlSearch instance\nfunc New(c Config) *GlSearch {\n\n\tglsearch := GlSearch{\n\t\tconfig: c,\n\t\tcache:  []interface{}{},\n\t\tindex:  map[string][]int{},\n\t\tmu:     &sync.Mutex{},\n\t}\n\n\treturn &glsearch\n}\n```\n\nFor sure, we have to update all usages of the `cache` field to align with the new type, but this is not shown here. The `Add()` method now supports any interface type to be added. Since the `string` type does also satisfy `interface{}` as well, we check it just at the beginning.\n\n```go\n\u002F\u002F Add extracts all strings on the interface type and adds them seperately\nfunc (g *GlSearch) Add(i interface{}) {\n\tg.mu.Lock()\n\tdefer g.mu.Unlock()\n\n\tv := reflect.ValueOf(i)\n\n\tswitch v.Type().Kind() {\n\tcase reflect.String:\n\t\t\u002F\u002F check if the provided interface is already a string\n\t\t\u002F\u002F if so, use type assertion\n\t\tg.addString(i.(string), i)\n\n\tcase reflect.Struct:\n\t\t\u002F\u002F loop through all fields\n\t\tfor j := 0; j \u003C v.NumField(); j++ {\n\t\t\tf := v.Field(j)\n\t\t\t\u002F\u002F check if the struct field is a string\n\t\t\tif f.Type().Kind() == reflect.String {\n\t\t\t\t\u002F\u002F add the string\n\t\t\t\tg.addString(f.String(), i)\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nThe method `addString()` called in the code above is a new one.\nIt doesn't use the locking, since it is not accessible to other packages (you may also call it private). The first parameter will be used for indexing and the second one is the actual data which should be appended to the cache.\n\n\n```go\nfunc (g *GlSearch) addString(s string, data interface{}) {\n    \u002F\u002F the zero-based position our next entry in the cache\n    i := len(g.cache)\n\n\t\u002F\u002F add the underlying interface, not only the data used for indexing\n\tg.cache = append(g.cache, data)\n\n\t\u002F\u002F transform our string to build up a useful index\n\t\u002F\u002F split into words using space characters\n\twords := split(s, g.config.Seperators)\n\n\t\u002F\u002F remove words that occur very often (stopwords, e.g.: the, now, to, ...)\n\t\u002F\u002F to improve index quality and minimize memory needs\n\tfilterWords(&words, g.config.KeepFunc, g.config.TransformFunc)\n\t\u002F\u002F update the index for every word\n\n\tfor _, v := range words {\n\n\t\t\u002F\u002F append or create if it does not exist already\n\t\tif e, ok := g.index[v]; !ok {\n\t\t\te = []int{i}\n\t\t\tg.index[v] = e\n\t\t} else {\n\t\t\te = append(e, i)\n\t\t\tg.index[v] = e\n\t\t}\n\t}\n}\n```\n\nIt is no more limited to the `string` type. Just anything can be added to the cache. The only constraint is, that there are some string fields on the struct attached. Picking the example song earlier in this series, now we could define our custom struct with data in it.\n\nI've chosen a `Lyrics` type here to demonstrate the functionality (definition not shown here, there are no more fields than shown in the initialization).\n\n```go\nfunc main() {\n\tsearch := glsearch.New(glsearch.DefaultConfig)\n\n\tl := Lyrics{\n\t\tReleaseYear: 1975,\n\t\tAuthor:      \"Queen\",\n\t\tIntro:       \"Is this the real life? Is this just fantasy?\",\n\t\tVerse1:      \"Mama, just killed a man\",\n\t\tOutro:       \"Nothing really matters, anyone can see\",\n\t}\n\n\tsearch.Add(l)\n\n\tsr := search.Find(\"mama\")\n\n\tfmt.Printf(\"We searched for %s and found a song released in %d\\n\",\n\t\t\u002F\u002F again, using type assertions, since any interface type can now be added\n\t\tsr.Filter, sr.Contents[0].(Lyrics).ReleaseYear)\n\n\tfmt.Printf(\"The whole search result would be: %+v\\n\", sr)\n    \n    \u002F\u002F Output: We searched for mama and found a song released in 1975\n    \u002F\u002F The whole search result would be:\n    \u002F\u002F {Filter:mama Matches:1\n    \u002F\u002F Contents:[{ReleaseYear:1975\n    \u002F\u002F          Author:Queen Intro:Is this the real life? Is this just fantasy?\n    \u002F\u002F          Verse1:Mama, just killed a man\n    \u002F\u002F          Outro:Nothing really matters, anyone can see}]}\n}\n```\n\nAs you can see, we are just searching for `mama` and the whole struct gets returned. We can now access the result struct however we want to.\n\nI hope you enjoyed my series about inverted indizes in Go. For me it was real fun to learn a new data structure and also make use of reflection in Go for the first time. In conclusion I can say that I have learned a lot and I hope you also did. Please do not hesitate to contact me if you see any improvements or mistakes.\n",user:{name:"David Kröll",username:e,twitter_username:a,github_username:e,website_url:"https:\u002F\u002Fdavidkroell.com\u002F",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--gaziwNDG--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F518544\u002F08645c73-d4b9-4801-bb80-7b0ea1cfaac9.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--iiPqX1se--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F518544\u002F08645c73-d4b9-4801-bb80-7b0ea1cfaac9.jpeg"}}},serverRendered:true,routePath:"\u002Farticles\u002Fdavidkroell\u002F537895",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2020-12-09T20:06:21Z","https:\u002F\u002Fdev.to\u002Fdavidkroell\u002Fa-search-engine-part-5-introducing-reflection-1d9b",7,"davidkroell"));