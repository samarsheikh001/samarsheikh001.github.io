window.__NUXT__=(function(a,b,c,d){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1634315825",layout:"default",error:a,state:{currentArticle:{type_of:"article",id:506693,title:"Prerender React using Next js",description:"When you want to improve your website's performance or search engine optimization (SEO), prerendering...",readable_publish_date:"Nov 5 '20",slug:"prerender-react-using-next-js-17jn",path:"\u002Fcodebycorey\u002Fprerender-react-using-next-js-17jn",url:"https:\u002F\u002Fdev.to\u002Fcodebycorey\u002Fprerender-react-using-next-js-17jn",comments_count:0,public_reactions_count:c,collection_id:a,published_timestamp:b,positive_reactions_count:c,cover_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--2ymn52Ze--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjtsrocda5pd7zv5kf6fy.png",social_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--qteNmZU6--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fi\u002Fjtsrocda5pd7zv5kf6fy.png",canonical_url:"https:\u002F\u002Fcodebycorey.com\u002Fblog\u002Fprerender-react-using-next-js",created_at:"2020-11-05T04:11:19Z",edited_at:"2020-12-03T04:10:08Z",crossposted_at:a,published_at:b,last_comment_at:b,reading_time_minutes:4,tag_list:"react, javascript, webdev, seo",tags:["react","javascript","webdev","seo"],body_html:"\u003Cp\u003EWhen you want to improve your website's performance or search engine optimization (SEO), prerendering your application is a must. Next.js is the perfect framework to add server-side rendering (SSR) or static site generation (SSG) for your React web app. \u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"the-problems-caused-by-react\" href=\"#the-problems-caused-by-react\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  The problems caused by React\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWhenever you load the website, the first thing to load is the HTML. The HTML then tells the browser to load additional resources such as styles and JavaScript.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBefore JavaScript frameworks became popular, most websites were built with HTML and only enhanced with JavaScript. When the browser loaded the website, most of the content was in the HTML and was instantly displayed while the extra JavaScript loaded later.\u003C\u002Fp\u003E\n\n\u003Cp\u003EWith React, nothing gets displayed until all of your JavaScript loads. Your HTML is nearly empty and React injects your content in your HTML with JavaScript. \u003C\u002Fp\u003E\n\n\u003Cp\u003EExample HTML with React.\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight html\"\u003E\u003Ccode\u003E\u003Cspan class=\"cp\"\u003E&lt;!DOCTYPE html&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;html\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Elang=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"en\"\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;head&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Echarset=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"utf-8\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"viewport\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"width=device-width, initial-scale=1\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"theme-color\"\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"#000000\"\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;meta\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Ename=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"description\"\u003C\u002Fspan\u003E\n      \u003Cspan class=\"na\"\u003Econtent=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"Web site created using create-react-app\"\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E\u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;title&gt;\u003C\u002Fspan\u003EReact App\u003Cspan class=\"nt\"\u003E&lt;\u002Ftitle&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fhead&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;body&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;noscript&gt;\u003C\u002Fspan\u003EYou need to enable JavaScript to run this app.\u003Cspan class=\"nt\"\u003E&lt;\u002Fnoscript&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nt\"\u003E&lt;div\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Eid=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E\"root\"\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003E&gt;&lt;\u002Fdiv&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nt\"\u003E&lt;\u002Fbody&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"nt\"\u003E&lt;\u002Fhtml&gt;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis leads multiple problems:\u003C\u002Fp\u003E\n\n\u003Col\u003E\n\u003Cli\u003EWhen the browser is loading the JavaScript, the screen is blank because \u003Ccode\u003E&lt;div id=\"root\"&gt;&lt;\u002Fdiv&gt;\u003C\u002Fcode\u003E does not show anything. Depending on the size of your JavaScript bundle, this could lead to your visitors staring at a white screen for a couple of seconds. This is poor UX.\u003C\u002Fli\u003E\n\u003Cli\u003EMost SEO crawlers do not have JavaScript enabled. DuckDuckGo, Google, Bing and any other search engine would not actually know what is on your website since it requires JavaScript to display the content. You will not be ranked at all on Search Engines.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"serverside-rendering-ssr\" href=\"#serverside-rendering-ssr\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Server-Side Rendering (SSR)\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EWebpages are generated on your server for every request. Data required by your page can always be fetched allowing your page to always be up to date. \u003C\u002Fp\u003E\n\n\u003Cp\u003EOne of the draw backs is a slower time to first byte (TTFB) since the server is waiting for data and generating the page.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"static-site-generation-ssg\" href=\"#static-site-generation-ssg\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Static Site Generation (SSG)\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003EAt build time, your app will fetch all the data required and compile it down to static webpages. This provides the best performance and can easily be cached on a CDN. \u003C\u002Fp\u003E\n\n\u003Cp\u003EIf your data changes between builds, you might end up causing your webpage to display stale data.\u003C\u002Fp\u003E\n\n\u003Ch2\u003E\n  \u003Ca name=\"methods-for-prerendering-using-nextjs\" href=\"#methods-for-prerendering-using-nextjs\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Methods for Prerendering using Next.js\n\u003C\u002Fh2\u003E\n\n\u003Cp\u003ENext.js offers SSR and SSG out of the box. All you have to do is add either \u003Ccode\u003EgetStaticProps\u003C\u002Fcode\u003E for (SSG) or \u003Ccode\u003EgetServerSideProps\u003C\u002Fcode\u003E for (SSR) on your pages.\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"getstaticprops\" href=\"#getstaticprops\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  getStaticProps\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E\u003Ccode\u003EgetStaticProps\u003C\u002Fcode\u003E is a server-side function that will only be called at build time. The build will then use the response from \u003Ccode\u003EgetStaticProps\u003C\u002Fcode\u003E to generate a static webpage. \u003C\u002Fp\u003E\n\n\u003Cp\u003EDue to it being called server-side, it is okay to add any sensitive logic or direct calls to databases without worry.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESince stale data is a problem with static generated pages, there is an option you can set to revalidate your static page and rebuild it if data changes. \u003Ccode\u003Erevalidate: 60\u003C\u002Fcode\u003E will check your data every 60 seconds and rebuild the page if needed. \u003C\u002Fp\u003E\n\n\u003Cp\u003EExample Use:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight jsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F This function gets called at build time on server-side.\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EgetStaticProps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eres\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Efetch\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ehttps:\u002F\u002F...\u002Fdata\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eres\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejson\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F By returning { props: data }, the Dashboard component\u003C\u002Fspan\u003E\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F will receive `data` as a prop at build time\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eprops\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F Check if data changes every 60 seconds. \u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F Rebuild page if different\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Erevalidate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E60\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F data will be populated at build time by getStaticProps()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDashboard\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003Ediv\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&lt;\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003Ediv\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESee more details and options from the \u003Ca href=\"https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fbasic-features\u002Fdata-fetching#getstaticprops-static-generation\"\u003Eofficial documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"getserversideprops\" href=\"#getserversideprops\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  getServerSideProps\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003E\u003Ccode\u003EgetServerSideProps\u003C\u002Fcode\u003E is similar to \u003Ccode\u003EgetStaticProps\u003C\u002Fcode\u003E but is called every time the page loads instead of at build time. This ensures that all of your initial data is up to date on every load.\u003C\u002Fp\u003E\n\n\u003Cp\u003EAgain, due to it being called server-side, it is okay to add any sensitive logic or direct calls to databases without worry.\u003C\u002Fp\u003E\n\n\u003Cp\u003ESince this is called on every load, you do not need to revalidate like \u003Ccode\u003EgetStaticProps\u003C\u002Fcode\u003E. This also leads to a slower load time since you are no longer serving a static file, but have to rebuild on every load.\u003C\u002Fp\u003E\n\n\u003Cp\u003EExample Use:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight jsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F This function gets called at build time on server-side.\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EgetServerSideProps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eres\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Efetch\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003Ehttps:\u002F\u002F...\u002Fdata\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eres\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ejson\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F By returning { props: data }, the Dashboard component\u003C\u002Fspan\u003E\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F will receive `data` as a prop at build time\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eprops\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F data will be populated at build time by getServerSideProps()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EDashboard\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003Ediv\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"si\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&lt;\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"nt\"\u003Ediv\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" viewbox=\"0 0 448 512\" class=\"highlight-action highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath fill=\"#fff\" d=\"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ESee more details and options from the \u003Ca href=\"https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fbasic-features\u002Fdata-fetching#getserversideprops-server-side-rendering\"\u003Eofficial documentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"best-choice\" href=\"#best-choice\" class=\"anchor\"\u003E\n  \u003C\u002Fa\u003E\n  Best choice\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EIf performance is your number one priority, SSG is the better solution. You are not waiting for your server to respond and your static generated site can be cached across a CDN.\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you are worried about stale data, you can have a static generated shell with loading states and fetch the data client-side in parallel. You get the benefit of having a fast TTFB while keeping your data up to date.\u003C\u002Fp\u003E\n\n\n\u003Chr\u003E\n\n\u003Cul\u003E\n\u003Cli\u003ENext.js \u003Ca href=\"https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fgetting-started\"\u003EDocs\u003C\u002Fa\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EFollow me on \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FCodeByCorey\"\u003ETwitter\u003C\u002Fa\u003E for random posts about tech and programming. I am also documenting my journey learning design.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n",body_markdown:"When you want to improve your website's performance or search engine optimization (SEO), prerendering your application is a must. Next.js is the perfect framework to add server-side rendering (SSR) or static site generation (SSG) for your React web app. \n\n## The problems caused by React\n\nWhenever you load the website, the first thing to load is the HTML. The HTML then tells the browser to load additional resources such as styles and JavaScript.\n\nBefore JavaScript frameworks became popular, most websites were built with HTML and only enhanced with JavaScript. When the browser loaded the website, most of the content was in the HTML and was instantly displayed while the extra JavaScript loaded later.\n\nWith React, nothing gets displayed until all of your JavaScript loads. Your HTML is nearly empty and React injects your content in your HTML with JavaScript. \n\nExample HTML with React.\n```html\n\u003C!DOCTYPE html\u003E\n\u003Chtml lang=\"en\"\u003E\n  \u003Chead\u003E\n    \u003Cmeta charset=\"utf-8\" \u002F\u003E\n    \u003Cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \u002F\u003E\n    \u003Cmeta name=\"theme-color\" content=\"#000000\" \u002F\u003E\n    \u003Cmeta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    \u002F\u003E\n    \u003Ctitle\u003EReact App\u003C\u002Ftitle\u003E\n  \u003C\u002Fhead\u003E\n  \u003Cbody\u003E\n    \u003Cnoscript\u003EYou need to enable JavaScript to run this app.\u003C\u002Fnoscript\u003E\n    \u003Cdiv id=\"root\"\u003E\u003C\u002Fdiv\u003E\n  \u003C\u002Fbody\u003E\n\u003C\u002Fhtml\u003E\n```\n\nThis leads multiple problems:\n1. When the browser is loading the JavaScript, the screen is blank because `\u003Cdiv id=\"root\"\u003E\u003C\u002Fdiv\u003E` does not show anything. Depending on the size of your JavaScript bundle, this could lead to your visitors staring at a white screen for a couple of seconds. This is poor UX.\n2. Most SEO crawlers do not have JavaScript enabled. DuckDuckGo, Google, Bing and any other search engine would not actually know what is on your website since it requires JavaScript to display the content. You will not be ranked at all on Search Engines.\n\n## Server-Side Rendering (SSR)\n\nWebpages are generated on your server for every request. Data required by your page can always be fetched allowing your page to always be up to date. \n\nOne of the draw backs is a slower time to first byte (TTFB) since the server is waiting for data and generating the page.\n\n## Static Site Generation (SSG)\n\nAt build time, your app will fetch all the data required and compile it down to static webpages. This provides the best performance and can easily be cached on a CDN. \n\nIf your data changes between builds, you might end up causing your webpage to display stale data.\n\n## Methods for Prerendering using Next.js\n\nNext.js offers SSR and SSG out of the box. All you have to do is add either `getStaticProps` for (SSG) or `getServerSideProps` for (SSR) on your pages.\n\n### getStaticProps\n\n`getStaticProps` is a server-side function that will only be called at build time. The build will then use the response from `getStaticProps` to generate a static webpage. \n\nDue to it being called server-side, it is okay to add any sensitive logic or direct calls to databases without worry.\n\nSince stale data is a problem with static generated pages, there is an option you can set to revalidate your static page and rebuild it if data changes. `revalidate: 60` will check your data every 60 seconds and rebuild the page if needed. \n\nExample Use:\n```jsx\n\u002F\u002F This function gets called at build time on server-side.\nexport async function getStaticProps() {\n\n  const res = await fetch('https:\u002F\u002F...\u002Fdata')\n  const data = await res.json()\n\n  \u002F\u002F By returning { props: data }, the Dashboard component\n  \u002F\u002F will receive `data` as a prop at build time\n  return {\n    props: {\n      data,\n    },\n    \u002F\u002F Check if data changes every 60 seconds. \n    \u002F\u002F Rebuild page if different\n    revalidate: 60, \n  }\n}\n\n\u002F\u002F data will be populated at build time by getStaticProps()\nexport default function Dashboard({ data }) {\n  return (\n      \u003Cdiv\u003E{data}\u003C\u002Fdiv\u003E\n  )\n}\n```\n\nSee more details and options from the [official documentation](https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fbasic-features\u002Fdata-fetching#getstaticprops-static-generation)\n\n### getServerSideProps\n\n`getServerSideProps` is similar to `getStaticProps` but is called every time the page loads instead of at build time. This ensures that all of your initial data is up to date on every load.\n\nAgain, due to it being called server-side, it is okay to add any sensitive logic or direct calls to databases without worry.\n\nSince this is called on every load, you do not need to revalidate like `getStaticProps`. This also leads to a slower load time since you are no longer serving a static file, but have to rebuild on every load.\n\nExample Use:\n```jsx\n\u002F\u002F This function gets called at build time on server-side.\nexport async function getServerSideProps() {\n\n  const res = await fetch('https:\u002F\u002F...\u002Fdata')\n  const data = await res.json()\n\n  \u002F\u002F By returning { props: data }, the Dashboard component\n  \u002F\u002F will receive `data` as a prop at build time\n  return {\n    props: {\n      data,\n    }\n  }\n}\n\n\u002F\u002F data will be populated at build time by getServerSideProps()\nexport default function Dashboard({ data }) {\n  return (\n      \u003Cdiv\u003E{data}\u003C\u002Fdiv\u003E\n  )\n}\n```\n\nSee more details and options from the [official documentation](https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fbasic-features\u002Fdata-fetching#getserversideprops-server-side-rendering)\n\n### Best choice\n\nIf performance is your number one priority, SSG is the better solution. You are not waiting for your server to respond and your static generated site can be cached across a CDN.\n\nIf you are worried about stale data, you can have a static generated shell with loading states and fetch the data client-side in parallel. You get the benefit of having a fast TTFB while keeping your data up to date.\n\n---\n- Next.js [Docs](https:\u002F\u002Fnextjs.org\u002Fdocs\u002Fgetting-started)\n- Follow me on [Twitter](https:\u002F\u002Ftwitter.com\u002FCodeByCorey) for random posts about tech and programming. I am also documenting my journey learning design.",user:{name:"Corey O'Donnell",username:"codebycorey",twitter_username:d,github_username:d,website_url:"https:\u002F\u002Fcodebycorey.com",profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--lEPAbaaY--\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F432116\u002F522f3e3b-ec28-4346-8509-1ecddb9d15f8.png",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--LgZJcLmP--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F432116\u002F522f3e3b-ec28-4346-8509-1ecddb9d15f8.png"}}},serverRendered:true,routePath:"\u002Farticles\u002Fcodebycorey\u002F506693",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}}}}(null,"2020-11-05T14:08:13Z",27,"CodeByCorey"));