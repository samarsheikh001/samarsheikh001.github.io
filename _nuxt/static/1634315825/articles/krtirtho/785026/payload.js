__NUXT_JSONP__("/articles/krtirtho/785026", (function(a,b,c,d,e){a.type_of="article";a.id=785026;a.title="Nestjsüê∫‚ö° | The framework of Nodejs (Part-1) | Controllers, ExceptionFilters, Providers";a.description="Nestjs is a server-side framework often confused  with the term \"Server-Side Angular\"  Even though...";a.readable_publish_date="Aug 8";a.slug="nestjs-the-framework-of-nodejs-part-1-gl7";a.path="\u002Fkrtirtho\u002Fnestjs-the-framework-of-nodejs-part-1-gl7";a.url=b;a.comments_count=12;a.public_reactions_count=c;a.collection_id=14048;a.published_timestamp=d;a.positive_reactions_count=c;a.cover_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--5SxP9sfX--\u002Fc_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fo7c3og3o7n68khnpy21l.jpg";a.social_image="https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--AhSySYF5--\u002Fc_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Farticles\u002Fo7c3og3o7n68khnpy21l.jpg";a.canonical_url=b;a.created_at="2021-08-08T07:30:04Z";a.edited_at="2021-09-05T11:58:05Z";a.crossposted_at=e;a.published_at=d;a.last_comment_at="2021-09-06T07:51:38Z";a.reading_time_minutes=8;a.tag_list="javascript, typescript, webdev, tutorial";a.tags=["javascript","typescript","webdev","tutorial"];a.body_html="\u003Cp\u003ENestjs is a server-side framework often confused  with the term \"Server-Side Angular\"\u003C\u002Fp\u003E\n\n\u003Cp\u003EEven though Nest follows the pattern &amp; design principals of Google's Angular but its significantly different than Angular by design\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003ENestjs is a abstraction layer over traditional nodejs server-side tools &amp; packages\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003ESo please don't compare it with http-servers such as: express, koa, fastify, hapi etc.. Nestjs actually uses express &amp; fastify as its platform for http server\u003C\u002Fp\u003E\n\n\u003Cp\u003ENestjs centralizes all the needed technologies\u002Ftools to build perfect, reliable &amp; durable enterprise servers using Nodejs. Its in the league of Django, Spring Boot, Ruby on Rails etc.. server-side frameworks\u003C\u002Fp\u003E\n\n\u003Cp\u003EIt follows micro-services architecture but can be used for monolithic servers too\u003C\u002Fp\u003E\n\n\u003Cp\u003EFeatures of Nestjs: (source: \u003Ca href=\"https:\u002F\u002Fdocs.nestjs.com\"\u003Ehttps:\u002F\u002Fdocs.nestjs.com\u003C\u002Fa\u003E)\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003EExtensible, Reliable, Versatile, Progressive framework\u003C\u002Fli\u003E\n\u003Cli\u003EOffers clean, straight forward &amp; understandable architecture\u003C\u002Fli\u003E\n\u003Cli\u003EOffers out of the box:\n\n\u003Cul\u003E\n\u003Cli\u003EDependency Injection,\u003C\u002Fli\u003E\n\u003Cli\u003ERouting with decorators using Controllers\u003C\u002Fli\u003E\n\u003Cli\u003ESecurity with \u003Ccode\u003Ehelmet\u003C\u002Fcode\u003E, \u003Ccode\u003Ecors\u003C\u002Fcode\u003E , \u003Ccode\u003Enode-csrf\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003EException filters (unhandled exception layer)\u003C\u002Fli\u003E\n\u003Cli\u003EGuards\u003C\u002Fli\u003E\n\u003Cli\u003ESeparation of logic from controllers using Providers\u003C\u002Fli\u003E\n\u003Cli\u003ERobust Module system\u003C\u002Fli\u003E\n\u003Cli\u003ELifecycle events &amp; many more\u003C\u002Fli\u003E\n\u003Cli\u003Eunit-testing &amp; integration-testing support with \u003Ccode\u003Ejest\u003C\u002Fcode\u003E &amp; \u003Ccode\u003Esuper-test\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003Cli\u003EIt provides\u002Fsupports (through packages):\n\n\u003Cul\u003E\n\u003Cli\u003Ehttp-server (express\u002Ffastify)\u003C\u002Fli\u003E\n\u003Cli\u003EGraphQL server\u003C\u002Fli\u003E\n\u003Cli\u003Ewebsocket server (socket.io\u002Fws)\u003C\u002Fli\u003E\n\u003Cli\u003Edatabase orm (sequelize\u002Fmongoose\u002Ftypeorm\u002Fknex\u002Fprism)\u003C\u002Fli\u003E\n\u003Cli\u003Erequest body validation using \u003Ccode\u003Eclass-validator\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Ecaching using \u003Ccode\u003Ecache-manager\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Etask-scheduling using \u003Ccode\u003Ecron\u003C\u002Fcode\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003Etask queue using \u003Ccode\u003Ebull\u003C\u002Fcode\u003E &amp; many more other tools\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EThis is not a complete tutorial. If you want to learn Nestjs completely visit \u003Ca href=\"https:\u002F\u002Fdocs.nestjs.com\"\u003Ehttps:\u002F\u002Fdocs.nestjs.com\u003C\u002Fa\u003E. It contains complete details about Nestjs\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EAll of the names &amp; technical terms might feel over whelming but these are pretty easy to implement. Some of 'em take 5-10 lines of code only to implement. But each of them are equally important for a enterprise server or a server with smaller user-base. Nestjs covers the architecture &amp; the dependencies for us\u003C\u002Fp\u003E\n\n\u003Cp\u003EA fact, Nestjs actually helps &amp; guides us as a new backend developer towards all important tools along being used as a tool\u003C\u002Fp\u003E\n\n\u003Cp\u003ENestjs also has a powerful cli, named \u003Ccode\u003E@nestjs\u002Fcli\u003C\u002Fcode\u003E. It helps manipulating files\u002Fmodules. Its kinda like Angluar's CLI but only handles files &amp; modules. It helps you organizing your project more efficiently\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EI'll be doing a 3 parts of Nestjs tutorial.  In part-1 or this part, I'll cover about only \u003Ccode\u003EControllers\u003C\u002Fcode\u003E, \u003Ccode\u003EExceptionFilters\u003C\u002Fcode\u003E &amp; \u003Ccode\u003EProviders\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EBut first lets create the project using:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enpm \u003Cspan class=\"nb\"\u003Einstall\u003C\u002Fspan\u003E \u003Cspan class=\"nt\"\u003E-g\u003C\u002Fspan\u003E @nestjs\u002Fcli\n\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enest new hello-world \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Ecd \u003C\u002Fspan\u003Ehello-world\n\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enpm run start:dev\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EThis will create a directory structure of following:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight plaintext\"\u003E\u003Ccode\u003Ehello-world\u002F\n‚îú‚îÄ‚îÄ src\u002F\n‚îÇ   ‚îú‚îÄ‚îÄ app.controller.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.controller.spec.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.module.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.service.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.service.spec.ts\n‚îÇ   ‚îî‚îÄ‚îÄ main.ts\n‚îú‚îÄ‚îÄ test\u002F\n‚îÇ   ‚îú‚îÄ‚îÄ app.e2e-spec.ts\n‚îÇ   ‚îî‚îÄ‚îÄ jest.e2e.json\n‚îú‚îÄ‚îÄ .gitignore\n‚îú‚îÄ‚îÄ .eslintrc.js\n‚îú‚îÄ‚îÄ .prettierrc\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ nest-cli.json\n‚îú‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ package-lock.json\n‚îú‚îÄ‚îÄ tsconfig.build.json\n‚îî‚îÄ‚îÄ tsconfig.json\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow lets create a directory \u003Ccode\u003Ehello\u003C\u002Fcode\u003E inside \u003Ccode\u003Esrc\u003C\u002Fcode\u003E &amp; inside \u003Ccode\u003Ehello\u003C\u002Fcode\u003E create 4 files for this tutorial\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Ehello.controller.ts\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ehello.module.ts\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ehello.service.ts\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ehello-body.dto.ts\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\n\u003Ch3\u003E\n  \u003Ca name=\"1-controllers\" href=\"#1-controllers\"\u003E\n  \u003C\u002Fa\u003E\n  1. Controllers\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EControllers are Nest's building block. These are where one will handle incoming request. You can define the route path with http method modifiers (Get, Post, Put, Delete etc..) decorators\u003C\u002Fp\u003E\n\n\u003Cp\u003EController example:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F hello.controller.ts\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENotFoundException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EParam\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cm\"\u003E\u002F* a logger from nestjs for logging error\u002Fother info *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nl\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[];\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F temporary database\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EreplyHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EHello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u002F:helloId\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F dyanmic parameter just like express, koa-router etc...\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EreplyExactHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n           \u003Cspan class=\"cm\"\u003E\u002F*pass the same dynamic parameter from \"hello\u002F:helloId\" in \n             @Param decorator's first to let nestjs find the parameter\n             correctly\n            *\u002F\u003C\u002Fspan\u003E\n           \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EParam\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EhelloId\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"cm\"\u003E\u002F*returning the correct temp hello message*\u002F\u003C\u002Fspan\u003E\n            \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Efind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENotFoundException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Edesired `hello` not found\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F404 error\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"cm\"\u003E\u002F* will log the error &amp; autmatically send the error as response with all required data *\u002F\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENestjs uses decorator pattern &amp; its primarily written in \u003Cem\u003ETypescript\u003C\u002Fem\u003E but \u003Cem\u003Eit supports JavaScript too.\u003C\u002Fem\u003E  You can also perform validation on request-body using \u003Ccode\u003Eclass-validator\u003C\u002Fcode\u003E\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F main.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENestFactory\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcore\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppModule\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello.module\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EValidationPipe\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ebootstrap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"cm\"\u003E\u002F* Creates a nest application for monolithic servers *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eapp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENestFactory\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EAppModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kc\"\u003Efalse\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F validation is done through Nestjs pipes. \u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F Nestjs Pipes run before a specified request (kinda like middlewre)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"cm\"\u003E\u002F* Enabling Validation pipe globally.\n       Thoough it can be done in module level too\n        *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Eapp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EuseGlobalPipes\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EValidationPipe\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eapp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elisten\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EPORT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"nx\"\u003Ebootstrap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EHere I'm just creating a Nestjs server instance &amp; adding \u003Ccode\u003EValidatonPipe\u003C\u002Fcode\u003E globally. Pipes are just methods that run before Controllers. Pipes can be used at method\u002Fargument level also using \u003Ccode\u003E@UsePipes\u003C\u002Fcode\u003E decorator. You can even create your own custom Pipes. Also you might've noticed \u003Ccode\u003EAppModule\u003C\u002Fcode\u003E . It's the main point of Nestjs for making all the things work. You'l find more about \u003Ccode\u003EAppModule\u003C\u002Fcode\u003E after Exception Filters section\u003C\u002Fp\u003E\n\n\u003Cp\u003ENow lets create a body validation Schema with \u003Ccode\u003Eclass-validator\u003C\u002Fcode\u003E &amp; decorators\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F hello-body.dto.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EIsDefined\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EIsNotEmpty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Eclass-validator\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloBodyDTO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EIsDefined\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EIsNotEmpty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EA custom error message if you want to\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003E\u003Ccode\u003E@IsDefined\u003C\u002Fcode\u003E &amp; \u003Ccode\u003E@IsNotEmpty\u003C\u002Fcode\u003E will validate a string which is defined &amp; at least has a length of 1 or in other words the string shouldn't be just \u003Ccode\u003E\"\"\u003C\u002Fcode\u003E . Now lets use this one in a \u003Ccode\u003E@Post\u003C\u002Fcode\u003E request controller:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F hello.controller.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENotFoundException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EBody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloBodyDTO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello-body.dto\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ev4\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F ... previously written stuff from the `Controller` part\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"c1\"\u003E\u002F\u002F decorator name is similar to http verbs e.g. POST -&gt; @Post\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"nx\"\u003EsaveHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cm\"\u003E\u002F*Just pass the class as a type &amp; the validation will be done automatically*\u002F\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EBody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ebody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloBodyDTO\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n            \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ebody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F saving in the temp db\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"2-exception-filters\" href=\"#2-exception-filters\"\u003E\n  \u003C\u002Fa\u003E\n  2. Exception Filters\n\u003C\u002Fh3\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EException filters\u003C\u002Fstrong\u003E are error handlers that runs when a Controller throws error. It handles that error automatically &amp; sends appropriate, user-friendly error response\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EIf you've followed the code you might've got a hint that Nestjs uses a \u003Ccode\u003EHttpExceptionFilter\u003C\u002Fcode\u003E by default (globally) . The package \u003Ccode\u003E@nestjs\u002Fcommon\u003C\u002Fcode\u003E provides many \u003Ccode\u003EHttpException\u003C\u002Fcode\u003E  inherited Exceptions e.g. \u003Ccode\u003ENotFoundException\u003C\u002Fcode\u003E , \u003Ccode\u003EBadRequestException\u003C\u002Fcode\u003E, \u003Ccode\u003ENotAcceptableException\u003C\u002Fcode\u003E , \u003Ccode\u003EUnauthorizedException\u003C\u002Fcode\u003E and many more. You can even create your very own custom \u003Ccode\u003EExceptionFilter\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fdocs.nestjs.com\u002Fexception-filters#exception-filters-1\"\u003ELearn how to create a custom ExceptionFilter\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EIf you want to use a custom exception filter in a route handler, you've to use \u003Ccode\u003E@UseFilter\u003C\u002Fcode\u003E decorator\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F ... other stuff\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EForbiddenException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ECustomHttpExceptionFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fcustom-filter\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F a simple handler method inside a Controller\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ethrow-error\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EUseFilters\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECustomHttpExceptionFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E\n\u003Cspan class=\"nx\"\u003EerrorThrowingHandler\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(){\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EForbiddenException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Eits forbidden\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F ... other stuff\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EUsing this long code  \u003Ccode\u003E@UseFilters(new HttpExceptionFilter())\u003C\u002Fcode\u003E before every handler\u002Fcontroller can't be hard but if your application has a usecase for using it globally then you just have to use \u003Ccode\u003EuseGlobalFilters\u003C\u002Fcode\u003E of Nestjs server instance &amp; pass all the global filters as parameters\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F main.ts \u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F ...other stuff\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003ECustomHttpExceptionFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fcustom-filter\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"nx\"\u003Eapp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EuseGlobalFilters\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ECustomHttpExceptionFilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F ...other stuff\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Ch3\u003E\n  \u003Ca name=\"3-providers\" href=\"#3-providers\"\u003E\n  \u003C\u002Fa\u003E\n  3. Providers\n\u003C\u002Fh3\u003E\n\n\u003Cp\u003EProviders are another essential part of Nestjs. By far, I was using a temporary variable to store data. That's why such simple thing can be done through Controller handlers. But for bigger, complex logic, it'd be hard to do code separation &amp; reuse. That's where providers comes to play....\u003C\u002Fp\u003E\n\n\u003Cp\u003EYou can declare\u002Fcreate a provider using the \u003Ccode\u003E@Injectable\u003C\u002Fcode\u003E decorator on top of a class. Then Dependency injection\u002FLogging etc can be done through providers\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere's a provider example. I'm using a custom variable as a database for ease of understanding. But most of the time \u003Ccode\u003Ecreate\u003C\u002Fcode\u003E, \u003Ccode\u003Efind\u003C\u002Fcode\u003E, \u003Ccode\u003EfindById\u003C\u002Fcode\u003E, \u003Ccode\u003Edelete\u003C\u002Fcode\u003E, \u003Ccode\u003EdeleteById\u003C\u002Fcode\u003E etc are provided by the database ORM. So in real-world scenarios these methods aren't needed to be implemented in Providers. Providers should be used for handling more complex logic. But for demonstration lets think these methods as complex logic\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F hello.service.ts \u002F\u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EInjectable\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ev4\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EInjectable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nl\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"na\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"na\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EfindById\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Efind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E===\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Euuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Epush\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EdeleteById\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edb\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Efilter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!==\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"s2\"\u003E`DELETED node \u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E${\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E from db`\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ENow, lets convert the \u003Ccode\u003EHelloController\u003C\u002Fcode\u003E for using \u003Ccode\u003EHelloService\u003C\u002Fcode\u003E through Dependency Injection. But before we've to put \u003Ccode\u003EHelloService\u003C\u002Fcode\u003E inside the \u003Ccode\u003EHelloModule\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\n\u003Cblockquote\u003E\n\u003Cp\u003EA module is a class annotated with a \u003Ccode\u003E@Module()\u003C\u002Fcode\u003E decorator. The \u003Ccode\u003E@Module()\u003C\u002Fcode\u003E decorator provides metadata that Nest makes use of to organize the application structure. Each application has at least one module, \u003Cstrong\u003Ea root module\u003C\u002Fstrong\u003E. The root module is the starting point Nest uses to build the application graph - the internal data structure Nest uses to resolve module and provider relationships and dependencies\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003EThat module is the main thing that helps Nest making the dependency graph for Dependency Injection. Example of an \u003Ccode\u003Eapp.module.ts\u003C\u002Fcode\u003E :\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F app.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EModule\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"cm\"\u003E\u002F*This is the base '\u002F' controller *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppController\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002Fapp.controller\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"cm\"\u003E\u002F* basic provider for AppController *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppService\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E.\u002Fapp.service\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E'\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\n  \u003Cspan class=\"cm\"\u003E\u002F*this where descendent modules get added\n            we've to do this if we were importing another inside\n            an other module to be able to use its providers\n     *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eimports\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Econtrollers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EAppController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eproviders\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EAppService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppModule\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EWe've to add every providers (\u003Ccode\u003EInjectable\u003C\u002Fcode\u003E)\u002Fcontrollers that we use inside our controller\u002Fprovider in a module. Lets put \u003Ccode\u003EHelloService\u003C\u002Fcode\u003E &amp; \u003Ccode\u003EHelloController\u003C\u002Fcode\u003E in \u003Ccode\u003EHelloModule\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F hello.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E@nestjs\u002Fcommon\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello.service\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello.controller\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\n  \u003Cspan class=\"cm\"\u003E\u002F* put all providers that is under this module graph to help Nest to\n         inject those in the controllers\n  *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eproviders\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"cm\"\u003E\u002F* put controllers here for letting Nest recognize all the route\u002Fpath &amp;\n     their handlers\n    *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Econtrollers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n  \u003Cspan class=\"cm\"\u003E\u002F*put those providers which you wanna use outside of this module\n    In an outside module when HelloModule gets imported\n  *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"na\"\u003Eexports\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003ETo let Nest recognize \u003Ccode\u003EHelloModule\u003C\u002Fcode\u003E  as module, lets add \u003Ccode\u003EHelloModule\u003C\u002Fcode\u003E inside the \u003Ccode\u003Eimports\u003C\u002Fcode\u003E array of \u003Ccode\u003EAppModule\u003C\u002Fcode\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F app.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F ... previously imported stuff\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello\u002Fhello.module\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E({\u003C\u002Fspan\u003E\n    \u003Cspan class=\"na\"\u003Eimports\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E],\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F ... other properties previously added\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EAppModule\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cblockquote\u003E\n\u003Cp\u003EAnd this \u003Ccode\u003EAppModule\u003C\u002Fcode\u003E is used as the entrypoint of \u003Ccode\u003ENestFactory\u003C\u002Fcode\u003E instance in \u003Ccode\u003Emain.ts\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\n\u003Cp\u003ENow we can easily use \u003Ccode\u003EHelloService\u003C\u002Fcode\u003E  inside \u003Ccode\u003EHelloController\u003C\u002Fcode\u003E or in other Module's controllers\u002Fproviders\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight tsx\"\u003E\u003Ccode\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F\u002F\u002F\u002F\u002F hello.controller.ts \u002F\u002F\u002F\u002F\u002F\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F ... previously imported stuff\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003E.\u002Fhello.service\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"nl\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ELogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EHelloController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"cm\"\u003E\u002F* just create a contructor arg and set the type as the provider\n             &amp; that's gonna do the work\n         *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"kd\"\u003Econstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eprivate\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereadonly\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EreplyHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EHello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u002F:helloId\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EreplyExactHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EParam\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003EhelloId\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"kr\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"cm\"\u003E\u002F*using provider's methods*\u002F\u003C\u002Fspan\u003E\n            \u003Cspan class=\"kd\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EhelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Efind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n                        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003ENotFoundException\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Edesired `hello` not found\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F404 error\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\n      \u003Cspan class=\"p\"\u003E@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EPost\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"s2\"\u003Ehello\u003C\u002Fspan\u003E\u003Cspan class=\"dl\"\u003E\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"nx\"\u003EsaveHello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(@\u003C\u002Fspan\u003E\u003Cspan class=\"nd\"\u003EBody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ebody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EHelloBodyDTO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Etry\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"cm\"\u003E\u002F* creating `hello` using the provider HelloService *\u002F\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003EhelloService\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ecreate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ebody\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Ecatch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Elogger\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E?.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Emessage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E??\u003C\u002Fspan\u003E \u003Cspan class=\"dl\"\u003E\"\"\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eerror\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EDon't be afraid of Nestjs's Module system. Its hard for the first time but once you get the idea, it all makes sense &amp; this module system is required for Nestjs to do all those cool Dependecy Injection.\u003C\u002Fp\u003E\n\n\u003Cp\u003EBTW, you don't have to add providers\u002Fcontrollers manually in the Module. If you create modules\u002Fproviders\u002Fcontroller using the \u003Cstrong\u003Enest-cli,\u003C\u002Fstrong\u003E it'll be done automatically. Above mentioned Module managing steps can be done automatically just by using these 3 commands\u003C\u002Fp\u003E\n\n\u003Cp\u003Ecreate a \u003Cstrong\u003Emodule\u003C\u002Fstrong\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enest g module hello\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003Ecreate a \u003Cstrong\u003Econtroller\u003C\u002Fstrong\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enest g controller hello\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003Ecreate a \u003Cstrong\u003Eprovider\u003C\u002Fstrong\u003E:\u003Cbr\u003E\n\u003C\u002Fp\u003E\n\n\u003Cdiv class=\"highlight js-code-highlight\"\u003E\n\u003Cpre class=\"highlight shell\"\u003E\u003Ccode\u003E\u003Cspan class=\"nv\"\u003E$ \u003C\u002Fspan\u003Enest g provider hello\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"highlight__panel js-actions-panel\"\u003E\n\u003Cdiv class=\"highlight__panel-action js-fullscreen-code-action\"\u003E\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"\u003E\u003Ctitle\u003EEnter fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n    \u003Csvg xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"\u003E\u003Ctitle\u003EExit fullscreen mode\u003C\u002Ftitle\u003E\n    \u003Cpath d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"\u003E\u003C\u002Fpath\u003E\n\u003C\u002Fsvg\u003E\n\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdiv\u003E\n\n\n\n\u003Cp\u003EPlease don't hurt meüò∂. I know, I should've shown this easier way earlierüòÅ. But that idea of how module works in Nestjs often troubles people to not use Nestjs. So its important to getting the deep insight of it. You can take deep insight of Nestjs Module system \u003Ca href=\"https:\u002F\u002Fdocs.nestjs.com\u002Fmodules\"\u003Ehere\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\n\u003Cp\u003EHere's the complete application\u003C\u002Fp\u003E\n\n\u003Cp\u003E\u003Ciframe src=\"https:\u002F\u002Fcodesandbox.io\u002Fembed\u002Fhello-world-rj3u4\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" loading=\"lazy\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\u003E\n\u003C\u002Fiframe\u003E\n\u003C\u002Fp\u003E\n\n";a.body_markdown="Nestjs is a server-side framework often confused  with the term \"Server-Side Angular\"\n\nEven though Nest follows the pattern & design principals of Google's Angular but its significantly different than Angular by design\n\n\u003E Nestjs is a abstraction layer over traditional nodejs server-side tools & packages\n\nSo please don't compare it with http-servers such as: express, koa, fastify, hapi etc.. Nestjs actually uses express & fastify as its platform for http server\n\nNestjs centralizes all the needed technologies\u002Ftools to build perfect, reliable & durable enterprise servers using Nodejs. Its in the league of Django, Spring Boot, Ruby on Rails etc.. server-side frameworks\n\nIt follows micro-services architecture but can be used for monolithic servers too\n\nFeatures of Nestjs: (source: https:\u002F\u002Fdocs.nestjs.com)\n\n- Extensible, Reliable, Versatile, Progressive framework\n- Offers clean, straight forward & understandable architecture\n- Offers out of the box:\n    - Dependency Injection,\n    - Routing with decorators using Controllers\n    - Security with `helmet`, `cors` , `node-csrf`\n    - Exception filters (unhandled exception layer)\n    - Guards\n    - Separation of logic from controllers using Providers\n    - Robust Module system\n    - Lifecycle events & many more\n    - unit-testing & integration-testing support with `jest` & `super-test`\n- It provides\u002Fsupports (through packages):\n    - http-server (express\u002Ffastify)\n    - GraphQL server\n    - websocket server (socket.io\u002Fws)\n    - database orm (sequelize\u002Fmongoose\u002Ftypeorm\u002Fknex\u002Fprism)\n    - request body validation using `class-validator`\n    - caching using `cache-manager`\n    - task-scheduling using `cron`\n    - task queue using `bull` & many more other tools\n\n\u003E This is not a complete tutorial. If you want to learn Nestjs completely visit https:\u002F\u002Fdocs.nestjs.com. It contains complete details about Nestjs\n\nAll of the names & technical terms might feel over whelming but these are pretty easy to implement. Some of 'em take 5-10 lines of code only to implement. But each of them are equally important for a enterprise server or a server with smaller user-base. Nestjs covers the architecture & the dependencies for us\n\nA fact, Nestjs actually helps & guides us as a new backend developer towards all important tools along being used as a tool\n\nNestjs also has a powerful cli, named `@nestjs\u002Fcli`. It helps manipulating files\u002Fmodules. Its kinda like Angluar's CLI but only handles files & modules. It helps you organizing your project more efficiently\n\n\u003E I'll be doing a 3 parts of Nestjs tutorial.  In part-1 or this part, I'll cover about only `Controllers`, `ExceptionFilters` & `Providers`\n\nBut first lets create the project using:\n\n```bash\n$ npm install -g @nestjs\u002Fcli\n$ nest new hello-world && cd hello-world\n$ npm run start:dev\n```\n\nThis will create a directory structure of following:\n\n```\nhello-world\u002F\n‚îú‚îÄ‚îÄ src\u002F\n‚îÇ   ‚îú‚îÄ‚îÄ app.controller.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.controller.spec.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.module.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.service.ts\n‚îÇ   ‚îú‚îÄ‚îÄ app.service.spec.ts\n‚îÇ   ‚îî‚îÄ‚îÄ main.ts\n‚îú‚îÄ‚îÄ test\u002F\n‚îÇ   ‚îú‚îÄ‚îÄ app.e2e-spec.ts\n‚îÇ   ‚îî‚îÄ‚îÄ jest.e2e.json\n‚îú‚îÄ‚îÄ .gitignore\n‚îú‚îÄ‚îÄ .eslintrc.js\n‚îú‚îÄ‚îÄ .prettierrc\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ nest-cli.json\n‚îú‚îÄ‚îÄ package.json\n‚îú‚îÄ‚îÄ package-lock.json\n‚îú‚îÄ‚îÄ tsconfig.build.json\n‚îî‚îÄ‚îÄ tsconfig.json\n```\n\nNow lets create a directory `hello` inside `src` & inside `hello` create 4 files for this tutorial\n\n- `hello.controller.ts`\n- `hello.module.ts`\n- `hello.service.ts`\n- `hello-body.dto.ts`\n\n### 1. Controllers\n\nControllers are Nest's building block. These are where one will handle incoming request. You can define the route path with http method modifiers (Get, Post, Put, Delete etc..) decorators\n\nController example:\n\n```tsx\n\u002F\u002F hello.controller.ts\n\nimport {Controller, Logger, Get, NotFoundException, Param} from \"@nestjs\u002Fcommon\"\n\n@Controller()\nexport class HelloController{\n\t\t\u002F* a logger from nestjs for logging error\u002Fother info *\u002F\n    logger: Logger = new Logger(HelloController.name)\n    db: {id: string, message: string}[] = []; \u002F\u002F temporary database\n\n    @Get(\"hello\")\n    async replyHello() {\n        try {\n            return \"Hello\";\n        } catch (error) {\n            this.logger.error(error?.message ?? \"\");\n            throw error;\n        }\n    }\n\n    @Get(\"hello\u002F:helloId\") \u002F\u002F dyanmic parameter just like express, koa-router etc...\n\t\tasync replyExactHello(\n           \u002F*pass the same dynamic parameter from \"hello\u002F:helloId\" in \n             @Param decorator's first to let nestjs find the parameter\n             correctly\n            *\u002F\n           @Param(\"helloId\") id: string\n        ) {\n        try {\n            \u002F*returning the correct temp hello message*\u002F\n            const message = this.db.find(hello=\u003Ehello.id===id)?.message\n            if(!message) throw new NotFoundException(\"desired `hello` not found\") \u002F\u002F404 error\n            return message;\n        } catch (error) {\n            \u002F* will log the error & autmatically send the error as response with all required data *\u002F\n            this.logger.error(error?.message ?? \"\");\n            throw error;\n        }\n    }\n}\n```\n\nNestjs uses decorator pattern & its primarily written in *Typescript* but *it supports JavaScript too.*  You can also perform validation on request-body using `class-validator`\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F main.ts \u002F\u002F\u002F\u002F\u002F\u002F\nimport { NestFactory } from \"@nestjs\u002Fcore\";\nimport { AppModule } from \".\u002Fhello.module\";\nimport { ValidationPipe } from \"@nestjs\u002Fcommon\";\n\nasync function bootstrap() {\n    \u002F* Creates a nest application for monolithic servers *\u002F\n    const app = await NestFactory.create(AppModule, { logger: false });\n\n    \u002F\u002F validation is done through Nestjs pipes. \n    \u002F\u002F Nestjs Pipes run before a specified request (kinda like middlewre)\n    \u002F* Enabling Validation pipe globally.\n       Thoough it can be done in module level too\n\t\t*\u002F\n    app.useGlobalPipes(new ValidationPipe());\n    await app.listen(PORT);\n}\nbootstrap()\n\n```\n\nHere I'm just creating a Nestjs server instance & adding `ValidatonPipe` globally. Pipes are just methods that run before Controllers. Pipes can be used at method\u002Fargument level also using `@UsePipes` decorator. You can even create your own custom Pipes. Also you might've noticed `AppModule` . It's the main point of Nestjs for making all the things work. You'l find more about `AppModule` after Exception Filters section\n\n Now lets create a body validation Schema with `class-validator` & decorators\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F hello-body.dto.ts \u002F\u002F\u002F\u002F\u002F\u002F\nimport {IsDefined, IsNotEmpty} from \"class-validator\"\n\nexport class HelloBodyDTO{\n  @IsDefined()\n  @IsNotEmpty({message: \"A custom error message if you want to\"})\n\tmessage!: string;\n}\n```\n\n`@IsDefined` & `@IsNotEmpty` will validate a string which is defined & at least has a length of 1 or in other words the string shouldn't be just `\"\"` . Now lets use this one in a `@Post` request controller:\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F hello.controller.ts \u002F\u002F\u002F\u002F\u002F\u002F\nimport {Controller, Logger, Get, NotFoundException, Post, Body} from \"@nestjs\u002Fcommon\"\nimport {HelloBodyDTO} from \".\u002Fhello-body.dto\"\nimport {v4 as uuid} from \"uuid\"\n\n@Controller()\nexport class HelloController{\n  \u002F\u002F ... previously written stuff from the `Controller` part\n\n  \u002F\u002F decorator name is similar to http verbs e.g. POST -\u003E @Post\n  @Post(\"hello\")\n\tsaveHello(\n\t\t\u002F*Just pass the class as a type & the validation will be done automatically*\u002F\n\t\t@Body() body: HelloBodyDTO\n\t){\n\t\ttry{\n      const id = uuid()\n\t\t\tconst hello = {id, message: body.message}\n\t\t\tthis.db.push(hello) \u002F\u002F saving in the temp db\n\t\t\treturn hello;\n\t\t}\n\t\tcatch (error){\n\t\t\t\tthis.logger.error(error?.message ?? \"\");\n        throw error;\n\t\t}\n\t}\n}\n\n```\n\n### 2. Exception Filters\n\n\u003E **Exception filters** are error handlers that runs when a Controller throws error. It handles that error automatically & sends appropriate, user-friendly error response\n\nIf you've followed the code you might've got a hint that Nestjs uses a `HttpExceptionFilter` by default (globally) . The package `@nestjs\u002Fcommon` provides many `HttpException`  inherited Exceptions e.g. `NotFoundException` , `BadRequestException`, `NotAcceptableException` , `UnauthorizedException` and many more. You can even create your very own custom `ExceptionFilter`\n\n[Learn how to create a custom ExceptionFilter](https:\u002F\u002Fdocs.nestjs.com\u002Fexception-filters#exception-filters-1)\n\nIf you want to use a custom exception filter in a route handler, you've to use `@UseFilter` decorator\n\n```tsx\n\u002F\u002F ... other stuff\nimport {ForbiddenException} from \"@nestjs\u002Fcommon\"\nimport {CustomHttpExceptionFilter} from \".\u002Fcustom-filter\"\n\n\u002F\u002F a simple handler method inside a Controller\n@Post(\"throw-error\")\n@UseFilters(new CustomHttpExceptionFilter())\nerrorThrowingHandler(){\n\tthrow new ForbiddenException(\"its forbidden\");\n}\n\u002F\u002F ... other stuff\n```\n\nUsing this long code  `@UseFilters(new HttpExceptionFilter())` before every handler\u002Fcontroller can't be hard but if your application has a usecase for using it globally then you just have to use `useGlobalFilters` of Nestjs server instance & pass all the global filters as parameters\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F main.ts \u002F\u002F\u002F\u002F\u002F\n\n\u002F\u002F ...other stuff\nimport {CustomHttpExceptionFilter} from \".\u002Fcustom-filter\"\n\napp.useGlobalFilters(new CustomHttpExceptionFilter())\n\u002F\u002F ...other stuff\n```\n\n### 3. Providers\n\nProviders are another essential part of Nestjs. By far, I was using a temporary variable to store data. That's why such simple thing can be done through Controller handlers. But for bigger, complex logic, it'd be hard to do code separation & reuse. That's where providers comes to play....\n\nYou can declare\u002Fcreate a provider using the `@Injectable` decorator on top of a class. Then Dependency injection\u002FLogging etc can be done through providers\n\nHere's a provider example. I'm using a custom variable as a database for ease of understanding. But most of the time `create`, `find`, `findById`, `delete`, `deleteById` etc are provided by the database ORM. So in real-world scenarios these methods aren't needed to be implemented in Providers. Providers should be used for handling more complex logic. But for demonstration lets think these methods as complex logic\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F hello.service.ts \u002F\u002F\u002F\u002F\u002F\u002F\u002F\n\nimport { Injectable } from \"@nestjs\u002Fcommon\"\nimport {v4 as uuid} from \"uuid\"\n\n@Injectable()\nexport class HelloService{\n  db: {id: string, message: string}[] = []\n\n  async findById(id: string){\n\t\treturn this.db.find(hello=\u003Ehello.id===id)\n  }\n\n  async create(message: string){\n\t\tconst id = uuid()\n\t\tconst hello = {id, message}\n\t\tthis.db.push(hello)\n\t\treturn hello;\n  }\n\n  async deleteById(id: string){\n\t\tthis.db = this.db.filter(hello=\u003Ehello.id!==id)\n    return `DELETED node ${id} from db`\n  }\n}\n```\n\nNow, lets convert the `HelloController` for using `HelloService` through Dependency Injection. But before we've to put `HelloService` inside the `HelloModule`\n\n\u003E A module is a class annotated with a `@Module()` decorator. The `@Module()` decorator provides metadata that Nest makes use of to organize the application structure. Each application has at least one module, **a root module**. The root module is the starting point Nest uses to build the application graph - the internal data structure Nest uses to resolve module and provider relationships and dependencies\n\nThat module is the main thing that helps Nest making the dependency graph for Dependency Injection. Example of an `app.module.ts` :\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F app.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\nimport { Module } from '@nestjs\u002Fcommon';\n\u002F*This is the base '\u002F' controller *\u002F\nimport { AppController } from '.\u002Fapp.controller';\n\u002F* basic provider for AppController *\u002F\nimport { AppService } from '.\u002Fapp.service';\n\n@Module({\n  \u002F*this where descendent modules get added\n\t\t\twe've to do this if we were importing another inside\n\t\t\tan other module to be able to use its providers\n     *\u002F\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n```\n\nWe've to add every providers (`Injectable`)\u002Fcontrollers that we use inside our controller\u002Fprovider in a module. Lets put `HelloService` & `HelloController` in `HelloModule`:\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F hello.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\nimport {Module} from \"@nestjs\u002Fcommon\"\nimport {HelloService} from \".\u002Fhello.service\"\nimport {HelloController} from \".\u002Fhello.controller\"\n\n@Module({\n  \u002F* put all providers that is under this module graph to help Nest to\n\t\t inject those in the controllers\n  *\u002F\n\tproviders: [HelloService],\n  \u002F* put controllers here for letting Nest recognize all the route\u002Fpath &\n     their handlers\n\t*\u002F\n  controllers: [HelloController],\n  \u002F*put those providers which you wanna use outside of this module\n    In an outside module when HelloModule gets imported\n  *\u002F\n  exports: []\n})\nexport class HelloModule{}\n```\n\nTo let Nest recognize `HelloModule`  as module, lets add `HelloModule` inside the `imports` array of `AppModule`:\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F app.module.ts \u002F\u002F\u002F\u002F\u002F\u002F\n\u002F\u002F ... previously imported stuff\nimport {HelloModule} from \".\u002Fhello\u002Fhello.module\"\n\n@Module({\n    imports: [HelloModule],\n    \u002F\u002F ... other properties previously added\n})\nexport class AppModule {}\n```\n\n\u003E And this `AppModule` is used as the entrypoint of `NestFactory` instance in `main.ts`\n\nNow we can easily use `HelloService`  inside `HelloController` or in other Module's controllers\u002Fproviders\n\n```tsx\n\u002F\u002F\u002F\u002F\u002F\u002F hello.controller.ts \u002F\u002F\u002F\u002F\u002F\u002F\n\u002F\u002F ... previously imported stuff\nimport {HelloService} from \".\u002Fhello.service\"\n\n@Controller()\nexport class HelloController{\n\n    logger: Logger = new Logger(HelloController.name)\n\n    \u002F* just create a contructor arg and set the type as the provider\n\t\t\t & that's gonna do the work\n\t\t *\u002F\n    constructor(private readonly helloService: HelloService){}\n\n    @Get(\"hello\")\n    async replyHello() {\n        try {\n            return \"Hello\";\n        } catch (error) {\n            this.logger.error(error?.message ?? \"\");\n            throw error;\n        }\n    }\n\n    @Get(\"hello\u002F:helloId\")\n\t\tasync replyExactHello(@Param(\"helloId\") id: string) {\n        try {\n            \u002F*using provider's methods*\u002F\n            const message = await this.helloService.find(id)?.message;\n\t\t\t\t\t\tif(!message) throw new NotFoundException(\"desired `hello` not found\") \u002F\u002F404 error\n            return message;\n        } catch (error) {\n            this.logger.error(error?.message ?? \"\");\n            throw error;\n        }\n    }\n  \n\n\t  @Post(\"hello\")\n\t\tsaveHello(@Body() body: HelloBodyDTO){\n\t\t\ttry{\n        \u002F* creating `hello` using the provider HelloService *\u002F\n\t\t\t\treturn await this.helloService.create(body.message)\n\t\t\t}\n\t\t\tcatch (error){\n\t\t\t\tthis.logger.error(error?.message ?? \"\");\n        throw error;\n\t\t\t}\n\t\t}\n}\n```\n\nDon't be afraid of Nestjs's Module system. Its hard for the first time but once you get the idea, it all makes sense & this module system is required for Nestjs to do all those cool Dependecy Injection.\n\nBTW, you don't have to add providers\u002Fcontrollers manually in the Module. If you create modules\u002Fproviders\u002Fcontroller using the **nest-cli,** it'll be done automatically. Above mentioned Module managing steps can be done automatically just by using these 3 commands\n\ncreate a **module**:\n\n```bash\n$ nest g module hello\n```\n\ncreate a **controller**:\n\n```bash\n$ nest g controller hello\n```\n\ncreate a **provider**:\n\n```bash\n$ nest g provider hello\n```\n\nPlease don't hurt meüò∂. I know, I should've shown this easier way earlierüòÅ. But that idea of how module works in Nestjs often troubles people to not use Nestjs. So its important to getting the deep insight of it. You can take deep insight of Nestjs Module system [here](https:\u002F\u002Fdocs.nestjs.com\u002Fmodules)\n\nHere's the complete application\n\n{% codesandbox hello-world-rj3u4 %}";a.user={name:"KR Tirtho",username:"krtirtho",twitter_username:"KrTirtho",github_username:"KRTirtho",website_url:e,profile_image:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--sR5iyDX---\u002Fc_fill,f_auto,fl_progressive,h_640,q_auto,w_640\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F512998\u002F97dd6568-52f4-41aa-9a3a-d2e2a1d298cf.jpeg",profile_image_90:"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--KiB9XEQx--\u002Fc_fill,f_auto,fl_progressive,h_90,q_auto,w_90\u002Fhttps:\u002F\u002Fdev-to-uploads.s3.amazonaws.com\u002Fuploads\u002Fuser\u002Fprofile_image\u002F512998\u002F97dd6568-52f4-41aa-9a3a-d2e2a1d298cf.jpeg"};return {data:[{}],fetch:{"data-v-25febe66:0":{article:a}},mutations:[["SET_CURRENT_ARTICLE",a]]}}({},"https:\u002F\u002Fdev.to\u002Fkrtirtho\u002Fnestjs-the-framework-of-nodejs-part-1-gl7",340,"2021-08-08T07:36:51Z",null)));